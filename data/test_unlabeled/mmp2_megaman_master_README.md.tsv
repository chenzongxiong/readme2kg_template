#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# megaman: Manifold Learning for Millions of Points  <img src="https://raw.githubusercontent.com/mmp2/megaman/master/doc/images/word2vec\_rmetric\_plot\_no\_digits.png" height=200><img src="https://raw.githubusercontent.com/mmp2/megaman/master/doc/images/spectra\_D4000.png" height=200><img src="https://raw.githubusercontent.com/mmp2/megaman/master/doc/images/spectra\_Halpha.png" height=200>  \[!
1-1	0-1	#	_	_
1-2	2-9	megaman	_	_
1-3	9-10	:	_	_
1-4	11-19	Manifold	_	_
1-5	20-28	Learning	_	_
1-6	29-32	for	_	_
1-7	33-41	Millions	_	_
1-8	42-44	of	_	_
1-9	45-51	Points	_	_
1-10	53-54	<	_	_
1-11	54-57	img	_	_
1-12	58-61	src	_	_
1-13	61-62	=	_	_
1-14	62-63	"	_	_
1-15	63-68	https	_	_
1-16	68-69	:	_	_
1-17	69-70	/	_	_
1-18	70-71	/	_	_
1-19	71-96	raw.githubusercontent.com	_	_
1-20	96-97	/	_	_
1-21	97-101	mmp2	_	_
1-22	101-102	/	_	_
1-23	102-109	megaman	_	_
1-24	109-110	/	_	_
1-25	110-116	master	_	_
1-26	116-117	/	_	_
1-27	117-120	doc	_	_
1-28	120-121	/	_	_
1-29	121-127	images	_	_
1-30	127-128	/	_	_
1-31	128-163	word2vec\_rmetric\_plot\_no\_digits.png	_	_
1-32	163-164	"	_	_
1-33	165-171	height	_	_
1-34	171-172	=	_	_
1-35	172-175	200	_	_
1-36	175-176	>	_	_
1-37	176-177	<	_	_
1-38	177-180	img	_	_
1-39	181-184	src	_	_
1-40	184-185	=	_	_
1-41	185-186	"	_	_
1-42	186-191	https	_	_
1-43	191-192	:	_	_
1-44	192-193	/	_	_
1-45	193-194	/	_	_
1-46	194-219	raw.githubusercontent.com	_	_
1-47	219-220	/	_	_
1-48	220-224	mmp2	_	_
1-49	224-225	/	_	_
1-50	225-232	megaman	_	_
1-51	232-233	/	_	_
1-52	233-239	master	_	_
1-53	239-240	/	_	_
1-54	240-243	doc	_	_
1-55	243-244	/	_	_
1-56	244-250	images	_	_
1-57	250-251	/	_	_
1-58	251-264	spectra\_D4000	_	_
1-59	264-265	.	_	_
1-60	265-268	png	_	_
1-61	268-269	"	_	_
1-62	270-276	height	_	_
1-63	276-277	=	_	_
1-64	277-280	200	_	_
1-65	280-281	>	_	_
1-66	281-282	<	_	_
1-67	282-285	img	_	_
1-68	286-289	src	_	_
1-69	289-290	=	_	_
1-70	290-291	"	_	_
1-71	291-296	https	_	_
1-72	296-297	:	_	_
1-73	297-298	/	_	_
1-74	298-299	/	_	_
1-75	299-324	raw.githubusercontent.com	_	_
1-76	324-325	/	_	_
1-77	325-329	mmp2	_	_
1-78	329-330	/	_	_
1-79	330-337	megaman	_	_
1-80	337-338	/	_	_
1-81	338-344	master	_	_
1-82	344-345	/	_	_
1-83	345-348	doc	_	_
1-84	348-349	/	_	_
1-85	349-355	images	_	_
1-86	355-356	/	_	_
1-87	356-374	spectra\_Halpha.png	_	_
1-88	374-375	"	_	_
1-89	376-382	height	_	_
1-90	382-383	=	_	_
1-91	383-386	200	_	_
1-92	386-387	>	_	_
1-93	389-390	\[	_	_
1-94	390-391	!	_	_

#Text=\[Anaconda-Server Badge\](https://anaconda.org/conda-forge/megaman/badges/downloads.svg)\](https://anaconda.org/conda-forge/megaman) \[!
2-1	391-392	\[	_	_
2-2	392-407	Anaconda-Server	_	_
2-2	392-400	Anaconda	_	_
2-3	408-413	Badge	_	_
2-4	413-414	\]	_	_
2-5	414-415	(	_	_
2-6	415-420	https	_	_
2-7	420-421	:	_	_
2-8	421-422	/	_	_
2-9	422-423	/	_	_
2-10	423-435	anaconda.org	_	_
2-10	423-431	anaconda	_	_
2-11	435-436	/	_	_
2-12	436-447	conda-forge	_	_
2-13	447-448	/	_	_
2-14	448-455	megaman	_	_
2-15	455-456	/	_	_
2-16	456-462	badges	_	_
2-17	462-463	/	_	_
2-18	463-476	downloads.svg	_	_
2-19	476-477	)	_	_
2-20	477-478	\]	_	_
2-21	478-479	(	_	_
2-22	479-484	https	_	_
2-23	484-485	:	_	_
2-24	485-486	/	_	_
2-25	486-487	/	_	_
2-26	487-499	anaconda.org	_	_
2-26	487-495	anaconda	_	_
2-27	499-500	/	_	_
2-28	500-511	conda-forge	_	_
2-29	511-512	/	_	_
2-30	512-519	megaman	_	_
2-31	519-520	)	_	_
2-32	521-522	\[	_	_
2-33	522-523	!	_	_

#Text=\[build status\](http://img.shields.io/travis/mmp2/megaman/master.svg?
3-1	523-524	\[	_	_
3-2	524-529	build	_	_
3-3	530-536	status	_	_
3-4	536-537	\]	_	_
3-5	537-538	(	_	_
3-6	538-542	http	_	_
3-7	542-543	:	_	_
3-8	543-544	/	_	_
3-9	544-545	/	_	_
3-10	545-559	img.shields.io	_	_
3-11	559-560	/	_	_
3-12	560-566	travis	_	_
3-13	566-567	/	_	_
3-14	567-571	mmp2	_	_
3-15	571-572	/	_	_
3-16	572-579	megaman	_	_
3-17	579-580	/	_	_
3-18	580-590	master.svg	_	_
3-19	590-591	?	_	_

#Text=style=flat)\](https://travis-ci.org/mmp2/megaman) \[!
4-1	591-596	style	_	_
4-2	596-597	=	_	_
4-3	597-601	flat	_	_
4-4	601-602	)	_	_
4-5	602-603	\]	_	_
4-6	603-604	(	_	_
4-7	604-609	https	_	_
4-8	609-610	:	_	_
4-9	610-611	/	_	_
4-10	611-612	/	_	_
4-11	612-625	travis-ci.org	_	_
4-12	625-626	/	_	_
4-13	626-630	mmp2	_	_
4-14	630-631	/	_	_
4-15	631-638	megaman	_	_
4-16	638-639	)	_	_
4-17	640-641	\[	_	_
4-18	641-642	!	_	_

#Text=\[version status\](http://img.shields.io/pypi/v/megaman.svg?
5-1	642-643	\[	_	_
5-2	643-650	version	_	_
5-3	651-657	status	_	_
5-4	657-658	\]	_	_
5-5	658-659	(	_	_
5-6	659-663	http	_	_
5-7	663-664	:	_	_
5-8	664-665	/	_	_
5-9	665-666	/	_	_
5-10	666-680	img.shields.io	_	_
5-11	680-681	/	_	_
5-12	681-685	pypi	_	_
5-13	685-686	/	_	_
5-14	686-687	v	_	_
5-15	687-688	/	_	_
5-16	688-699	megaman.svg	_	_
5-16	688-695	megaman	_	_
5-17	699-700	?	_	_

#Text=style=flat)\](https://pypi.python.org/pypi/megaman) \[!
6-1	700-705	style	_	_
6-2	705-706	=	_	_
6-3	706-710	flat	_	_
6-4	710-711	)	_	_
6-5	711-712	\]	_	_
6-6	712-713	(	_	_
6-7	713-718	https	_	_
6-8	718-719	:	_	_
6-9	719-720	/	_	_
6-10	720-721	/	_	_
6-11	721-736	pypi.python.org	_	_
6-11	726-732	python	_	_
6-12	736-737	/	_	_
6-13	737-741	pypi	_	_
6-14	741-742	/	_	_
6-15	742-749	megaman	_	_
6-16	749-750	)	_	_
6-17	751-752	\[	_	_
6-18	752-753	!	_	_

#Text=\[license\](http://img.shields.io/badge/license-BSD-blue.svg?
7-1	753-754	\[	_	_
7-2	754-761	license	_	_
7-3	761-762	\]	_	_
7-4	762-763	(	_	_
7-5	763-767	http	_	_
7-6	767-768	:	_	_
7-7	768-769	/	_	_
7-8	769-770	/	_	_
7-9	770-784	img.shields.io	_	_
7-10	784-785	/	_	_
7-11	785-790	badge	_	_
7-12	790-791	/	_	_
7-13	791-811	license-BSD-blue.svg	_	_
7-13	799-802	BSD	_	_
7-14	811-812	?	_	_

#Text=style=flat)\](https://github.com/mmp2/megaman/blob/master/LICENSE)  ``megaman`` is a scalable manifold learning package implemented in python.
8-1	812-817	style	_	_
8-2	817-818	=	_	_
8-3	818-822	flat	_	_
8-4	822-823	)	_	_
8-5	823-824	\]	_	_
8-6	824-825	(	_	_
8-7	825-830	https	_	_
8-8	830-831	:	_	_
8-9	831-832	/	_	_
8-10	832-833	/	_	_
8-11	833-843	github.com	_	_
8-12	843-844	/	_	_
8-13	844-848	mmp2	_	_
8-14	848-849	/	_	_
8-15	849-856	megaman	_	_
8-16	856-857	/	_	_
8-17	857-861	blob	_	_
8-18	861-862	/	_	_
8-19	862-868	master	_	_
8-20	868-869	/	_	_
8-21	869-876	LICENSE	_	_
8-22	876-877	)	_	_
8-23	879-880	`	_	_
8-24	880-881	`	_	_
8-25	881-888	megaman	_	_
8-26	888-889	`	_	_
8-27	889-890	`	_	_
8-28	891-893	is	_	_
8-29	894-895	a	_	_
8-30	896-904	scalable	_	_
8-31	905-913	manifold	_	_
8-32	914-922	learning	_	_
8-33	923-930	package	_	_
8-34	931-942	implemented	_	_
8-35	943-945	in	_	_
8-36	946-952	python	_	_
8-37	952-953	.	_	_

#Text=It has a front-end API designed to be familiar to \[scikit-learn\](http://scikit-learn.org/) but harnesses the C++ Fast Library for Approximate Nearest Neighbors (FLANN) and the Sparse Symmetric Positive Definite (SSPD) solver Locally Optimal Block Precodition Gradient (LOBPCG) method to scale manifold learning algorithms to large data sets.
9-1	954-956	It	_	_
9-2	957-960	has	_	_
9-3	961-962	a	_	_
9-4	963-972	front-end	_	_
9-5	973-976	API	_	_
9-6	977-985	designed	_	_
9-7	986-988	to	_	_
9-8	989-991	be	_	_
9-9	992-1000	familiar	_	_
9-10	1001-1003	to	_	_
9-11	1004-1005	\[	_	_
9-12	1005-1017	scikit-learn	_	_
9-13	1017-1018	\]	_	_
9-14	1018-1019	(	_	_
9-15	1019-1023	http	_	_
9-16	1023-1024	:	_	_
9-17	1024-1025	/	_	_
9-18	1025-1026	/	_	_
9-19	1026-1042	scikit-learn.org	_	_
9-19	1026-1038	scikit-learn	_	_
9-20	1042-1043	/	_	_
9-21	1043-1044	)	_	_
9-22	1045-1048	but	_	_
9-23	1049-1058	harnesses	_	_
9-24	1059-1062	the	_	_
9-25	1063-1064	C	_	_
9-26	1064-1065	+	_	_
9-27	1065-1066	+	_	_
9-28	1067-1071	Fast	_	_
9-29	1072-1079	Library	_	_
9-30	1080-1083	for	_	_
9-31	1084-1095	Approximate	_	_
9-32	1096-1103	Nearest	_	_
9-33	1104-1113	Neighbors	_	_
9-34	1114-1115	(	_	_
9-35	1115-1120	FLANN	_	_
9-36	1120-1121	)	_	_
9-37	1122-1125	and	_	_
9-38	1126-1129	the	_	_
9-39	1130-1136	Sparse	_	_
9-40	1137-1146	Symmetric	_	_
9-41	1147-1155	Positive	_	_
9-42	1156-1164	Definite	_	_
9-43	1165-1166	(	_	_
9-44	1166-1170	SSPD	_	_
9-45	1170-1171	)	_	_
9-46	1172-1178	solver	_	_
9-47	1179-1186	Locally	_	_
9-48	1187-1194	Optimal	_	_
9-49	1195-1200	Block	_	_
9-50	1201-1212	Precodition	_	_
9-51	1213-1221	Gradient	_	_
9-52	1222-1223	(	_	_
9-53	1223-1229	LOBPCG	_	_
9-54	1229-1230	)	_	_
9-55	1231-1237	method	_	_
9-56	1238-1240	to	_	_
9-57	1241-1246	scale	_	_
9-58	1247-1255	manifold	_	_
9-59	1256-1264	learning	_	_
9-60	1265-1275	algorithms	_	_
9-61	1276-1278	to	_	_
9-62	1279-1284	large	_	_
9-63	1285-1289	data	_	_
9-64	1290-1294	sets	_	_
9-65	1294-1295	.	_	_

#Text=On a personal computer megaman can embed 1 million data points with hundreds of dimensions in 10 minutes. megaman is designed for researchers and as such caches intermediary steps and indices to allow for fast re-computation with new parameters.
10-1	1296-1298	On	_	_
10-2	1299-1300	a	_	_
10-3	1301-1309	personal	_	_
10-4	1310-1318	computer	_	_
10-5	1319-1326	megaman	_	_
10-6	1327-1330	can	_	_
10-7	1331-1336	embed	_	_
10-8	1337-1338	1	_	_
10-9	1339-1346	million	_	_
10-10	1347-1351	data	_	_
10-11	1352-1358	points	_	_
10-12	1359-1363	with	_	_
10-13	1364-1372	hundreds	_	_
10-14	1373-1375	of	_	_
10-15	1376-1386	dimensions	_	_
10-16	1387-1389	in	_	_
10-17	1390-1392	10	_	_
10-18	1393-1400	minutes	_	_
10-19	1400-1401	.	_	_
10-20	1402-1409	megaman	_	_
10-21	1410-1412	is	_	_
10-22	1413-1421	designed	_	_
10-23	1422-1425	for	_	_
10-24	1426-1437	researchers	_	_
10-25	1438-1441	and	_	_
10-26	1442-1444	as	_	_
10-27	1445-1449	such	_	_
10-28	1450-1456	caches	_	_
10-29	1457-1469	intermediary	_	_
10-30	1470-1475	steps	_	_
10-31	1476-1479	and	_	_
10-32	1480-1487	indices	_	_
10-33	1488-1490	to	_	_
10-34	1491-1496	allow	_	_
10-35	1497-1500	for	_	_
10-36	1501-1505	fast	_	_
10-37	1506-1520	re-computation	_	_
10-38	1521-1525	with	_	_
10-39	1526-1529	new	_	_
10-40	1530-1540	parameters	_	_
10-41	1540-1541	.	_	_

#Text=Package documentation can be found at http://mmp2.github.io/megaman/  If you use our software please cite the following JMLR paper:  McQueen, Meila, VanderPlas, & Zhang, "Megaman: Scalable Manifold Learning in Python", Journal of Machine Learning Research, Vol 17 no. 14, 2016. http://jmlr.org/papers/v17/16-109.html  You can also find our arXiv paper at http://arxiv.org/abs/1603.02763  ## Examples  - \[Tutorial Notebook\]( https://github.com/mmp2/megaman/blob/master/examples/megaman\_tutorial.ipynb)  ## Installation and Examples in Google Colab  Below it's a tutorial to install megaman on Google Colab, through Conda environment.
11-1	1543-1550	Package	_	_
11-2	1551-1564	documentation	_	_
11-3	1565-1568	can	_	_
11-4	1569-1571	be	_	_
11-5	1572-1577	found	_	_
11-6	1578-1580	at	_	_
11-7	1581-1585	http	_	_
11-8	1585-1586	:	_	_
11-9	1586-1587	/	_	_
11-10	1587-1588	/	_	_
11-11	1588-1592	mmp2	_	_
11-12	1592-1593	.	_	_
11-13	1593-1602	github.io	_	_
11-14	1602-1603	/	_	_
11-15	1603-1610	megaman	_	_
11-16	1610-1611	/	_	_
11-17	1613-1615	If	_	_
11-18	1616-1619	you	_	_
11-19	1620-1623	use	_	_
11-20	1624-1627	our	_	_
11-21	1628-1636	software	_	_
11-22	1637-1643	please	_	_
11-23	1644-1648	cite	_	_
11-24	1649-1652	the	_	_
11-25	1653-1662	following	_	_
11-26	1663-1667	JMLR	_	_
11-27	1668-1673	paper	_	_
11-28	1673-1674	:	_	_
11-29	1676-1683	McQueen	_	_
11-30	1683-1684	,	_	_
11-31	1685-1690	Meila	_	_
11-32	1690-1691	,	_	_
11-33	1692-1702	VanderPlas	_	_
11-34	1702-1703	,	_	_
11-35	1704-1705	&	_	_
11-36	1706-1711	Zhang	_	_
11-37	1711-1712	,	_	_
11-38	1713-1714	"	_	_
11-39	1714-1721	Megaman	_	_
11-40	1721-1722	:	_	_
11-41	1723-1731	Scalable	_	_
11-42	1732-1740	Manifold	_	_
11-43	1741-1749	Learning	_	_
11-44	1750-1752	in	_	_
11-45	1753-1759	Python	_	_
11-46	1759-1760	"	_	_
11-47	1760-1761	,	_	_
11-48	1762-1769	Journal	_	_
11-49	1770-1772	of	_	_
11-50	1773-1780	Machine	_	_
11-51	1781-1789	Learning	_	_
11-52	1790-1798	Research	_	_
11-53	1798-1799	,	_	_
11-54	1800-1803	Vol	_	_
11-55	1804-1806	17	_	_
11-56	1807-1809	no	_	_
11-57	1809-1810	.	_	_
11-58	1811-1813	14	_	_
11-59	1813-1814	,	_	_
11-60	1815-1819	2016	_	_
11-61	1819-1820	.	_	_
11-62	1821-1825	http	_	_
11-63	1825-1826	:	_	_
11-64	1826-1827	/	_	_
11-65	1827-1828	/	_	_
11-66	1828-1836	jmlr.org	_	_
11-67	1836-1837	/	_	_
11-68	1837-1843	papers	_	_
11-69	1843-1844	/	_	_
11-70	1844-1847	v17	_	_
11-71	1847-1848	/	_	_
11-72	1848-1850	16	_	_
11-73	1850-1851	-	_	_
11-74	1851-1854	109	_	_
11-75	1854-1855	.	_	_
11-76	1855-1859	html	_	_
11-77	1861-1864	You	_	_
11-78	1865-1868	can	_	_
11-79	1869-1873	also	_	_
11-80	1874-1878	find	_	_
11-81	1879-1882	our	_	_
11-82	1883-1888	arXiv	_	_
11-83	1889-1894	paper	_	_
11-84	1895-1897	at	_	_
11-85	1898-1902	http	_	_
11-86	1902-1903	:	_	_
11-87	1903-1904	/	_	_
11-88	1904-1905	/	_	_
11-89	1905-1914	arxiv.org	_	_
11-90	1914-1915	/	_	_
11-91	1915-1918	abs	_	_
11-92	1918-1919	/	_	_
11-93	1919-1929	1603.02763	_	_
11-94	1931-1932	#	_	_
11-95	1932-1933	#	_	_
11-96	1934-1942	Examples	_	_
11-97	1944-1945	-	_	_
11-98	1946-1947	\[	_	_
11-99	1947-1955	Tutorial	_	_
11-100	1956-1964	Notebook	_	_
11-101	1964-1965	\]	_	_
11-102	1965-1966	(	_	_
11-103	1967-1972	https	_	_
11-104	1972-1973	:	_	_
11-105	1973-1974	/	_	_
11-106	1974-1975	/	_	_
11-107	1975-1985	github.com	_	_
11-108	1985-1986	/	_	_
11-109	1986-1990	mmp2	_	_
11-110	1990-1991	/	_	_
11-111	1991-1998	megaman	_	_
11-112	1998-1999	/	_	_
11-113	1999-2003	blob	_	_
11-114	2003-2004	/	_	_
11-115	2004-2010	master	_	_
11-116	2010-2011	/	_	_
11-117	2011-2019	examples	_	_
11-118	2019-2020	/	_	_
11-119	2020-2042	megaman\_tutorial.ipynb	_	_
11-119	2020-2027	megaman	_	_
11-120	2042-2043	)	_	_
11-121	2045-2046	#	_	_
11-122	2046-2047	#	_	_
11-123	2048-2060	Installation	_	_
11-124	2061-2064	and	_	_
11-125	2065-2073	Examples	_	_
11-126	2074-2076	in	_	_
11-127	2077-2083	Google	_	_
11-128	2084-2089	Colab	_	_
11-129	2091-2096	Below	_	_
11-130	2097-2101	it's	_	_
11-131	2102-2103	a	_	_
11-132	2104-2112	tutorial	_	_
11-133	2113-2115	to	_	_
11-134	2116-2123	install	_	_
11-135	2124-2131	megaman	_	_
11-136	2132-2134	on	_	_
11-137	2135-2141	Google	_	_
11-138	2142-2147	Colab	_	_
11-139	2147-2148	,	_	_
11-140	2149-2156	through	_	_
11-141	2157-2162	Conda	_	_
11-142	2163-2174	environment	_	_
11-143	2174-2175	.	_	_

#Text=It also provides tutorial of using megaman to build spectral embedding on uniform swiss roll dataset
12-1	2177-2179	It	_	_
12-2	2180-2184	also	_	_
12-3	2185-2193	provides	_	_
12-4	2194-2202	tutorial	_	_
12-5	2203-2205	of	_	_
12-6	2206-2211	using	_	_
12-7	2212-2219	megaman	_	_
12-8	2220-2222	to	_	_
12-9	2223-2228	build	_	_
12-10	2229-2237	spectral	_	_
12-11	2238-2247	embedding	_	_
12-12	2248-2250	on	_	_
12-13	2251-2258	uniform	_	_
12-14	2259-2264	swiss	_	_
12-15	2265-2269	roll	_	_
12-16	2270-2277	dataset	_	_

#Text=.
13-1	2277-2278	.	_	_

#Text=- \[Install & Example script\]( https://colab.research.google.com/drive/1ms22YK3TvrIx0gji6UZqG0zoSNRCWtXj?
14-1	2280-2281	-	_	_
14-2	2282-2283	\[	_	_
14-3	2283-2290	Install	_	_
14-4	2291-2292	&	_	_
14-5	2293-2300	Example	_	_
14-6	2301-2307	script	_	_
14-7	2307-2308	\]	_	_
14-8	2308-2309	(	_	_
14-9	2310-2315	https	_	_
14-10	2315-2316	:	_	_
14-11	2316-2317	/	_	_
14-12	2317-2318	/	_	_
14-13	2318-2343	colab.research.google.com	_	_
14-14	2343-2344	/	_	_
14-15	2344-2349	drive	_	_
14-16	2349-2350	/	_	_
14-17	2350-2383	1ms22YK3TvrIx0gji6UZqG0zoSNRCWtXj	_	_
14-18	2383-2384	?	_	_

#Text=usp=sharing) - \[You can download the Jupyter Notebook version here\]( https://github.com/mmp2/megaman/blob/master/examples/megaman\_install\_usage\_colab.ipynb)  ## ~~Installation with Conda~~  <!
15-1	2384-2387	usp	_	_
15-2	2387-2388	=	_	_
15-3	2388-2395	sharing	_	_
15-4	2395-2396	)	_	_
15-5	2397-2398	-	_	_
15-6	2399-2400	\[	_	_
15-7	2400-2403	You	_	_
15-8	2404-2407	can	_	_
15-9	2408-2416	download	_	_
15-10	2417-2420	the	_	_
15-11	2421-2428	Jupyter	_	_
15-12	2429-2437	Notebook	_	_
15-13	2438-2445	version	_	_
15-14	2446-2450	here	_	_
15-15	2450-2451	\]	_	_
15-16	2451-2452	(	_	_
15-17	2453-2458	https	_	_
15-18	2458-2459	:	_	_
15-19	2459-2460	/	_	_
15-20	2460-2461	/	_	_
15-21	2461-2471	github.com	_	_
15-22	2471-2472	/	_	_
15-23	2472-2476	mmp2	_	_
15-24	2476-2477	/	_	_
15-25	2477-2484	megaman	_	_
15-26	2484-2485	/	_	_
15-27	2485-2489	blob	_	_
15-28	2489-2490	/	_	_
15-29	2490-2496	master	_	_
15-30	2496-2497	/	_	_
15-31	2497-2505	examples	_	_
15-32	2505-2506	/	_	_
15-33	2506-2539	megaman\_install\_usage\_colab.ipynb	_	_
15-33	2506-2513	megaman	_	_
15-34	2539-2540	)	_	_
15-35	2542-2543	#	_	_
15-36	2543-2544	#	_	_
15-37	2545-2546	~	_	_
15-38	2546-2547	~	_	_
15-39	2547-2559	Installation	_	_
15-40	2560-2564	with	_	_
15-41	2565-2570	Conda	_	_
15-42	2570-2571	~	_	_
15-43	2571-2572	~	_	_
15-44	2574-2575	<	_	_
15-45	2575-2576	!	_	_

#Text=-- The easiest way to install ``megaman`` and its dependencies is with \[conda\](http://conda.pydata.org/miniconda.html), the cross-platform package manager for the scientific Python ecosystem.
16-1	2576-2577	-	_	_
16-2	2577-2578	-	_	_
16-3	2579-2582	The	_	_
16-4	2583-2590	easiest	_	_
16-5	2591-2594	way	_	_
16-6	2595-2597	to	_	_
16-7	2598-2605	install	_	_
16-8	2606-2607	`	_	_
16-9	2607-2608	`	_	_
16-10	2608-2615	megaman	_	_
16-11	2615-2616	`	_	_
16-12	2616-2617	`	_	_
16-13	2618-2621	and	_	_
16-14	2622-2625	its	_	_
16-15	2626-2638	dependencies	_	_
16-16	2639-2641	is	_	_
16-17	2642-2646	with	_	_
16-18	2647-2648	\[	_	_
16-19	2648-2653	conda	_	_
16-20	2653-2654	\]	_	_
16-21	2654-2655	(	_	_
16-22	2655-2659	http	_	_
16-23	2659-2660	:	_	_
16-24	2660-2661	/	_	_
16-25	2661-2662	/	_	_
16-26	2662-2678	conda.pydata.org	_	_
16-26	2662-2667	conda	_	_
16-27	2678-2679	/	_	_
16-28	2679-2693	miniconda.html	_	_
16-29	2693-2694	)	_	_
16-30	2694-2695	,	_	_
16-31	2696-2699	the	_	_
16-32	2700-2714	cross-platform	_	_
16-33	2715-2722	package	_	_
16-34	2723-2730	manager	_	_
16-35	2731-2734	for	_	_
16-36	2735-2738	the	_	_
16-37	2739-2749	scientific	_	_
16-38	2750-2756	Python	_	_
16-39	2757-2766	ecosystem	_	_
16-40	2766-2767	.	_	_

#Text=To install megaman and its dependencies, run  ``` $ conda install megaman --channel=conda-forge ```  Currently builds are available for OSX and Linux, on Python 2.7, 3.4, and 3.5.
17-1	2769-2771	To	_	_
17-2	2772-2779	install	_	_
17-3	2780-2787	megaman	_	_
17-4	2788-2791	and	_	_
17-5	2792-2795	its	_	_
17-6	2796-2808	dependencies	_	_
17-7	2808-2809	,	_	_
17-8	2810-2813	run	_	_
17-9	2815-2816	`	_	_
17-10	2816-2817	`	_	_
17-11	2817-2818	`	_	_
17-12	2819-2820	$	_	_
17-13	2821-2826	conda	_	_
17-14	2827-2834	install	_	_
17-15	2835-2842	megaman	_	_
17-16	2843-2844	-	_	_
17-17	2844-2845	-	_	_
17-18	2845-2852	channel	_	_
17-19	2852-2853	=	_	_
17-20	2853-2864	conda-forge	_	_
17-21	2865-2866	`	_	_
17-22	2866-2867	`	_	_
17-23	2867-2868	`	_	_
17-24	2870-2879	Currently	_	_
17-25	2880-2886	builds	_	_
17-26	2887-2890	are	_	_
17-27	2891-2900	available	_	_
17-28	2901-2904	for	_	_
17-29	2905-2908	OSX	_	_
17-30	2909-2912	and	_	_
17-31	2913-2918	Linux	_	_
17-32	2918-2919	,	_	_
17-33	2920-2922	on	_	_
17-34	2923-2929	Python	_	_
17-35	2930-2933	2.7	_	_
17-36	2933-2934	,	_	_
17-37	2935-2938	3.4	_	_
17-38	2938-2939	,	_	_
17-39	2940-2943	and	_	_
17-40	2944-2947	3.5	_	_
17-41	2947-2948	.	_	_

#Text=For other operating systems, see the full install instructions below. -\->  Due to the change of API, `$ conda install -c conda-forge megaman` is no longer supported.
18-1	2949-2952	For	_	_
18-2	2953-2958	other	_	_
18-3	2959-2968	operating	_	_
18-4	2969-2976	systems	_	_
18-5	2976-2977	,	_	_
18-6	2978-2981	see	_	_
18-7	2982-2985	the	_	_
18-8	2986-2990	full	_	_
18-9	2991-2998	install	_	_
18-10	2999-3011	instructions	_	_
18-11	3012-3017	below	_	_
18-12	3017-3018	.	_	_
18-13	3019-3020	-	_	_
18-14	3020-3021	-	_	_
18-15	3021-3022	>	_	_
18-16	3024-3027	Due	_	_
18-17	3028-3030	to	_	_
18-18	3031-3034	the	_	_
18-19	3035-3041	change	_	_
18-20	3042-3044	of	_	_
18-21	3045-3048	API	_	_
18-22	3048-3049	,	_	_
18-23	3050-3051	`	_	_
18-24	3051-3052	$	_	_
18-25	3053-3058	conda	_	_
18-26	3059-3066	install	_	_
18-27	3067-3068	-	_	_
18-28	3068-3069	c	_	_
18-29	3070-3081	conda-forge	_	_
18-30	3082-3089	megaman	_	_
18-31	3089-3090	`	_	_
18-32	3091-3093	is	_	_
18-33	3094-3096	no	_	_
18-34	3097-3103	longer	_	_
18-35	3104-3113	supported	_	_
18-36	3113-3114	.	_	_

#Text=We are currently working on fixing the bug.
19-1	3115-3117	We	_	_
19-2	3118-3121	are	_	_
19-3	3122-3131	currently	_	_
19-4	3132-3139	working	_	_
19-5	3140-3142	on	_	_
19-6	3143-3149	fixing	_	_
19-7	3150-3153	the	_	_
19-8	3154-3157	bug	_	_
19-9	3157-3158	.	_	_

#Text=Please see the full install instructions below to build `megaman` from source.  ## Installation from source  To install megaman from source requires the following:  - \[python\](http://python.org) tested with versions 2.7, 3.5 and 3.6 - \[numpy\](http://numpy.org) version 1.8 or higher - \[scipy\](http://scipy.org) version 0.16.0 or higher - \[scikit-learn\](http://scikit-learn.org) - \[FLANN\](http://www.cs.ubc.ca/research/flann/) - \[pyflann\](http://www.cs.ubc.ca/research/flann/) which offers another method of computing distance matrices (this is bundled with the FLANN source code) - \[cython\](http://cython.org/) - a C++ compiler such as ``gcc``/``g++``  Optional requirements include  - \[pyamg\](http://pyamg.org/), which allows for faster decompositions of large matrices - \[nose\](https://nose.readthedocs.org/) for running the unit tests - \[h5py\](http://www.h5py.org) for reading testing .mat files - \[plotly\](https://plot.ly) an graphing library for interactive plot   These requirements can be installed on Linux and MacOSX using the following conda command:  ```shell $ conda create -n manifold\_env python=3.5 -y # can also use python=2.7 or python=3.6  $ source activate manifold\_env $ conda install --channel=conda-forge -y pip nose coverage cython numpy scipy \\                                          scikit-learn pyflann pyamg h5py plotly ```  Clone this repository and `cd` into source repository  ```shell $ cd /tmp/ $ git clone https://github.com/mmp2/megaman.git $ cd megaman ```  Finally, within the source repository, run this command to install the ``megaman`` package itself: ```shell $ python setup.py install ```  ## Unit Tests megaman uses ``nose`` for unit tests.
20-1	3160-3166	Please	_	_
20-2	3167-3170	see	_	_
20-3	3171-3174	the	_	_
20-4	3175-3179	full	_	_
20-5	3180-3187	install	_	_
20-6	3188-3200	instructions	_	_
20-7	3201-3206	below	_	_
20-8	3207-3209	to	_	_
20-9	3210-3215	build	_	_
20-10	3216-3217	`	_	_
20-11	3217-3224	megaman	_	_
20-12	3224-3225	`	_	_
20-13	3226-3230	from	_	_
20-14	3231-3237	source	_	_
20-15	3237-3238	.	_	_
20-16	3240-3241	#	_	_
20-17	3241-3242	#	_	_
20-18	3243-3255	Installation	_	_
20-19	3256-3260	from	_	_
20-20	3261-3267	source	_	_
20-21	3269-3271	To	_	_
20-22	3272-3279	install	_	_
20-23	3280-3287	megaman	_	_
20-24	3288-3292	from	_	_
20-25	3293-3299	source	_	_
20-26	3300-3308	requires	_	_
20-27	3309-3312	the	_	_
20-28	3313-3322	following	_	_
20-29	3322-3323	:	_	_
20-30	3325-3326	-	_	_
20-31	3327-3328	\[	_	_
20-32	3328-3334	python	_	_
20-33	3334-3335	\]	_	_
20-34	3335-3336	(	_	_
20-35	3336-3340	http	_	_
20-36	3340-3341	:	_	_
20-37	3341-3342	/	_	_
20-38	3342-3343	/	_	_
20-39	3343-3353	python.org	_	_
20-40	3353-3354	)	_	_
20-41	3355-3361	tested	_	_
20-42	3362-3366	with	_	_
20-43	3367-3375	versions	_	_
20-44	3376-3379	2.7	_	_
20-45	3379-3380	,	_	_
20-46	3381-3384	3.5	_	_
20-47	3385-3388	and	_	_
20-48	3389-3392	3.6	_	_
20-49	3393-3394	-	_	_
20-50	3395-3396	\[	_	_
20-51	3396-3401	numpy	_	_
20-52	3401-3402	\]	_	_
20-53	3402-3403	(	_	_
20-54	3403-3407	http	_	_
20-55	3407-3408	:	_	_
20-56	3408-3409	/	_	_
20-57	3409-3410	/	_	_
20-58	3410-3419	numpy.org	_	_
20-58	3410-3415	numpy	_	_
20-59	3419-3420	)	_	_
20-60	3421-3428	version	_	_
20-61	3429-3432	1.8	_	_
20-62	3433-3435	or	_	_
20-63	3436-3442	higher	_	_
20-64	3443-3444	-	_	_
20-65	3445-3446	\[	_	_
20-66	3446-3451	scipy	_	_
20-67	3451-3452	\]	_	_
20-68	3452-3453	(	_	_
20-69	3453-3457	http	_	_
20-70	3457-3458	:	_	_
20-71	3458-3459	/	_	_
20-72	3459-3460	/	_	_
20-73	3460-3469	scipy.org	_	_
20-73	3460-3465	scipy	_	_
20-74	3469-3470	)	_	_
20-75	3471-3478	version	_	_
20-76	3479-3485	0.16.0	_	_
20-77	3486-3488	or	_	_
20-78	3489-3495	higher	_	_
20-79	3496-3497	-	_	_
20-80	3498-3499	\[	_	_
20-81	3499-3511	scikit-learn	_	_
20-82	3511-3512	\]	_	_
20-83	3512-3513	(	_	_
20-84	3513-3517	http	_	_
20-85	3517-3518	:	_	_
20-86	3518-3519	/	_	_
20-87	3519-3520	/	_	_
20-88	3520-3536	scikit-learn.org	_	_
20-88	3520-3532	scikit-learn	_	_
20-89	3536-3537	)	_	_
20-90	3538-3539	-	_	_
20-91	3540-3541	\[	_	_
20-92	3541-3546	FLANN	_	_
20-93	3546-3547	\]	_	_
20-94	3547-3548	(	_	_
20-95	3548-3552	http	_	_
20-96	3552-3553	:	_	_
20-97	3553-3554	/	_	_
20-98	3554-3555	/	_	_
20-99	3555-3568	www.cs.ubc.ca	_	_
20-100	3568-3569	/	_	_
20-101	3569-3577	research	_	_
20-102	3577-3578	/	_	_
20-103	3578-3583	flann	_	_
20-104	3583-3584	/	_	_
20-105	3584-3585	)	_	_
20-106	3586-3587	-	_	_
20-107	3588-3589	\[	_	_
20-108	3589-3596	pyflann	_	_
20-109	3596-3597	\]	_	_
20-110	3597-3598	(	_	_
20-111	3598-3602	http	_	_
20-112	3602-3603	:	_	_
20-113	3603-3604	/	_	_
20-114	3604-3605	/	_	_
20-115	3605-3618	www.cs.ubc.ca	_	_
20-116	3618-3619	/	_	_
20-117	3619-3627	research	_	_
20-118	3627-3628	/	_	_
20-119	3628-3633	flann	_	_
20-120	3633-3634	/	_	_
20-121	3634-3635	)	_	_
20-122	3636-3641	which	_	_
20-123	3642-3648	offers	_	_
20-124	3649-3656	another	_	_
20-125	3657-3663	method	_	_
20-126	3664-3666	of	_	_
20-127	3667-3676	computing	_	_
20-128	3677-3685	distance	_	_
20-129	3686-3694	matrices	_	_
20-130	3695-3696	(	_	_
20-131	3696-3700	this	_	_
20-132	3701-3703	is	_	_
20-133	3704-3711	bundled	_	_
20-134	3712-3716	with	_	_
20-135	3717-3720	the	_	_
20-136	3721-3726	FLANN	_	_
20-137	3727-3733	source	_	_
20-138	3734-3738	code	_	_
20-139	3738-3739	)	_	_
20-140	3740-3741	-	_	_
20-141	3742-3743	\[	_	_
20-142	3743-3749	cython	_	_
20-143	3749-3750	\]	_	_
20-144	3750-3751	(	_	_
20-145	3751-3755	http	_	_
20-146	3755-3756	:	_	_
20-147	3756-3757	/	_	_
20-148	3757-3758	/	_	_
20-149	3758-3768	cython.org	_	_
20-149	3758-3764	cython	_	_
20-150	3768-3769	/	_	_
20-151	3769-3770	)	_	_
20-152	3771-3772	-	_	_
20-153	3773-3774	a	_	_
20-154	3775-3776	C	_	_
20-155	3776-3777	+	_	_
20-156	3777-3778	+	_	_
20-157	3779-3787	compiler	_	_
20-158	3788-3792	such	_	_
20-159	3793-3795	as	_	_
20-160	3796-3797	`	_	_
20-161	3797-3798	`	_	_
20-162	3798-3801	gcc	_	_
20-163	3801-3802	`	_	_
20-164	3802-3803	`	_	_
20-165	3803-3804	/	_	_
20-166	3804-3805	`	_	_
20-167	3805-3806	`	_	_
20-168	3806-3807	g	_	_
20-169	3807-3808	+	_	_
20-170	3808-3809	+	_	_
20-171	3809-3810	`	_	_
20-172	3810-3811	`	_	_
20-173	3813-3821	Optional	_	_
20-174	3822-3834	requirements	_	_
20-175	3835-3842	include	_	_
20-176	3844-3845	-	_	_
20-177	3846-3847	\[	_	_
20-178	3847-3852	pyamg	_	_
20-179	3852-3853	\]	_	_
20-180	3853-3854	(	_	_
20-181	3854-3858	http	_	_
20-182	3858-3859	:	_	_
20-183	3859-3860	/	_	_
20-184	3860-3861	/	_	_
20-185	3861-3870	pyamg.org	_	_
20-185	3861-3866	pyamg	_	_
20-186	3870-3871	/	_	_
20-187	3871-3872	)	_	_
20-188	3872-3873	,	_	_
20-189	3874-3879	which	_	_
20-190	3880-3886	allows	_	_
20-191	3887-3890	for	_	_
20-192	3891-3897	faster	_	_
20-193	3898-3912	decompositions	_	_
20-194	3913-3915	of	_	_
20-195	3916-3921	large	_	_
20-196	3922-3930	matrices	_	_
20-197	3931-3932	-	_	_
20-198	3933-3934	\[	_	_
20-199	3934-3938	nose	_	_
20-200	3938-3939	\]	_	_
20-201	3939-3940	(	_	_
20-202	3940-3945	https	_	_
20-203	3945-3946	:	_	_
20-204	3946-3947	/	_	_
20-205	3947-3948	/	_	_
20-206	3948-3968	nose.readthedocs.org	_	_
20-206	3948-3952	nose	_	_
20-207	3968-3969	/	_	_
20-208	3969-3970	)	_	_
20-209	3971-3974	for	_	_
20-210	3975-3982	running	_	_
20-211	3983-3986	the	_	_
20-212	3987-3991	unit	_	_
20-213	3992-3997	tests	_	_
20-214	3998-3999	-	_	_
20-215	4000-4001	\[	_	_
20-216	4001-4005	h5py	_	_
20-217	4005-4006	\]	_	_
20-218	4006-4007	(	_	_
20-219	4007-4011	http	_	_
20-220	4011-4012	:	_	_
20-221	4012-4013	/	_	_
20-222	4013-4014	/	_	_
20-223	4014-4026	www.h5py.org	_	_
20-223	4018-4022	h5py	_	_
20-224	4026-4027	)	_	_
20-225	4028-4031	for	_	_
20-226	4032-4039	reading	_	_
20-227	4040-4047	testing	_	_
20-228	4048-4049	.	_	_
20-229	4049-4052	mat	_	_
20-230	4053-4058	files	_	_
20-231	4059-4060	-	_	_
20-232	4061-4062	\[	_	_
20-233	4062-4068	plotly	_	_
20-234	4068-4069	\]	_	_
20-235	4069-4070	(	_	_
20-236	4070-4075	https	_	_
20-237	4075-4076	:	_	_
20-238	4076-4077	/	_	_
20-239	4077-4078	/	_	_
20-240	4078-4085	plot.ly	_	_
20-241	4085-4086	)	_	_
20-242	4087-4089	an	_	_
20-243	4090-4098	graphing	_	_
20-244	4099-4106	library	_	_
20-245	4107-4110	for	_	_
20-246	4111-4122	interactive	_	_
20-247	4123-4127	plot	_	_
20-248	4130-4135	These	_	_
20-249	4136-4148	requirements	_	_
20-250	4149-4152	can	_	_
20-251	4153-4155	be	_	_
20-252	4156-4165	installed	_	_
20-253	4166-4168	on	_	_
20-254	4169-4174	Linux	_	_
20-255	4175-4178	and	_	_
20-256	4179-4185	MacOSX	_	_
20-257	4186-4191	using	_	_
20-258	4192-4195	the	_	_
20-259	4196-4205	following	_	_
20-260	4206-4211	conda	_	_
20-261	4212-4219	command	_	_
20-262	4219-4220	:	_	_
20-263	4222-4223	`	_	_
20-264	4223-4224	`	_	_
20-265	4224-4225	`	_	_
20-266	4225-4230	shell	_	_
20-267	4231-4232	$	_	_
20-268	4233-4238	conda	_	_
20-269	4239-4245	create	_	_
20-270	4246-4247	-	_	_
20-271	4247-4248	n	_	_
20-272	4249-4261	manifold\_env	_	_
20-273	4262-4268	python	_	_
20-274	4268-4269	=	_	_
20-275	4269-4272	3.5	_	_
20-276	4273-4274	-	_	_
20-277	4274-4275	y	_	_
20-278	4276-4277	#	_	_
20-279	4278-4281	can	_	_
20-280	4282-4286	also	_	_
20-281	4287-4290	use	_	_
20-282	4291-4297	python	_	_
20-283	4297-4298	=	_	_
20-284	4298-4301	2.7	_	_
20-285	4302-4304	or	_	_
20-286	4305-4311	python	_	_
20-287	4311-4312	=	_	_
20-288	4312-4315	3.6	_	_
20-289	4317-4318	$	_	_
20-290	4319-4325	source	_	_
20-291	4326-4334	activate	_	_
20-292	4335-4347	manifold\_env	_	_
20-293	4348-4349	$	_	_
20-294	4350-4355	conda	_	_
20-295	4356-4363	install	_	_
20-296	4364-4365	-	_	_
20-297	4365-4366	-	_	_
20-298	4366-4373	channel	_	_
20-299	4373-4374	=	_	_
20-300	4374-4385	conda-forge	_	_
20-301	4386-4387	-	_	_
20-302	4387-4388	y	_	_
20-303	4389-4392	pip	_	_
20-304	4393-4397	nose	_	_
20-305	4398-4406	coverage	_	_
20-306	4407-4413	cython	_	_
20-307	4414-4419	numpy	_	_
20-308	4420-4425	scipy	_	_
20-309	4426-4427	\\	_	_
20-310	4469-4481	scikit-learn	_	_
20-311	4482-4489	pyflann	_	_
20-312	4490-4495	pyamg	_	_
20-313	4496-4500	h5py	_	_
20-314	4501-4507	plotly	_	_
20-315	4508-4509	`	_	_
20-316	4509-4510	`	_	_
20-317	4510-4511	`	_	_
20-318	4513-4518	Clone	_	_
20-319	4519-4523	this	_	_
20-320	4524-4534	repository	_	_
20-321	4535-4538	and	_	_
20-322	4539-4540	`	_	_
20-323	4540-4542	cd	_	_
20-324	4542-4543	`	_	_
20-325	4544-4548	into	_	_
20-326	4549-4555	source	_	_
20-327	4556-4566	repository	_	_
20-328	4568-4569	`	_	_
20-329	4569-4570	`	_	_
20-330	4570-4571	`	_	_
20-331	4571-4576	shell	_	_
20-332	4577-4578	$	_	_
20-333	4579-4581	cd	_	_
20-334	4582-4583	/	_	_
20-335	4583-4586	tmp	_	_
20-336	4586-4587	/	_	_
20-337	4588-4589	$	_	_
20-338	4590-4593	git	_	_
20-339	4594-4599	clone	_	_
20-340	4600-4605	https	_	_
20-341	4605-4606	:	_	_
20-342	4606-4607	/	_	_
20-343	4607-4608	/	_	_
20-344	4608-4618	github.com	_	_
20-345	4618-4619	/	_	_
20-346	4619-4623	mmp2	_	_
20-347	4623-4624	/	_	_
20-348	4624-4635	megaman.git	_	_
20-348	4624-4631	megaman	_	_
20-349	4636-4637	$	_	_
20-350	4638-4640	cd	_	_
20-351	4641-4648	megaman	_	_
20-352	4649-4650	`	_	_
20-353	4650-4651	`	_	_
20-354	4651-4652	`	_	_
20-355	4654-4661	Finally	_	_
20-356	4661-4662	,	_	_
20-357	4663-4669	within	_	_
20-358	4670-4673	the	_	_
20-359	4674-4680	source	_	_
20-360	4681-4691	repository	_	_
20-361	4691-4692	,	_	_
20-362	4693-4696	run	_	_
20-363	4697-4701	this	_	_
20-364	4702-4709	command	_	_
20-365	4710-4712	to	_	_
20-366	4713-4720	install	_	_
20-367	4721-4724	the	_	_
20-368	4725-4726	`	_	_
20-369	4726-4727	`	_	_
20-370	4727-4734	megaman	_	_
20-371	4734-4735	`	_	_
20-372	4735-4736	`	_	_
20-373	4737-4744	package	_	_
20-374	4745-4751	itself	_	_
20-375	4751-4752	:	_	_
20-376	4753-4754	`	_	_
20-377	4754-4755	`	_	_
20-378	4755-4756	`	_	_
20-379	4756-4761	shell	_	_
20-380	4762-4763	$	_	_
20-381	4764-4770	python	_	_
20-382	4771-4779	setup.py	_	_
20-383	4780-4787	install	_	_
20-384	4788-4789	`	_	_
20-385	4789-4790	`	_	_
20-386	4790-4791	`	_	_
20-387	4793-4794	#	_	_
20-388	4794-4795	#	_	_
20-389	4796-4800	Unit	_	_
20-390	4801-4806	Tests	_	_
20-391	4807-4814	megaman	_	_
20-392	4815-4819	uses	_	_
20-393	4820-4821	`	_	_
20-394	4821-4822	`	_	_
20-395	4822-4826	nose	_	_
20-396	4826-4827	`	_	_
20-397	4827-4828	`	_	_
20-398	4829-4832	for	_	_
20-399	4833-4837	unit	_	_
20-400	4838-4843	tests	_	_
20-401	4843-4844	.	_	_

#Text=With ``nose`` installed, type ``` $ make test ``` to run the unit tests.
21-1	4845-4849	With	_	_
21-2	4850-4851	`	_	_
21-3	4851-4852	`	_	_
21-4	4852-4856	nose	_	_
21-5	4856-4857	`	_	_
21-6	4857-4858	`	_	_
21-7	4859-4868	installed	_	_
21-8	4868-4869	,	_	_
21-9	4870-4874	type	_	_
21-10	4875-4876	`	_	_
21-11	4876-4877	`	_	_
21-12	4877-4878	`	_	_
21-13	4879-4880	$	_	_
21-14	4881-4885	make	_	_
21-15	4886-4890	test	_	_
21-16	4891-4892	`	_	_
21-17	4892-4893	`	_	_
21-18	4893-4894	`	_	_
21-19	4895-4897	to	_	_
21-20	4898-4901	run	_	_
21-21	4902-4905	the	_	_
21-22	4906-4910	unit	_	_
21-23	4911-4916	tests	_	_
21-24	4916-4917	.	_	_

#Text=``megaman`` is tested on Python versions 2.7, 3.4, and 3.5.  ## Authors - \[James McQueen\](http://www.stat.washington.edu/people/jmcq/) - \[Marina Meila\](http://www.stat.washington.edu/mmp/) - \[Zhongyue Zhang\](https://github.com/Jerryzcn) - \[Jake VanderPlas\](http://www.vanderplas.com) - \[Yu-Chia Chen\](https://github.com/yuchaz)  ## Other Contributors  - Xiao Wang: lazy rmetric, Nystrom Extension - \[Hangliang Ren (Harry)\](https://github.com/Harryahh): Installation tutorials, Spectral Embedding  ## Future Work  See this issues list for what we have planned for upcoming releases:  \[Future Work\](https://github.com/mmp2/megaman/issues/47)
22-1	4918-4919	`	_	_
22-2	4919-4920	`	_	_
22-3	4920-4927	megaman	_	_
22-4	4927-4928	`	_	_
22-5	4928-4929	`	_	_
22-6	4930-4932	is	_	_
22-7	4933-4939	tested	_	_
22-8	4940-4942	on	_	_
22-9	4943-4949	Python	_	_
22-10	4950-4958	versions	_	_
22-11	4959-4962	2.7	_	_
22-12	4962-4963	,	_	_
22-13	4964-4967	3.4	_	_
22-14	4967-4968	,	_	_
22-15	4969-4972	and	_	_
22-16	4973-4976	3.5	_	_
22-17	4976-4977	.	_	_
22-18	4979-4980	#	_	_
22-19	4980-4981	#	_	_
22-20	4982-4989	Authors	_	_
22-21	4990-4991	-	_	_
22-22	4992-4993	\[	_	_
22-23	4993-4998	James	_	_
22-24	4999-5006	McQueen	_	_
22-25	5006-5007	\]	_	_
22-26	5007-5008	(	_	_
22-27	5008-5012	http	_	_
22-28	5012-5013	:	_	_
22-29	5013-5014	/	_	_
22-30	5014-5015	/	_	_
22-31	5015-5038	www.stat.washington.edu	_	_
22-32	5038-5039	/	_	_
22-33	5039-5045	people	_	_
22-34	5045-5046	/	_	_
22-35	5046-5050	jmcq	_	_
22-36	5050-5051	/	_	_
22-37	5051-5052	)	_	_
22-38	5053-5054	-	_	_
22-39	5055-5056	\[	_	_
22-40	5056-5062	Marina	_	_
22-41	5063-5068	Meila	_	_
22-42	5068-5069	\]	_	_
22-43	5069-5070	(	_	_
22-44	5070-5074	http	_	_
22-45	5074-5075	:	_	_
22-46	5075-5076	/	_	_
22-47	5076-5077	/	_	_
22-48	5077-5100	www.stat.washington.edu	_	_
22-49	5100-5101	/	_	_
22-50	5101-5104	mmp	_	_
22-51	5104-5105	/	_	_
22-52	5105-5106	)	_	_
22-53	5107-5108	-	_	_
22-54	5109-5110	\[	_	_
22-55	5110-5118	Zhongyue	_	_
22-56	5119-5124	Zhang	_	_
22-57	5124-5125	\]	_	_
22-58	5125-5126	(	_	_
22-59	5126-5131	https	_	_
22-60	5131-5132	:	_	_
22-61	5132-5133	/	_	_
22-62	5133-5134	/	_	_
22-63	5134-5144	github.com	_	_
22-64	5144-5145	/	_	_
22-65	5145-5153	Jerryzcn	_	_
22-66	5153-5154	)	_	_
22-67	5155-5156	-	_	_
22-68	5157-5158	\[	_	_
22-69	5158-5162	Jake	_	_
22-70	5163-5173	VanderPlas	_	_
22-71	5173-5174	\]	_	_
22-72	5174-5175	(	_	_
22-73	5175-5179	http	_	_
22-74	5179-5180	:	_	_
22-75	5180-5181	/	_	_
22-76	5181-5182	/	_	_
22-77	5182-5200	www.vanderplas.com	_	_
22-78	5200-5201	)	_	_
22-79	5202-5203	-	_	_
22-80	5204-5205	\[	_	_
22-81	5205-5212	Yu-Chia	_	_
22-82	5213-5217	Chen	_	_
22-83	5217-5218	\]	_	_
22-84	5218-5219	(	_	_
22-85	5219-5224	https	_	_
22-86	5224-5225	:	_	_
22-87	5225-5226	/	_	_
22-88	5226-5227	/	_	_
22-89	5227-5237	github.com	_	_
22-90	5237-5238	/	_	_
22-91	5238-5244	yuchaz	_	_
22-92	5244-5245	)	_	_
22-93	5247-5248	#	_	_
22-94	5248-5249	#	_	_
22-95	5250-5255	Other	_	_
22-96	5256-5268	Contributors	_	_
22-97	5270-5271	-	_	_
22-98	5272-5276	Xiao	_	_
22-99	5277-5281	Wang	_	_
22-100	5281-5282	:	_	_
22-101	5283-5287	lazy	_	_
22-102	5288-5295	rmetric	_	_
22-103	5295-5296	,	_	_
22-104	5297-5304	Nystrom	_	_
22-105	5305-5314	Extension	_	_
22-106	5315-5316	-	_	_
22-107	5317-5318	\[	_	_
22-108	5318-5327	Hangliang	_	_
22-109	5328-5331	Ren	_	_
22-110	5332-5333	(	_	_
22-111	5333-5338	Harry	_	_
22-112	5338-5339	)	_	_
22-113	5339-5340	\]	_	_
22-114	5340-5341	(	_	_
22-115	5341-5346	https	_	_
22-116	5346-5347	:	_	_
22-117	5347-5348	/	_	_
22-118	5348-5349	/	_	_
22-119	5349-5359	github.com	_	_
22-120	5359-5360	/	_	_
22-121	5360-5368	Harryahh	_	_
22-122	5368-5369	)	_	_
22-123	5369-5370	:	_	_
22-124	5371-5383	Installation	_	_
22-125	5384-5393	tutorials	_	_
22-126	5393-5394	,	_	_
22-127	5395-5403	Spectral	_	_
22-128	5404-5413	Embedding	_	_
22-129	5415-5416	#	_	_
22-130	5416-5417	#	_	_
22-131	5418-5424	Future	_	_
22-132	5425-5429	Work	_	_
22-133	5431-5434	See	_	_
22-134	5435-5439	this	_	_
22-135	5440-5446	issues	_	_
22-136	5447-5451	list	_	_
22-137	5452-5455	for	_	_
22-138	5456-5460	what	_	_
22-139	5461-5463	we	_	_
22-140	5464-5468	have	_	_
22-141	5469-5476	planned	_	_
22-142	5477-5480	for	_	_
22-143	5481-5489	upcoming	_	_
22-144	5490-5498	releases	_	_
22-145	5498-5499	:	_	_
22-146	5501-5502	\[	_	_
22-147	5502-5508	Future	_	_
22-148	5509-5513	Work	_	_
22-149	5513-5514	\]	_	_
22-150	5514-5515	(	_	_
22-151	5515-5520	https	_	_
22-152	5520-5521	:	_	_
22-153	5521-5522	/	_	_
22-154	5522-5523	/	_	_
22-155	5523-5533	github.com	_	_
22-156	5533-5534	/	_	_
22-157	5534-5538	mmp2	_	_
22-158	5538-5539	/	_	_
22-159	5539-5546	megaman	_	_
22-160	5546-5547	/	_	_
22-161	5547-5553	issues	_	_
22-162	5553-5554	/	_	_
22-163	5554-5556	47	_	_
22-164	5556-5557	)	_	_