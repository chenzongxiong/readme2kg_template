#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# 3D CMR-Domain-Adaptation  This repo contains code to train a deep learning model for \*\*Unsupervised Domain Adaptation (UDA)\*\* of 3D cardiac magnetic resonance (CMR) cine images to \*\*transform from axial to short-axis orientation\*\*.
1-1	0-1	#	_	_
1-2	2-4	3D	_	_
1-3	5-26	CMR-Domain-Adaptation	_	_
1-4	28-32	This	_	_
1-5	33-37	repo	_	_
1-6	38-46	contains	_	_
1-7	47-51	code	_	_
1-8	52-54	to	_	_
1-9	55-60	train	_	_
1-10	61-62	a	_	_
1-11	63-67	deep	_	_
1-12	68-76	learning	_	_
1-13	77-82	model	_	_
1-14	83-86	for	_	_
1-15	87-88	\*	_	_
1-16	88-89	\*	_	_
1-17	89-101	Unsupervised	_	_
1-18	102-108	Domain	_	_
1-19	109-119	Adaptation	_	_
1-20	120-121	(	_	_
1-21	121-124	UDA	_	_
1-22	124-125	)	_	_
1-23	125-126	\*	_	_
1-24	126-127	\*	_	_
1-25	128-130	of	_	_
1-26	131-133	3D	_	_
1-27	134-141	cardiac	_	_
1-28	142-150	magnetic	_	_
1-29	151-160	resonance	_	_
1-30	161-162	(	_	_
1-31	162-165	CMR	_	_
1-32	165-166	)	_	_
1-33	167-171	cine	_	_
1-34	172-178	images	_	_
1-35	179-181	to	_	_
1-36	182-183	\*	_	_
1-37	183-184	\*	_	_
1-38	184-193	transform	_	_
1-39	194-198	from	_	_
1-40	199-204	axial	_	_
1-41	205-207	to	_	_
1-42	208-218	short-axis	_	_
1-43	219-230	orientation	_	_
1-44	230-231	\*	_	_
1-45	231-232	\*	_	_
1-46	232-233	.	_	_

#Text=The task associated to the domain adaptation is to perform a \*\*segmentation task via a pre-trained fixed network\*\*, and the results are leveraged to guide the transformation process (rigid transform via spatial transformer networks).
2-1	234-237	The	_	_
2-2	238-242	task	_	_
2-3	243-253	associated	_	_
2-4	254-256	to	_	_
2-5	257-260	the	_	_
2-6	261-267	domain	_	_
2-7	268-278	adaptation	_	_
2-8	279-281	is	_	_
2-9	282-284	to	_	_
2-10	285-292	perform	_	_
2-11	293-294	a	_	_
2-12	295-296	\*	_	_
2-13	296-297	\*	_	_
2-14	297-309	segmentation	_	_
2-15	310-314	task	_	_
2-16	315-318	via	_	_
2-17	319-320	a	_	_
2-18	321-332	pre-trained	_	_
2-19	333-338	fixed	_	_
2-20	339-346	network	_	_
2-21	346-347	\*	_	_
2-22	347-348	\*	_	_
2-23	348-349	,	_	_
2-24	350-353	and	_	_
2-25	354-357	the	_	_
2-26	358-365	results	_	_
2-27	366-369	are	_	_
2-28	370-379	leveraged	_	_
2-29	380-382	to	_	_
2-30	383-388	guide	_	_
2-31	389-392	the	_	_
2-32	393-407	transformation	_	_
2-33	408-415	process	_	_
2-34	416-417	(	_	_
2-35	417-422	rigid	_	_
2-36	423-432	transform	_	_
2-37	433-436	via	_	_
2-38	437-444	spatial	_	_
2-39	445-456	transformer	_	_
2-40	457-465	networks	_	_
2-41	465-466	)	_	_
2-42	466-467	.	_	_

#Text=The trained model is able to transform an axial (AX) CMR into the patient specific short-axis (SAX) direction.
3-1	469-472	The	_	_
3-2	473-480	trained	_	_
3-3	481-486	model	_	_
3-4	487-489	is	_	_
3-5	490-494	able	_	_
3-6	495-497	to	_	_
3-7	498-507	transform	_	_
3-8	508-510	an	_	_
3-9	511-516	axial	_	_
3-10	517-518	(	_	_
3-11	518-520	AX	_	_
3-12	520-521	)	_	_
3-13	522-525	CMR	_	_
3-14	526-530	into	_	_
3-15	531-534	the	_	_
3-16	535-542	patient	_	_
3-17	543-551	specific	_	_
3-18	552-562	short-axis	_	_
3-19	563-564	(	_	_
3-20	564-567	SAX	_	_
3-21	567-568	)	_	_
3-22	569-578	direction	_	_
3-23	578-579	.	_	_

#Text=The model learns from paired AX/SAX CMR image pairs and a pre-trained SAX segmentation model.
4-1	580-583	The	_	_
4-2	584-589	model	_	_
4-3	590-596	learns	_	_
4-4	597-601	from	_	_
4-5	602-608	paired	_	_
4-6	609-611	AX	_	_
4-7	611-612	/	_	_
4-8	612-615	SAX	_	_
4-9	616-619	CMR	_	_
4-10	620-625	image	_	_
4-11	626-631	pairs	_	_
4-12	632-635	and	_	_
4-13	636-637	a	_	_
4-14	638-649	pre-trained	_	_
4-15	650-653	SAX	_	_
4-16	654-666	segmentation	_	_
4-17	667-672	model	_	_
4-18	672-673	.	_	_

#Text=The following gif exemplary visualizes the learning progress of this model.
5-1	675-678	The	_	_
5-2	679-688	following	_	_
5-3	689-692	gif	_	_
5-4	693-702	exemplary	_	_
5-5	703-713	visualizes	_	_
5-6	714-717	the	_	_
5-7	718-726	learning	_	_
5-8	727-735	progress	_	_
5-9	736-738	of	_	_
5-10	739-743	this	_	_
5-11	744-749	model	_	_
5-12	749-750	.	_	_

#Text=Slices along z-direction are shown horizontally.   !
6-1	751-757	Slices	_	_
6-2	758-763	along	_	_
6-3	764-775	z-direction	_	_
6-4	776-779	are	_	_
6-5	780-785	shown	_	_
6-6	786-798	horizontally	_	_
6-7	798-799	.	_	_
6-8	802-803	!	_	_

#Text=\[Unsupervised Domain adaptation learning\](https://github.com/Cardio-AI/3d-mri-domain-adaption/blob/master/reports/ax\_sax\_learning\_example.gif "learning progress")   Each temporal frame shows the AX2SAX prediction of the model after successive epochs.
7-1	803-804	\[	_	_
7-2	804-816	Unsupervised	_	_
7-3	817-823	Domain	_	_
7-4	824-834	adaptation	_	_
7-5	835-843	learning	_	_
7-6	843-844	\]	_	_
7-7	844-845	(	_	_
7-8	845-850	https	_	_
7-9	850-851	:	_	_
7-10	851-852	/	_	_
7-11	852-853	/	_	_
7-12	853-863	github.com	_	_
7-13	863-864	/	_	_
7-14	864-873	Cardio-AI	_	_
7-15	873-874	/	_	_
7-16	874-896	3d-mri-domain-adaption	_	_
7-17	896-897	/	_	_
7-18	897-901	blob	_	_
7-19	901-902	/	_	_
7-20	902-908	master	_	_
7-21	908-909	/	_	_
7-22	909-916	reports	_	_
7-23	916-917	/	_	_
7-24	917-944	ax\_sax\_learning\_example.gif	_	_
7-25	945-946	"	_	_
7-26	946-954	learning	_	_
7-27	955-963	progress	_	_
7-28	963-964	"	_	_
7-29	964-965	)	_	_
7-30	968-972	Each	_	_
7-31	973-981	temporal	_	_
7-32	982-987	frame	_	_
7-33	988-993	shows	_	_
7-34	994-997	the	_	_
7-35	998-1004	AX2SAX	_	_
7-36	1005-1015	prediction	_	_
7-37	1016-1018	of	_	_
7-38	1019-1022	the	_	_
7-39	1023-1028	model	_	_
7-40	1029-1034	after	_	_
7-41	1035-1045	successive	_	_
7-42	1046-1052	epochs	_	_
7-43	1052-1053	.	_	_

#Text=At the end of the learning process, the model is able to transform the data set such that it corresponds to a short-axis view, which can be segmented more reliably by the pre-trained short-axis segmentation module.
8-1	1054-1056	At	_	_
8-2	1057-1060	the	_	_
8-3	1061-1064	end	_	_
8-4	1065-1067	of	_	_
8-5	1068-1071	the	_	_
8-6	1072-1080	learning	_	_
8-7	1081-1088	process	_	_
8-8	1088-1089	,	_	_
8-9	1090-1093	the	_	_
8-10	1094-1099	model	_	_
8-11	1100-1102	is	_	_
8-12	1103-1107	able	_	_
8-13	1108-1110	to	_	_
8-14	1111-1120	transform	_	_
8-15	1121-1124	the	_	_
8-16	1125-1129	data	_	_
8-17	1130-1133	set	_	_
8-18	1134-1138	such	_	_
8-19	1139-1143	that	_	_
8-20	1144-1146	it	_	_
8-21	1147-1158	corresponds	_	_
8-22	1159-1161	to	_	_
8-23	1162-1163	a	_	_
8-24	1164-1174	short-axis	_	_
8-25	1175-1179	view	_	_
8-26	1179-1180	,	_	_
8-27	1181-1186	which	_	_
8-28	1187-1190	can	_	_
8-29	1191-1193	be	_	_
8-30	1194-1203	segmented	_	_
8-31	1204-1208	more	_	_
8-32	1209-1217	reliably	_	_
8-33	1218-1220	by	_	_
8-34	1221-1224	the	_	_
8-35	1225-1236	pre-trained	_	_
8-36	1237-1247	short-axis	_	_
8-37	1248-1260	segmentation	_	_
8-38	1261-1267	module	_	_
8-39	1267-1268	.	_	_

#Text=Finally the inverse transformation could be applied to the segmentation, which results in a automatically segmented AX CMR.
9-1	1269-1276	Finally	_	_
9-2	1277-1280	the	_	_
9-3	1281-1288	inverse	_	_
9-4	1289-1303	transformation	_	_
9-5	1304-1309	could	_	_
9-6	1310-1312	be	_	_
9-7	1313-1320	applied	_	_
9-8	1321-1323	to	_	_
9-9	1324-1327	the	_	_
9-10	1328-1340	segmentation	_	_
9-11	1340-1341	,	_	_
9-12	1342-1347	which	_	_
9-13	1348-1355	results	_	_
9-14	1356-1358	in	_	_
9-15	1359-1360	a	_	_
9-16	1361-1374	automatically	_	_
9-17	1375-1384	segmented	_	_
9-18	1385-1387	AX	_	_
9-19	1388-1391	CMR	_	_
9-20	1391-1392	.	_	_

#Text=For the training of this transformation model, neither AX nor SAX ground truth segmentations are required.
10-1	1393-1396	For	_	_
10-2	1397-1400	the	_	_
10-3	1401-1409	training	_	_
10-4	1410-1412	of	_	_
10-5	1413-1417	this	_	_
10-6	1418-1432	transformation	_	_
10-7	1433-1438	model	_	_
10-8	1438-1439	,	_	_
10-9	1440-1447	neither	_	_
10-10	1448-1450	AX	_	_
10-11	1451-1454	nor	_	_
10-12	1455-1458	SAX	_	_
10-13	1459-1465	ground	_	_
10-14	1466-1471	truth	_	_
10-15	1472-1485	segmentations	_	_
10-16	1486-1489	are	_	_
10-17	1490-1498	required	_	_
10-18	1498-1499	.	_	_

#Text=A special \*\*Euler2Affine Layer\*\* was implemented to restrict the transform of the spatial transformer network to be rigid and invertible
11-1	1502-1503	A	_	_
11-2	1504-1511	special	_	_
11-3	1512-1513	\*	_	_
11-4	1513-1514	\*	_	_
11-5	1514-1526	Euler2Affine	_	_
11-6	1527-1532	Layer	_	_
11-7	1532-1533	\*	_	_
11-8	1533-1534	\*	_	_
11-9	1535-1538	was	_	_
11-10	1539-1550	implemented	_	_
11-11	1551-1553	to	_	_
11-12	1554-1562	restrict	_	_
11-13	1563-1566	the	_	_
11-14	1567-1576	transform	_	_
11-15	1577-1579	of	_	_
11-16	1580-1583	the	_	_
11-17	1584-1591	spatial	_	_
11-18	1592-1603	transformer	_	_
11-19	1604-1611	network	_	_
11-20	1612-1614	to	_	_
11-21	1615-1617	be	_	_
11-22	1618-1623	rigid	_	_
11-23	1624-1627	and	_	_
11-24	1628-1638	invertible	_	_

#Text=.
12-1	1638-1639	.	_	_

#Text=# Overview  - The repository dependencies are saved as conda environment (environment.yaml) file
13-1	1641-1642	#	_	_
13-2	1643-1651	Overview	_	_
13-3	1653-1654	-	_	_
13-4	1655-1658	The	_	_
13-5	1659-1669	repository	_	_
13-6	1670-1682	dependencies	_	_
13-7	1683-1686	are	_	_
13-8	1687-1692	saved	_	_
13-9	1693-1695	as	_	_
13-10	1696-1701	conda	_	_
13-11	1702-1713	environment	_	_
13-12	1714-1715	(	_	_
13-13	1715-1731	environment.yaml	_	_
13-14	1731-1732	)	_	_
13-15	1733-1737	file	_	_

#Text=.
14-1	1737-1738	.	_	_

#Text=- The Deep Learning models/layers are build with TF 2.X. - Setup instruction for the repository are given here: \[Install requirements\](https://github.com/Cardio-AI/3d-mri-domain-adaptation#setup-instructions-tested-with-osx-and-ubuntu) - An overview of all files and there usage is given here: \[Repository Structure\](https://github.com/Cardio-AI/3d-mri-domain-adaptation#repository-structure)  # Paper:  Please cite the following paper if you use/modify or adapt part of the code from this repository:  S.
15-1	1740-1741	-	_	_
15-2	1742-1745	The	_	_
15-3	1746-1750	Deep	_	_
15-4	1751-1759	Learning	_	_
15-5	1760-1766	models	_	_
15-6	1766-1767	/	_	_
15-7	1767-1773	layers	_	_
15-8	1774-1777	are	_	_
15-9	1778-1783	build	_	_
15-10	1784-1788	with	_	_
15-11	1789-1791	TF	_	_
15-12	1792-1793	2	_	_
15-13	1793-1794	.	_	_
15-14	1794-1795	X	_	_
15-15	1795-1796	.	_	_
15-16	1797-1798	-	_	_
15-17	1799-1804	Setup	_	_
15-18	1805-1816	instruction	_	_
15-19	1817-1820	for	_	_
15-20	1821-1824	the	_	_
15-21	1825-1835	repository	_	_
15-22	1836-1839	are	_	_
15-23	1840-1845	given	_	_
15-24	1846-1850	here	_	_
15-25	1850-1851	:	_	_
15-26	1852-1853	\[	_	_
15-27	1853-1860	Install	_	_
15-28	1861-1873	requirements	_	_
15-29	1873-1874	\]	_	_
15-30	1874-1875	(	_	_
15-31	1875-1880	https	_	_
15-32	1880-1881	:	_	_
15-33	1881-1882	/	_	_
15-34	1882-1883	/	_	_
15-35	1883-1893	github.com	_	_
15-36	1893-1894	/	_	_
15-37	1894-1903	Cardio-AI	_	_
15-38	1903-1904	/	_	_
15-39	1904-1928	3d-mri-domain-adaptation	_	_
15-40	1928-1929	#	_	_
15-41	1929-1974	setup-instructions-tested-with-osx-and-ubuntu	_	_
15-42	1974-1975	)	_	_
15-43	1976-1977	-	_	_
15-44	1978-1980	An	_	_
15-45	1981-1989	overview	_	_
15-46	1990-1992	of	_	_
15-47	1993-1996	all	_	_
15-48	1997-2002	files	_	_
15-49	2003-2006	and	_	_
15-50	2007-2012	there	_	_
15-51	2013-2018	usage	_	_
15-52	2019-2021	is	_	_
15-53	2022-2027	given	_	_
15-54	2028-2032	here	_	_
15-55	2032-2033	:	_	_
15-56	2034-2035	\[	_	_
15-57	2035-2045	Repository	_	_
15-58	2046-2055	Structure	_	_
15-59	2055-2056	\]	_	_
15-60	2056-2057	(	_	_
15-61	2057-2062	https	_	_
15-62	2062-2063	:	_	_
15-63	2063-2064	/	_	_
15-64	2064-2065	/	_	_
15-65	2065-2075	github.com	_	_
15-66	2075-2076	/	_	_
15-67	2076-2085	Cardio-AI	_	_
15-68	2085-2086	/	_	_
15-69	2086-2110	3d-mri-domain-adaptation	_	_
15-70	2110-2111	#	_	_
15-71	2111-2131	repository-structure	_	_
15-72	2131-2132	)	_	_
15-73	2134-2135	#	_	_
15-74	2136-2141	Paper	_	_
15-75	2141-2142	:	_	_
15-76	2144-2150	Please	_	_
15-77	2151-2155	cite	_	_
15-78	2156-2159	the	_	_
15-79	2160-2169	following	_	_
15-80	2170-2175	paper	_	_
15-81	2176-2178	if	_	_
15-82	2179-2182	you	_	_
15-83	2183-2186	use	_	_
15-84	2186-2187	/	_	_
15-85	2187-2193	modify	_	_
15-86	2194-2196	or	_	_
15-87	2197-2202	adapt	_	_
15-88	2203-2207	part	_	_
15-89	2208-2210	of	_	_
15-90	2211-2214	the	_	_
15-91	2215-2219	code	_	_
15-92	2220-2224	from	_	_
15-93	2225-2229	this	_	_
15-94	2230-2240	repository	_	_
15-95	2240-2241	:	_	_
15-96	2243-2244	S	_	_
15-97	2244-2245	.	_	_

#Text=Koehler, T.
16-1	2246-2253	Koehler	_	_
16-2	2253-2254	,	_	_
16-3	2255-2256	T	_	_
16-4	2256-2257	.	_	_

#Text=Hussain, Z.
17-1	2258-2265	Hussain	_	_
17-2	2265-2266	,	_	_
17-3	2267-2268	Z	_	_
17-4	2268-2269	.	_	_

#Text=Blair, T.
18-1	2270-2275	Blair	_	_
18-2	2275-2276	,	_	_
18-3	2277-2278	T	_	_
18-4	2278-2279	.	_	_

#Text=Huffaker, F.
19-1	2280-2288	Huffaker	_	_
19-2	2288-2289	,	_	_
19-3	2290-2291	F	_	_
19-4	2291-2292	.	_	_

#Text=Ritzmann, A.
20-1	2293-2301	Ritzmann	_	_
20-2	2301-2302	,	_	_
20-3	2303-2304	A	_	_
20-4	2304-2305	.	_	_

#Text=Tandon, T.
21-1	2306-2312	Tandon	_	_
21-2	2312-2313	,	_	_
21-3	2314-2315	T	_	_
21-4	2315-2316	.	_	_

#Text=Pickardt, S.
22-1	2317-2325	Pickardt	_	_
22-2	2325-2326	,	_	_
22-3	2327-2328	S	_	_
22-4	2328-2329	.	_	_

#Text=Sarikouch, H.
23-1	2330-2339	Sarikouch	_	_
23-2	2339-2340	,	_	_
23-3	2341-2342	H	_	_
23-4	2342-2343	.	_	_

#Text=Latus, G.
24-1	2344-2349	Latus	_	_
24-2	2349-2350	,	_	_
24-3	2351-2352	G	_	_
24-4	2352-2353	.	_	_

#Text=Greil, I.
25-1	2354-2359	Greil	_	_
25-2	2359-2360	,	_	_
25-3	2361-2362	I	_	_
25-4	2362-2363	.	_	_

#Text=Wolf, S.
26-1	2364-2368	Wolf	_	_
26-2	2368-2369	,	_	_
26-3	2370-2371	S	_	_
26-4	2371-2372	.	_	_

#Text=Engelhardt, "Unsupervised Domain Adaptation from Axial to Short-Axis Multi-Slice Cardiac MR Images by Incorporating Pretrained Task Networks," in IEEE Transactions on Medical Imaging (TMI), early access, doi: 10.1109/TMI.2021.3052972
27-1	2373-2383	Engelhardt	_	_
27-2	2383-2384	,	_	_
27-3	2385-2386	"	_	_
27-4	2386-2398	Unsupervised	_	_
27-5	2399-2405	Domain	_	_
27-6	2406-2416	Adaptation	_	_
27-7	2417-2421	from	_	_
27-8	2422-2427	Axial	_	_
27-9	2428-2430	to	_	_
27-10	2431-2441	Short-Axis	_	_
27-11	2442-2453	Multi-Slice	_	_
27-12	2454-2461	Cardiac	_	_
27-13	2462-2464	MR	_	_
27-14	2465-2471	Images	_	_
27-15	2472-2474	by	_	_
27-16	2475-2488	Incorporating	_	_
27-17	2489-2499	Pretrained	_	_
27-18	2500-2504	Task	_	_
27-19	2505-2513	Networks	_	_
27-20	2513-2514	,	_	_
27-21	2514-2515	"	_	_
27-22	2516-2518	in	_	_
27-23	2519-2523	IEEE	_	_
27-24	2524-2536	Transactions	_	_
27-25	2537-2539	on	_	_
27-26	2540-2547	Medical	_	_
27-27	2548-2555	Imaging	_	_
27-28	2556-2557	(	_	_
27-29	2557-2560	TMI	_	_
27-30	2560-2561	)	_	_
27-31	2561-2562	,	_	_
27-32	2563-2568	early	_	_
27-33	2569-2575	access	_	_
27-34	2575-2576	,	_	_
27-35	2577-2580	doi	_	_
27-36	2580-2581	:	_	_
27-37	2582-2589	10.1109	_	_
27-38	2589-2590	/	_	_
27-39	2590-2593	TMI	_	_
27-40	2593-2606	.2021.3052972	_	_

#Text=.
28-1	2606-2607	.	_	_

#Text=- Link to original paper: \[IEEE TMI paper link\](https://ieeexplore.ieee.org/document/9328840) (accepted 13.1.2021) - A pre-print version is available here: \[arxiv-Preprint\](http://arxiv.org/abs/2101.07653)  Bibtex:  >@article{Koehler\_2021, <br> >   title={Unsupervised Domain Adaptation from Axial to Short-Axis Multi-Slice Cardiac MR Images by Incorporating Pretrained Task Networks},<br> >   ISSN={1558-254X},<br> >   url={http://dx.doi.org/10.1109/TMI.2021.3052972},<br> >   DOI={10.1109/tmi.2021.3052972},<br> >   journal={IEEE Transactions on Medical Imaging},<br> >   publisher={Institute of Electrical and Electronics Engineers (IEEE)},<br> >   author={Koehler, Sven and Hussain, Tarique and Blair, Zach and Huffaker, Tyler and Ritzmann, Florian and Tandon, Animesh and Pickardt, Thomas and Sarikouch, Samir and Sarikouch, Samir and Latus, Heiner and Greil, Gerald and Wolf, Ivo and Engelhardt, Sandy}, >   year={2021},<br> >   pages={1–1}<br> >}   # Institutions:  >- \[Heidelberg University Hospital, Artificial Intelligence in Cardiovascular Medicine (AICM) Group\](https://www.klinikum.uni-heidelberg.de/chirurgische-klinik-zentrum/herzchirurgie/forschung/ag-artificial-intelligence-in-cardiovascular-medicine) >- \[German Competence network for Congenital heart defects\](https://www.kompetenznetz-ahf.de/en/about-us/competence-network/) >- \[UT Southwestern Medical Center, Pediatric Cardiology\](https://www.utsouthwestern.edu/education/medical-school/departments/pediatrics/divisions/cardiology/) >- \[Department of Computer Science, University Of Applied Science Mannheim\](https://www.informatik.hs-mannheim.de/wir/menschen/professoren/prof-dr-ivo-wolf.html)   # How to use:  This repository splits the source code into:  - interactive notebooks (/notebooks),  - python source modules (/src) and  - the experiment related files such as the experiment configs (/reports) or trained models (/models).
29-1	2609-2610	-	_	_
29-2	2611-2615	Link	_	_
29-3	2616-2618	to	_	_
29-4	2619-2627	original	_	_
29-5	2628-2633	paper	_	_
29-6	2633-2634	:	_	_
29-7	2635-2636	\[	_	_
29-8	2636-2640	IEEE	_	_
29-9	2641-2644	TMI	_	_
29-10	2645-2650	paper	_	_
29-11	2651-2655	link	_	_
29-12	2655-2656	\]	_	_
29-13	2656-2657	(	_	_
29-14	2657-2662	https	_	_
29-15	2662-2663	:	_	_
29-16	2663-2664	/	_	_
29-17	2664-2665	/	_	_
29-18	2665-2684	ieeexplore.ieee.org	_	_
29-19	2684-2685	/	_	_
29-20	2685-2693	document	_	_
29-21	2693-2694	/	_	_
29-22	2694-2701	9328840	_	_
29-23	2701-2702	)	_	_
29-24	2703-2704	(	_	_
29-25	2704-2712	accepted	_	_
29-26	2713-2722	13.1.2021	_	_
29-27	2722-2723	)	_	_
29-28	2724-2725	-	_	_
29-29	2726-2727	A	_	_
29-30	2728-2737	pre-print	_	_
29-31	2738-2745	version	_	_
29-32	2746-2748	is	_	_
29-33	2749-2758	available	_	_
29-34	2759-2763	here	_	_
29-35	2763-2764	:	_	_
29-36	2765-2766	\[	_	_
29-37	2766-2780	arxiv-Preprint	_	_
29-38	2780-2781	\]	_	_
29-39	2781-2782	(	_	_
29-40	2782-2786	http	_	_
29-41	2786-2787	:	_	_
29-42	2787-2788	/	_	_
29-43	2788-2789	/	_	_
29-44	2789-2798	arxiv.org	_	_
29-45	2798-2799	/	_	_
29-46	2799-2802	abs	_	_
29-47	2802-2803	/	_	_
29-48	2803-2813	2101.07653	_	_
29-49	2813-2814	)	_	_
29-50	2816-2822	Bibtex	_	_
29-51	2822-2823	:	_	_
29-52	2825-2826	>	_	_
29-53	2826-2827	@	_	_
29-54	2827-2834	article	_	_
29-55	2834-2835	{	_	_
29-56	2835-2842	Koehler	_	_
29-57	2842-2843	\_	_	_
29-58	2843-2847	2021	_	_
29-59	2847-2848	,	_	_
29-60	2849-2850	<	_	_
29-61	2850-2852	br	_	_
29-62	2852-2853	>	_	_
29-63	2854-2855	>	_	_
29-64	2858-2863	title	_	_
29-65	2863-2864	=	_	_
29-66	2864-2865	{	_	_
29-67	2865-2877	Unsupervised	_	_
29-68	2878-2884	Domain	_	_
29-69	2885-2895	Adaptation	_	_
29-70	2896-2900	from	_	_
29-71	2901-2906	Axial	_	_
29-72	2907-2909	to	_	_
29-73	2910-2920	Short-Axis	_	_
29-74	2921-2932	Multi-Slice	_	_
29-75	2933-2940	Cardiac	_	_
29-76	2941-2943	MR	_	_
29-77	2944-2950	Images	_	_
29-78	2951-2953	by	_	_
29-79	2954-2967	Incorporating	_	_
29-80	2968-2978	Pretrained	_	_
29-81	2979-2983	Task	_	_
29-82	2984-2992	Networks	_	_
29-83	2992-2993	}	_	_
29-84	2993-2994	,	_	_
29-85	2994-2995	<	_	_
29-86	2995-2997	br	_	_
29-87	2997-2998	>	_	_
29-88	2999-3000	>	_	_
29-89	3003-3007	ISSN	_	_
29-90	3007-3008	=	_	_
29-91	3008-3009	{	_	_
29-92	3009-3013	1558	_	_
29-93	3013-3014	-	_	_
29-94	3014-3018	254X	_	_
29-95	3018-3019	}	_	_
29-96	3019-3020	,	_	_
29-97	3020-3021	<	_	_
29-98	3021-3023	br	_	_
29-99	3023-3024	>	_	_
29-100	3025-3026	>	_	_
29-101	3029-3032	url	_	_
29-102	3032-3033	=	_	_
29-103	3033-3034	{	_	_
29-104	3034-3038	http	_	_
29-105	3038-3039	:	_	_
29-106	3039-3040	/	_	_
29-107	3040-3041	/	_	_
29-108	3041-3051	dx.doi.org	_	_
29-109	3051-3052	/	_	_
29-110	3052-3059	10.1109	_	_
29-111	3059-3060	/	_	_
29-112	3060-3063	TMI	_	_
29-113	3063-3076	.2021.3052972	_	_
29-114	3076-3077	}	_	_
29-115	3077-3078	,	_	_
29-116	3078-3079	<	_	_
29-117	3079-3081	br	_	_
29-118	3081-3082	>	_	_
29-119	3083-3084	>	_	_
29-120	3087-3090	DOI	_	_
29-121	3090-3091	=	_	_
29-122	3091-3092	{	_	_
29-123	3092-3099	10.1109	_	_
29-124	3099-3100	/	_	_
29-125	3100-3103	tmi	_	_
29-126	3103-3116	.2021.3052972	_	_
29-127	3116-3117	}	_	_
29-128	3117-3118	,	_	_
29-129	3118-3119	<	_	_
29-130	3119-3121	br	_	_
29-131	3121-3122	>	_	_
29-132	3123-3124	>	_	_
29-133	3127-3134	journal	_	_
29-134	3134-3135	=	_	_
29-135	3135-3136	{	_	_
29-136	3136-3140	IEEE	_	_
29-137	3141-3153	Transactions	_	_
29-138	3154-3156	on	_	_
29-139	3157-3164	Medical	_	_
29-140	3165-3172	Imaging	_	_
29-141	3172-3173	}	_	_
29-142	3173-3174	,	_	_
29-143	3174-3175	<	_	_
29-144	3175-3177	br	_	_
29-145	3177-3178	>	_	_
29-146	3179-3180	>	_	_
29-147	3183-3192	publisher	_	_
29-148	3192-3193	=	_	_
29-149	3193-3194	{	_	_
29-150	3194-3203	Institute	_	_
29-151	3204-3206	of	_	_
29-152	3207-3217	Electrical	_	_
29-153	3218-3221	and	_	_
29-154	3222-3233	Electronics	_	_
29-155	3234-3243	Engineers	_	_
29-156	3244-3245	(	_	_
29-157	3245-3249	IEEE	_	_
29-158	3249-3250	)	_	_
29-159	3250-3251	}	_	_
29-160	3251-3252	,	_	_
29-161	3252-3253	<	_	_
29-162	3253-3255	br	_	_
29-163	3255-3256	>	_	_
29-164	3257-3258	>	_	_
29-165	3261-3267	author	_	_
29-166	3267-3268	=	_	_
29-167	3268-3269	{	_	_
29-168	3269-3276	Koehler	_	_
29-169	3276-3277	,	_	_
29-170	3278-3282	Sven	_	_
29-171	3283-3286	and	_	_
29-172	3287-3294	Hussain	_	_
29-173	3294-3295	,	_	_
29-174	3296-3303	Tarique	_	_
29-175	3304-3307	and	_	_
29-176	3308-3313	Blair	_	_
29-177	3313-3314	,	_	_
29-178	3315-3319	Zach	_	_
29-179	3320-3323	and	_	_
29-180	3324-3332	Huffaker	_	_
29-181	3332-3333	,	_	_
29-182	3334-3339	Tyler	_	_
29-183	3340-3343	and	_	_
29-184	3344-3352	Ritzmann	_	_
29-185	3352-3353	,	_	_
29-186	3354-3361	Florian	_	_
29-187	3362-3365	and	_	_
29-188	3366-3372	Tandon	_	_
29-189	3372-3373	,	_	_
29-190	3374-3381	Animesh	_	_
29-191	3382-3385	and	_	_
29-192	3386-3394	Pickardt	_	_
29-193	3394-3395	,	_	_
29-194	3396-3402	Thomas	_	_
29-195	3403-3406	and	_	_
29-196	3407-3416	Sarikouch	_	_
29-197	3416-3417	,	_	_
29-198	3418-3423	Samir	_	_
29-199	3424-3427	and	_	_
29-200	3428-3437	Sarikouch	_	_
29-201	3437-3438	,	_	_
29-202	3439-3444	Samir	_	_
29-203	3445-3448	and	_	_
29-204	3449-3454	Latus	_	_
29-205	3454-3455	,	_	_
29-206	3456-3462	Heiner	_	_
29-207	3463-3466	and	_	_
29-208	3467-3472	Greil	_	_
29-209	3472-3473	,	_	_
29-210	3474-3480	Gerald	_	_
29-211	3481-3484	and	_	_
29-212	3485-3489	Wolf	_	_
29-213	3489-3490	,	_	_
29-214	3491-3494	Ivo	_	_
29-215	3495-3498	and	_	_
29-216	3499-3509	Engelhardt	_	_
29-217	3509-3510	,	_	_
29-218	3511-3516	Sandy	_	_
29-219	3516-3517	}	_	_
29-220	3517-3518	,	_	_
29-221	3519-3520	>	_	_
29-222	3523-3527	year	_	_
29-223	3527-3528	=	_	_
29-224	3528-3529	{	_	_
29-225	3529-3533	2021	_	_
29-226	3533-3534	}	_	_
29-227	3534-3535	,	_	_
29-228	3535-3536	<	_	_
29-229	3536-3538	br	_	_
29-230	3538-3539	>	_	_
29-231	3540-3541	>	_	_
29-232	3544-3549	pages	_	_
29-233	3549-3550	=	_	_
29-234	3550-3551	{	_	_
29-235	3551-3552	1	_	_
29-236	3552-3553	–	_	_
29-237	3553-3554	1	_	_
29-238	3554-3555	}	_	_
29-239	3555-3556	<	_	_
29-240	3556-3558	br	_	_
29-241	3558-3559	>	_	_
29-242	3560-3561	>	_	_
29-243	3561-3562	}	_	_
29-244	3565-3566	#	_	_
29-245	3567-3579	Institutions	_	_
29-246	3579-3580	:	_	_
29-247	3582-3583	>	_	_
29-248	3583-3584	-	_	_
29-249	3585-3586	\[	_	_
29-250	3586-3596	Heidelberg	_	_
29-251	3597-3607	University	_	_
29-252	3608-3616	Hospital	_	_
29-253	3616-3617	,	_	_
29-254	3618-3628	Artificial	_	_
29-255	3629-3641	Intelligence	_	_
29-256	3642-3644	in	_	_
29-257	3645-3659	Cardiovascular	_	_
29-258	3660-3668	Medicine	_	_
29-259	3669-3670	(	_	_
29-260	3670-3674	AICM	_	_
29-261	3674-3675	)	_	_
29-262	3676-3681	Group	_	_
29-263	3681-3682	\]	_	_
29-264	3682-3683	(	_	_
29-265	3683-3688	https	_	_
29-266	3688-3689	:	_	_
29-267	3689-3690	/	_	_
29-268	3690-3691	/	_	_
29-269	3691-3721	www.klinikum.uni-heidelberg.de	_	_
29-270	3721-3722	/	_	_
29-271	3722-3749	chirurgische-klinik-zentrum	_	_
29-272	3749-3750	/	_	_
29-273	3750-3763	herzchirurgie	_	_
29-274	3763-3764	/	_	_
29-275	3764-3773	forschung	_	_
29-276	3773-3774	/	_	_
29-277	3774-3827	ag-artificial-intelligence-in-cardiovascular-medicine	_	_
29-278	3827-3828	)	_	_
29-279	3829-3830	>	_	_
29-280	3830-3831	-	_	_
29-281	3832-3833	\[	_	_
29-282	3833-3839	German	_	_
29-283	3840-3850	Competence	_	_
29-284	3851-3858	network	_	_
29-285	3859-3862	for	_	_
29-286	3863-3873	Congenital	_	_
29-287	3874-3879	heart	_	_
29-288	3880-3887	defects	_	_
29-289	3887-3888	\]	_	_
29-290	3888-3889	(	_	_
29-291	3889-3894	https	_	_
29-292	3894-3895	:	_	_
29-293	3895-3896	/	_	_
29-294	3896-3897	/	_	_
29-295	3897-3921	www.kompetenznetz-ahf.de	_	_
29-296	3921-3922	/	_	_
29-297	3922-3924	en	_	_
29-298	3924-3925	/	_	_
29-299	3925-3933	about-us	_	_
29-300	3933-3934	/	_	_
29-301	3934-3952	competence-network	_	_
29-302	3952-3953	/	_	_
29-303	3953-3954	)	_	_
29-304	3955-3956	>	_	_
29-305	3956-3957	-	_	_
29-306	3958-3959	\[	_	_
29-307	3959-3961	UT	_	_
29-308	3962-3974	Southwestern	_	_
29-309	3975-3982	Medical	_	_
29-310	3983-3989	Center	_	_
29-311	3989-3990	,	_	_
29-312	3991-4000	Pediatric	_	_
29-313	4001-4011	Cardiology	_	_
29-314	4011-4012	\]	_	_
29-315	4012-4013	(	_	_
29-316	4013-4018	https	_	_
29-317	4018-4019	:	_	_
29-318	4019-4020	/	_	_
29-319	4020-4021	/	_	_
29-320	4021-4043	www.utsouthwestern.edu	_	_
29-321	4043-4044	/	_	_
29-322	4044-4053	education	_	_
29-323	4053-4054	/	_	_
29-324	4054-4068	medical-school	_	_
29-325	4068-4069	/	_	_
29-326	4069-4080	departments	_	_
29-327	4080-4081	/	_	_
29-328	4081-4091	pediatrics	_	_
29-329	4091-4092	/	_	_
29-330	4092-4101	divisions	_	_
29-331	4101-4102	/	_	_
29-332	4102-4112	cardiology	_	_
29-333	4112-4113	/	_	_
29-334	4113-4114	)	_	_
29-335	4115-4116	>	_	_
29-336	4116-4117	-	_	_
29-337	4118-4119	\[	_	_
29-338	4119-4129	Department	_	_
29-339	4130-4132	of	_	_
29-340	4133-4141	Computer	_	_
29-341	4142-4149	Science	_	_
29-342	4149-4150	,	_	_
29-343	4151-4161	University	_	_
29-344	4162-4164	Of	_	_
29-345	4165-4172	Applied	_	_
29-346	4173-4180	Science	_	_
29-347	4181-4189	Mannheim	_	_
29-348	4189-4190	\]	_	_
29-349	4190-4191	(	_	_
29-350	4191-4196	https	_	_
29-351	4196-4197	:	_	_
29-352	4197-4198	/	_	_
29-353	4198-4199	/	_	_
29-354	4199-4228	www.informatik.hs-mannheim.de	_	_
29-355	4228-4229	/	_	_
29-356	4229-4232	wir	_	_
29-357	4232-4233	/	_	_
29-358	4233-4241	menschen	_	_
29-359	4241-4242	/	_	_
29-360	4242-4253	professoren	_	_
29-361	4253-4254	/	_	_
29-362	4254-4275	prof-dr-ivo-wolf.html	_	_
29-363	4275-4276	)	_	_
29-364	4279-4280	#	_	_
29-365	4281-4284	How	_	_
29-366	4285-4287	to	_	_
29-367	4288-4291	use	_	_
29-368	4291-4292	:	_	_
29-369	4294-4298	This	_	_
29-370	4299-4309	repository	_	_
29-371	4310-4316	splits	_	_
29-372	4317-4320	the	_	_
29-373	4321-4327	source	_	_
29-374	4328-4332	code	_	_
29-375	4333-4337	into	_	_
29-376	4337-4338	:	_	_
29-377	4340-4341	-	_	_
29-378	4342-4353	interactive	_	_
29-379	4354-4363	notebooks	_	_
29-380	4364-4365	(	_	_
29-381	4365-4366	/	_	_
29-382	4366-4375	notebooks	_	_
29-383	4375-4376	)	_	_
29-384	4376-4377	,	_	_
29-385	4379-4380	-	_	_
29-386	4381-4387	python	_	_
29-387	4388-4394	source	_	_
29-388	4395-4402	modules	_	_
29-389	4403-4404	(	_	_
29-390	4404-4405	/	_	_
29-391	4405-4408	src	_	_
29-392	4408-4409	)	_	_
29-393	4410-4413	and	_	_
29-394	4415-4416	-	_	_
29-395	4417-4420	the	_	_
29-396	4421-4431	experiment	_	_
29-397	4432-4439	related	_	_
29-398	4440-4445	files	_	_
29-399	4446-4450	such	_	_
29-400	4451-4453	as	_	_
29-401	4454-4457	the	_	_
29-402	4458-4468	experiment	_	_
29-403	4469-4476	configs	_	_
29-404	4477-4478	(	_	_
29-405	4478-4479	/	_	_
29-406	4479-4486	reports	_	_
29-407	4486-4487	)	_	_
29-408	4488-4490	or	_	_
29-409	4491-4498	trained	_	_
29-410	4499-4505	models	_	_
29-411	4506-4507	(	_	_
29-412	4507-4508	/	_	_
29-413	4508-4514	models	_	_
29-414	4514-4515	)	_	_
29-415	4515-4516	.	_	_

#Text=Each experiment includes the following artefacts: - One config file, which represents all experimental hyper-parameters which are neccessary to reproduce the experiment or to load it for later predictions - Three tensorboard logfiles per training to keep track of the trainings, evaluation and visual output progress
30-1	4518-4522	Each	_	_
30-2	4523-4533	experiment	_	_
30-3	4534-4542	includes	_	_
30-4	4543-4546	the	_	_
30-5	4547-4556	following	_	_
30-6	4557-4566	artefacts	_	_
30-7	4566-4567	:	_	_
30-8	4568-4569	-	_	_
30-9	4570-4573	One	_	_
30-10	4574-4580	config	_	_
30-11	4581-4585	file	_	_
30-12	4585-4586	,	_	_
30-13	4587-4592	which	_	_
30-14	4593-4603	represents	_	_
30-15	4604-4607	all	_	_
30-16	4608-4620	experimental	_	_
30-17	4621-4637	hyper-parameters	_	_
30-18	4638-4643	which	_	_
30-19	4644-4647	are	_	_
30-20	4648-4658	neccessary	_	_
30-21	4659-4661	to	_	_
30-22	4662-4671	reproduce	_	_
30-23	4672-4675	the	_	_
30-24	4676-4686	experiment	_	_
30-25	4687-4689	or	_	_
30-26	4690-4692	to	_	_
30-27	4693-4697	load	_	_
30-28	4698-4700	it	_	_
30-29	4701-4704	for	_	_
30-30	4705-4710	later	_	_
30-31	4711-4722	predictions	_	_
30-32	4723-4724	-	_	_
30-33	4725-4730	Three	_	_
30-34	4731-4742	tensorboard	_	_
30-35	4743-4751	logfiles	_	_
30-36	4752-4755	per	_	_
30-37	4756-4764	training	_	_
30-38	4765-4767	to	_	_
30-39	4768-4772	keep	_	_
30-40	4773-4778	track	_	_
30-41	4779-4781	of	_	_
30-42	4782-4785	the	_	_
30-43	4786-4795	trainings	_	_
30-44	4795-4796	,	_	_
30-45	4797-4807	evaluation	_	_
30-46	4808-4811	and	_	_
30-47	4812-4818	visual	_	_
30-48	4819-4825	output	_	_
30-49	4826-4834	progress	_	_

#Text=.
31-1	4834-4835	.	_	_

#Text=- One dataframe which orchestrates the nrrd files with the metadata and the experiment splitting
32-1	4837-4838	-	_	_
32-2	4839-4842	One	_	_
32-3	4843-4852	dataframe	_	_
32-4	4853-4858	which	_	_
32-5	4859-4871	orchestrates	_	_
32-6	4872-4875	the	_	_
32-7	4876-4880	nrrd	_	_
32-8	4881-4886	files	_	_
32-9	4887-4891	with	_	_
32-10	4892-4895	the	_	_
32-11	4896-4904	metadata	_	_
32-12	4905-4908	and	_	_
32-13	4909-4912	the	_	_
32-14	4913-4923	experiment	_	_
32-15	4924-4933	splitting	_	_

#Text=.
33-1	4933-4934	.	_	_

#Text=- Model graph description either as json or tensorflow protobuf file and the corresponding model weights as h5 file.
34-1	4936-4937	-	_	_
34-2	4938-4943	Model	_	_
34-3	4944-4949	graph	_	_
34-4	4950-4961	description	_	_
34-5	4962-4968	either	_	_
34-6	4969-4971	as	_	_
34-7	4972-4976	json	_	_
34-8	4977-4979	or	_	_
34-9	4980-4990	tensorflow	_	_
34-10	4991-4999	protobuf	_	_
34-11	5000-5004	file	_	_
34-12	5005-5008	and	_	_
34-13	5009-5012	the	_	_
34-14	5013-5026	corresponding	_	_
34-15	5027-5032	model	_	_
34-16	5033-5040	weights	_	_
34-17	5041-5043	as	_	_
34-18	5044-5046	h5	_	_
34-19	5047-5051	file	_	_
34-20	5051-5052	.	_	_

#Text=The tensorflow model and layer definitions are within /src/models.
35-1	5054-5057	The	_	_
35-2	5058-5068	tensorflow	_	_
35-3	5069-5074	model	_	_
35-4	5075-5078	and	_	_
35-5	5079-5084	layer	_	_
35-6	5085-5096	definitions	_	_
35-7	5097-5100	are	_	_
35-8	5101-5107	within	_	_
35-9	5108-5109	/	_	_
35-10	5109-5112	src	_	_
35-11	5112-5113	/	_	_
35-12	5113-5119	models	_	_
35-13	5119-5120	.	_	_

#Text=The transformation layer is built on the neuron project, which is also part of the current Voxelmorph approach (https://github.com/voxelmorph/voxelmorph).
36-1	5122-5125	The	_	_
36-2	5126-5140	transformation	_	_
36-3	5141-5146	layer	_	_
36-4	5147-5149	is	_	_
36-5	5150-5155	built	_	_
36-6	5156-5158	on	_	_
36-7	5159-5162	the	_	_
36-8	5163-5169	neuron	_	_
36-9	5170-5177	project	_	_
36-10	5177-5178	,	_	_
36-11	5179-5184	which	_	_
36-12	5185-5187	is	_	_
36-13	5188-5192	also	_	_
36-14	5193-5197	part	_	_
36-15	5198-5200	of	_	_
36-16	5201-5204	the	_	_
36-17	5205-5212	current	_	_
36-18	5213-5223	Voxelmorph	_	_
36-19	5224-5232	approach	_	_
36-20	5233-5234	(	_	_
36-21	5234-5239	https	_	_
36-22	5239-5240	:	_	_
36-23	5240-5241	/	_	_
36-24	5241-5242	/	_	_
36-25	5242-5252	github.com	_	_
36-26	5252-5253	/	_	_
36-27	5253-5263	voxelmorph	_	_
36-28	5263-5264	/	_	_
36-29	5264-5274	voxelmorph	_	_
36-30	5274-5275	)	_	_
36-31	5275-5276	.	_	_

#Text=Use the Notebooks to interact (train, predict or evaluate) with the python functions.   ## Repository Structure      ├── LICENSE     ├── Makefile           <- Makefile with commands like 'make environment'     ├── README.md          <- The top-level README for developers using this project.     ├── data     │   ├── metadata       <- Excel and csv files with additional metadata are stored here     │   ├── interim        <- Intermediate data that has been transformed
37-1	5278-5281	Use	_	_
37-2	5282-5285	the	_	_
37-3	5286-5295	Notebooks	_	_
37-4	5296-5298	to	_	_
37-5	5299-5307	interact	_	_
37-6	5308-5309	(	_	_
37-7	5309-5314	train	_	_
37-8	5314-5315	,	_	_
37-9	5316-5323	predict	_	_
37-10	5324-5326	or	_	_
37-11	5327-5335	evaluate	_	_
37-12	5335-5336	)	_	_
37-13	5337-5341	with	_	_
37-14	5342-5345	the	_	_
37-15	5346-5352	python	_	_
37-16	5353-5362	functions	_	_
37-17	5362-5363	.	_	_
37-18	5366-5367	#	_	_
37-19	5367-5368	#	_	_
37-20	5369-5379	Repository	_	_
37-21	5380-5389	Structure	_	_
37-22	5395-5396	├	_	_
37-23	5396-5397	─	_	_
37-24	5397-5398	─	_	_
37-25	5399-5406	LICENSE	_	_
37-26	5411-5412	├	_	_
37-27	5412-5413	─	_	_
37-28	5413-5414	─	_	_
37-29	5415-5423	Makefile	_	_
37-30	5434-5435	<	_	_
37-31	5435-5436	-	_	_
37-32	5437-5445	Makefile	_	_
37-33	5446-5450	with	_	_
37-34	5451-5459	commands	_	_
37-35	5460-5464	like	_	_
37-36	5465-5466	'	_	_
37-37	5466-5470	make	_	_
37-38	5471-5482	environment	_	_
37-39	5482-5483	'	_	_
37-40	5488-5489	├	_	_
37-41	5489-5490	─	_	_
37-42	5490-5491	─	_	_
37-43	5492-5501	README.md	_	_
37-44	5511-5512	<	_	_
37-45	5512-5513	-	_	_
37-46	5514-5517	The	_	_
37-47	5518-5527	top-level	_	_
37-48	5528-5534	README	_	_
37-49	5535-5538	for	_	_
37-50	5539-5549	developers	_	_
37-51	5550-5555	using	_	_
37-52	5556-5560	this	_	_
37-53	5561-5568	project	_	_
37-54	5568-5569	.	_	_
37-55	5574-5575	├	_	_
37-56	5575-5576	─	_	_
37-57	5576-5577	─	_	_
37-58	5578-5582	data	_	_
37-59	5587-5588	│	_	_
37-60	5591-5592	├	_	_
37-61	5592-5593	─	_	_
37-62	5593-5594	─	_	_
37-63	5595-5603	metadata	_	_
37-64	5610-5611	<	_	_
37-65	5611-5612	-	_	_
37-66	5613-5618	Excel	_	_
37-67	5619-5622	and	_	_
37-68	5623-5626	csv	_	_
37-69	5627-5632	files	_	_
37-70	5633-5637	with	_	_
37-71	5638-5648	additional	_	_
37-72	5649-5657	metadata	_	_
37-73	5658-5661	are	_	_
37-74	5662-5668	stored	_	_
37-75	5669-5673	here	_	_
37-76	5678-5679	│	_	_
37-77	5682-5683	├	_	_
37-78	5683-5684	─	_	_
37-79	5684-5685	─	_	_
37-80	5686-5693	interim	_	_
37-81	5701-5702	<	_	_
37-82	5702-5703	-	_	_
37-83	5704-5716	Intermediate	_	_
37-84	5717-5721	data	_	_
37-85	5722-5726	that	_	_
37-86	5727-5730	has	_	_
37-87	5731-5735	been	_	_
37-88	5736-5747	transformed	_	_

#Text=.
38-1	5747-5748	.	_	_

#Text=│   ├── predicted      <- Model predictions, will be used for the evaluation scripts     │   └── raw            <- The original, immutable data dump
39-1	5753-5754	│	_	_
39-2	5757-5758	├	_	_
39-3	5758-5759	─	_	_
39-4	5759-5760	─	_	_
39-5	5761-5770	predicted	_	_
39-6	5776-5777	<	_	_
39-7	5777-5778	-	_	_
39-8	5779-5784	Model	_	_
39-9	5785-5796	predictions	_	_
39-10	5796-5797	,	_	_
39-11	5798-5802	will	_	_
39-12	5803-5805	be	_	_
39-13	5806-5810	used	_	_
39-14	5811-5814	for	_	_
39-15	5815-5818	the	_	_
39-16	5819-5829	evaluation	_	_
39-17	5830-5837	scripts	_	_
39-18	5842-5843	│	_	_
39-19	5846-5847	└	_	_
39-20	5847-5848	─	_	_
39-21	5848-5849	─	_	_
39-22	5850-5853	raw	_	_
39-23	5865-5866	<	_	_
39-24	5866-5867	-	_	_
39-25	5868-5871	The	_	_
39-26	5872-5880	original	_	_
39-27	5880-5881	,	_	_
39-28	5882-5891	immutable	_	_
39-29	5892-5896	data	_	_
39-30	5897-5901	dump	_	_

#Text=.
40-1	5901-5902	.	_	_

#Text=│     ├── models             <- Trained and serialized model definitions and weights     │     ├── notebooks          <- Jupyter notebooks
41-1	5907-5908	│	_	_
41-2	5913-5914	├	_	_
41-3	5914-5915	─	_	_
41-4	5915-5916	─	_	_
41-5	5917-5923	models	_	_
41-6	5936-5937	<	_	_
41-7	5937-5938	-	_	_
41-8	5939-5946	Trained	_	_
41-9	5947-5950	and	_	_
41-10	5951-5961	serialized	_	_
41-11	5962-5967	model	_	_
41-12	5968-5979	definitions	_	_
41-13	5980-5983	and	_	_
41-14	5984-5991	weights	_	_
41-15	5996-5997	│	_	_
41-16	6002-6003	├	_	_
41-17	6003-6004	─	_	_
41-18	6004-6005	─	_	_
41-19	6006-6015	notebooks	_	_
41-20	6025-6026	<	_	_
41-21	6026-6027	-	_	_
41-22	6028-6035	Jupyter	_	_
41-23	6036-6045	notebooks	_	_

#Text=.
42-1	6045-6046	.	_	_

#Text=│   ├── Dataset        <- Create, map, split or pre-process the dataset     │   ├── Evaluate       <- Evaluate the model predictions, create dataframes and plots     │   ├── Predict        <- Load an experiment config and a pre-trained model,      │   │                     transform AX CMR into the SAX domain, apply the task network,      │   │                     transform the predicted mask back into the AX domain,      │   │                     undo the generator steps and save the prediction to disk        │   └── Train          <- Inspect the generators, define an experiment config,     │                              load and inject a task network, build the graph and train a new AX2SAX model     │     ├── reports            <- Generated analysis as HTML, PDF, LaTeX, etc
43-1	6052-6053	│	_	_
43-2	6056-6057	├	_	_
43-3	6057-6058	─	_	_
43-4	6058-6059	─	_	_
43-5	6060-6067	Dataset	_	_
43-6	6075-6076	<	_	_
43-7	6076-6077	-	_	_
43-8	6078-6084	Create	_	_
43-9	6084-6085	,	_	_
43-10	6086-6089	map	_	_
43-11	6089-6090	,	_	_
43-12	6091-6096	split	_	_
43-13	6097-6099	or	_	_
43-14	6100-6111	pre-process	_	_
43-15	6112-6115	the	_	_
43-16	6116-6123	dataset	_	_
43-17	6128-6129	│	_	_
43-18	6132-6133	├	_	_
43-19	6133-6134	─	_	_
43-20	6134-6135	─	_	_
43-21	6136-6144	Evaluate	_	_
43-22	6151-6152	<	_	_
43-23	6152-6153	-	_	_
43-24	6154-6162	Evaluate	_	_
43-25	6163-6166	the	_	_
43-26	6167-6172	model	_	_
43-27	6173-6184	predictions	_	_
43-28	6184-6185	,	_	_
43-29	6186-6192	create	_	_
43-30	6193-6203	dataframes	_	_
43-31	6204-6207	and	_	_
43-32	6208-6213	plots	_	_
43-33	6218-6219	│	_	_
43-34	6222-6223	├	_	_
43-35	6223-6224	─	_	_
43-36	6224-6225	─	_	_
43-37	6226-6233	Predict	_	_
43-38	6241-6242	<	_	_
43-39	6242-6243	-	_	_
43-40	6244-6248	Load	_	_
43-41	6249-6251	an	_	_
43-42	6252-6262	experiment	_	_
43-43	6263-6269	config	_	_
43-44	6270-6273	and	_	_
43-45	6274-6275	a	_	_
43-46	6276-6287	pre-trained	_	_
43-47	6288-6293	model	_	_
43-48	6293-6294	,	_	_
43-49	6300-6301	│	_	_
43-50	6304-6305	│	_	_
43-51	6326-6335	transform	_	_
43-52	6336-6338	AX	_	_
43-53	6339-6342	CMR	_	_
43-54	6343-6347	into	_	_
43-55	6348-6351	the	_	_
43-56	6352-6355	SAX	_	_
43-57	6356-6362	domain	_	_
43-58	6362-6363	,	_	_
43-59	6364-6369	apply	_	_
43-60	6370-6373	the	_	_
43-61	6374-6378	task	_	_
43-62	6379-6386	network	_	_
43-63	6386-6387	,	_	_
43-64	6393-6394	│	_	_
43-65	6397-6398	│	_	_
43-66	6419-6428	transform	_	_
43-67	6429-6432	the	_	_
43-68	6433-6442	predicted	_	_
43-69	6443-6447	mask	_	_
43-70	6448-6452	back	_	_
43-71	6453-6457	into	_	_
43-72	6458-6461	the	_	_
43-73	6462-6464	AX	_	_
43-74	6465-6471	domain	_	_
43-75	6471-6472	,	_	_
43-76	6478-6479	│	_	_
43-77	6482-6483	│	_	_
43-78	6504-6508	undo	_	_
43-79	6509-6512	the	_	_
43-80	6513-6522	generator	_	_
43-81	6523-6528	steps	_	_
43-82	6529-6532	and	_	_
43-83	6533-6537	save	_	_
43-84	6538-6541	the	_	_
43-85	6542-6552	prediction	_	_
43-86	6553-6555	to	_	_
43-87	6556-6560	disk	_	_
43-88	6568-6569	│	_	_
43-89	6572-6573	└	_	_
43-90	6573-6574	─	_	_
43-91	6574-6575	─	_	_
43-92	6576-6581	Train	_	_
43-93	6591-6592	<	_	_
43-94	6592-6593	-	_	_
43-95	6594-6601	Inspect	_	_
43-96	6602-6605	the	_	_
43-97	6606-6616	generators	_	_
43-98	6616-6617	,	_	_
43-99	6618-6624	define	_	_
43-100	6625-6627	an	_	_
43-101	6628-6638	experiment	_	_
43-102	6639-6645	config	_	_
43-103	6645-6646	,	_	_
43-104	6651-6652	│	_	_
43-105	6682-6686	load	_	_
43-106	6687-6690	and	_	_
43-107	6691-6697	inject	_	_
43-108	6698-6699	a	_	_
43-109	6700-6704	task	_	_
43-110	6705-6712	network	_	_
43-111	6712-6713	,	_	_
43-112	6714-6719	build	_	_
43-113	6720-6723	the	_	_
43-114	6724-6729	graph	_	_
43-115	6730-6733	and	_	_
43-116	6734-6739	train	_	_
43-117	6740-6741	a	_	_
43-118	6742-6745	new	_	_
43-119	6746-6752	AX2SAX	_	_
43-120	6753-6758	model	_	_
43-121	6763-6764	│	_	_
43-122	6769-6770	├	_	_
43-123	6770-6771	─	_	_
43-124	6771-6772	─	_	_
43-125	6773-6780	reports	_	_
43-126	6792-6793	<	_	_
43-127	6793-6794	-	_	_
43-128	6795-6804	Generated	_	_
43-129	6805-6813	analysis	_	_
43-130	6814-6816	as	_	_
43-131	6817-6821	HTML	_	_
43-132	6821-6822	,	_	_
43-133	6823-6826	PDF	_	_
43-134	6826-6827	,	_	_
43-135	6828-6833	LaTeX	_	_
43-136	6833-6834	,	_	_
43-137	6835-6838	etc	_	_

#Text=.
44-1	6838-6839	.	_	_

#Text=│   ├── configs        <- Experiment config files as json with all hyperparameters and paths     │   ├── figures        <- Generated graphics and figures to be used in reporting     │   ├── history        <- Tensorboard trainings history files     │   └── tensorboard\_logs  <- Trainings-scalars and images of the intermediate predictions     │     ├── environment.yaml   <- Conda requirements file.
45-1	6844-6845	│	_	_
45-2	6848-6849	├	_	_
45-3	6849-6850	─	_	_
45-4	6850-6851	─	_	_
45-5	6852-6859	configs	_	_
45-6	6867-6868	<	_	_
45-7	6868-6869	-	_	_
45-8	6870-6880	Experiment	_	_
45-9	6881-6887	config	_	_
45-10	6888-6893	files	_	_
45-11	6894-6896	as	_	_
45-12	6897-6901	json	_	_
45-13	6902-6906	with	_	_
45-14	6907-6910	all	_	_
45-15	6911-6926	hyperparameters	_	_
45-16	6927-6930	and	_	_
45-17	6931-6936	paths	_	_
45-18	6941-6942	│	_	_
45-19	6945-6946	├	_	_
45-20	6946-6947	─	_	_
45-21	6947-6948	─	_	_
45-22	6949-6956	figures	_	_
45-23	6964-6965	<	_	_
45-24	6965-6966	-	_	_
45-25	6967-6976	Generated	_	_
45-26	6977-6985	graphics	_	_
45-27	6986-6989	and	_	_
45-28	6990-6997	figures	_	_
45-29	6998-7000	to	_	_
45-30	7001-7003	be	_	_
45-31	7004-7008	used	_	_
45-32	7009-7011	in	_	_
45-33	7012-7021	reporting	_	_
45-34	7026-7027	│	_	_
45-35	7030-7031	├	_	_
45-36	7031-7032	─	_	_
45-37	7032-7033	─	_	_
45-38	7034-7041	history	_	_
45-39	7049-7050	<	_	_
45-40	7050-7051	-	_	_
45-41	7052-7063	Tensorboard	_	_
45-42	7064-7073	trainings	_	_
45-43	7074-7081	history	_	_
45-44	7082-7087	files	_	_
45-45	7092-7093	│	_	_
45-46	7096-7097	└	_	_
45-47	7097-7098	─	_	_
45-48	7098-7099	─	_	_
45-49	7100-7116	tensorboard\_logs	_	_
45-49	7100-7111	tensorboard	_	_
45-50	7118-7119	<	_	_
45-51	7119-7120	-	_	_
45-52	7121-7138	Trainings-scalars	_	_
45-53	7139-7142	and	_	_
45-54	7143-7149	images	_	_
45-55	7150-7152	of	_	_
45-56	7153-7156	the	_	_
45-57	7157-7169	intermediate	_	_
45-58	7170-7181	predictions	_	_
45-59	7186-7187	│	_	_
45-60	7192-7193	├	_	_
45-61	7193-7194	─	_	_
45-62	7194-7195	─	_	_
45-63	7196-7212	environment.yaml	_	_
45-64	7215-7216	<	_	_
45-65	7216-7217	-	_	_
45-66	7218-7223	Conda	_	_
45-67	7224-7236	requirements	_	_
45-68	7237-7241	file	_	_
45-69	7241-7242	.	_	_

#Text=Generated with `conda env export > environment.yml`     │     ├── setup.py           <- Makes project pip installable (pip install -e .) so src can be imported     ├── src                <- Python modules with classes and functions that will be orchestrated in the notebooks.         ├── data           <- Python modules - Generators, preprocess and postprocess functions         ├── models         <- Python modules - TF.keras 2.X Model and Layer definition         ├── utils          <- Python modules - Metrics, losses, prediction, evaluation code, TF-callbacks and io-utils         └── visualization  <- Python modules - Plot functions for the evaluation and data description  ## Dataset For this work a multi-centric heterogeneous cine-SSFPs CMR TOF data set from the \[German Competence Network for Congenital Heart Defects\](https://www.kompetenznetz-ahf.de/en/about-us/competence-network/)) was used (study identifier: NCT00266188, title: Non-invasive Imaging and Exercise Tolerance Tests in Post-repair Tetralogy of Fallot -Intervention and Course in Patients Over 8 Years Old).
46-1	7243-7252	Generated	_	_
46-2	7253-7257	with	_	_
46-3	7258-7259	`	_	_
46-4	7259-7264	conda	_	_
46-5	7265-7268	env	_	_
46-6	7269-7275	export	_	_
46-7	7276-7277	>	_	_
46-8	7278-7293	environment.yml	_	_
46-9	7293-7294	`	_	_
46-10	7299-7300	│	_	_
46-11	7305-7306	├	_	_
46-12	7306-7307	─	_	_
46-13	7307-7308	─	_	_
46-14	7309-7317	setup.py	_	_
46-15	7328-7329	<	_	_
46-16	7329-7330	-	_	_
46-17	7331-7336	Makes	_	_
46-18	7337-7344	project	_	_
46-19	7345-7348	pip	_	_
46-20	7349-7360	installable	_	_
46-21	7361-7362	(	_	_
46-22	7362-7365	pip	_	_
46-23	7366-7373	install	_	_
46-24	7374-7375	-	_	_
46-25	7375-7376	e	_	_
46-26	7377-7378	.	_	_
46-27	7378-7379	)	_	_
46-28	7380-7382	so	_	_
46-29	7383-7386	src	_	_
46-30	7387-7390	can	_	_
46-31	7391-7393	be	_	_
46-32	7394-7402	imported	_	_
46-33	7407-7408	├	_	_
46-34	7408-7409	─	_	_
46-35	7409-7410	─	_	_
46-36	7411-7414	src	_	_
46-37	7430-7431	<	_	_
46-38	7431-7432	-	_	_
46-39	7433-7439	Python	_	_
46-40	7440-7447	modules	_	_
46-41	7448-7452	with	_	_
46-42	7453-7460	classes	_	_
46-43	7461-7464	and	_	_
46-44	7465-7474	functions	_	_
46-45	7475-7479	that	_	_
46-46	7480-7484	will	_	_
46-47	7485-7487	be	_	_
46-48	7488-7500	orchestrated	_	_
46-49	7501-7503	in	_	_
46-50	7504-7507	the	_	_
46-51	7508-7517	notebooks	_	_
46-52	7517-7518	.	_	_
46-53	7527-7528	├	_	_
46-54	7528-7529	─	_	_
46-55	7529-7530	─	_	_
46-56	7531-7535	data	_	_
46-57	7546-7547	<	_	_
46-58	7547-7548	-	_	_
46-59	7549-7555	Python	_	_
46-60	7556-7563	modules	_	_
46-61	7564-7565	-	_	_
46-62	7566-7576	Generators	_	_
46-63	7576-7577	,	_	_
46-64	7578-7588	preprocess	_	_
46-65	7589-7592	and	_	_
46-66	7593-7604	postprocess	_	_
46-67	7605-7614	functions	_	_
46-68	7623-7624	├	_	_
46-69	7624-7625	─	_	_
46-70	7625-7626	─	_	_
46-71	7627-7633	models	_	_
46-72	7642-7643	<	_	_
46-73	7643-7644	-	_	_
46-74	7645-7651	Python	_	_
46-75	7652-7659	modules	_	_
46-76	7660-7661	-	_	_
46-77	7662-7670	TF.keras	_	_
46-78	7671-7672	2	_	_
46-79	7672-7673	.	_	_
46-80	7673-7674	X	_	_
46-81	7675-7680	Model	_	_
46-82	7681-7684	and	_	_
46-83	7685-7690	Layer	_	_
46-84	7691-7701	definition	_	_
46-85	7710-7711	├	_	_
46-86	7711-7712	─	_	_
46-87	7712-7713	─	_	_
46-88	7714-7719	utils	_	_
46-89	7729-7730	<	_	_
46-90	7730-7731	-	_	_
46-91	7732-7738	Python	_	_
46-92	7739-7746	modules	_	_
46-93	7747-7748	-	_	_
46-94	7749-7756	Metrics	_	_
46-95	7756-7757	,	_	_
46-96	7758-7764	losses	_	_
46-97	7764-7765	,	_	_
46-98	7766-7776	prediction	_	_
46-99	7776-7777	,	_	_
46-100	7778-7788	evaluation	_	_
46-101	7789-7793	code	_	_
46-102	7793-7794	,	_	_
46-103	7795-7807	TF-callbacks	_	_
46-104	7808-7811	and	_	_
46-105	7812-7820	io-utils	_	_
46-106	7829-7830	└	_	_
46-107	7830-7831	─	_	_
46-108	7831-7832	─	_	_
46-109	7833-7846	visualization	_	_
46-110	7848-7849	<	_	_
46-111	7849-7850	-	_	_
46-112	7851-7857	Python	_	_
46-113	7858-7865	modules	_	_
46-114	7866-7867	-	_	_
46-115	7868-7872	Plot	_	_
46-116	7873-7882	functions	_	_
46-117	7883-7886	for	_	_
46-118	7887-7890	the	_	_
46-119	7891-7901	evaluation	_	_
46-120	7902-7905	and	_	_
46-121	7906-7910	data	_	_
46-122	7911-7922	description	_	_
46-123	7924-7925	#	_	_
46-124	7925-7926	#	_	_
46-125	7927-7934	Dataset	_	_
46-126	7935-7938	For	_	_
46-127	7939-7943	this	_	_
46-128	7944-7948	work	_	_
46-129	7949-7950	a	_	_
46-130	7951-7964	multi-centric	_	_
46-131	7965-7978	heterogeneous	_	_
46-132	7979-7989	cine-SSFPs	_	_
46-133	7990-7993	CMR	_	_
46-134	7994-7997	TOF	_	_
46-135	7998-8002	data	_	_
46-136	8003-8006	set	_	_
46-137	8007-8011	from	_	_
46-138	8012-8015	the	_	_
46-139	8016-8017	\[	_	_
46-140	8017-8023	German	_	_
46-141	8024-8034	Competence	_	_
46-142	8035-8042	Network	_	_
46-143	8043-8046	for	_	_
46-144	8047-8057	Congenital	_	_
46-145	8058-8063	Heart	_	_
46-146	8064-8071	Defects	_	_
46-147	8071-8072	\]	_	_
46-148	8072-8073	(	_	_
46-149	8073-8078	https	_	_
46-150	8078-8079	:	_	_
46-151	8079-8080	/	_	_
46-152	8080-8081	/	_	_
46-153	8081-8105	www.kompetenznetz-ahf.de	_	_
46-154	8105-8106	/	_	_
46-155	8106-8108	en	_	_
46-156	8108-8109	/	_	_
46-157	8109-8117	about-us	_	_
46-158	8117-8118	/	_	_
46-159	8118-8136	competence-network	_	_
46-160	8136-8137	/	_	_
46-161	8137-8138	)	_	_
46-162	8138-8139	)	_	_
46-163	8140-8143	was	_	_
46-164	8144-8148	used	_	_
46-165	8149-8150	(	_	_
46-166	8150-8155	study	_	_
46-167	8156-8166	identifier	_	_
46-168	8166-8167	:	_	_
46-169	8168-8179	NCT00266188	_	_
46-170	8179-8180	,	_	_
46-171	8181-8186	title	_	_
46-172	8186-8187	:	_	_
46-173	8188-8200	Non-invasive	_	_
46-174	8201-8208	Imaging	_	_
46-175	8209-8212	and	_	_
46-176	8213-8221	Exercise	_	_
46-177	8222-8231	Tolerance	_	_
46-178	8232-8237	Tests	_	_
46-179	8238-8240	in	_	_
46-180	8241-8252	Post-repair	_	_
46-181	8253-8262	Tetralogy	_	_
46-182	8263-8265	of	_	_
46-183	8266-8272	Fallot	_	_
46-184	8273-8274	-	_	_
46-185	8274-8286	Intervention	_	_
46-186	8287-8290	and	_	_
46-187	8291-8297	Course	_	_
46-188	8298-8300	in	_	_
46-189	8301-8309	Patients	_	_
46-190	8310-8314	Over	_	_
46-191	8315-8316	8	_	_
46-192	8317-8322	Years	_	_
46-193	8323-8326	Old	_	_
46-194	8326-8327	)	_	_
46-195	8327-8328	.	_	_

#Text=This TOF dataset constitutes one of the largest compiled data set of this pathology to date.
47-1	8330-8334	This	_	_
47-2	8335-8338	TOF	_	_
47-3	8339-8346	dataset	_	_
47-4	8347-8358	constitutes	_	_
47-5	8359-8362	one	_	_
47-6	8363-8365	of	_	_
47-7	8366-8369	the	_	_
47-8	8370-8377	largest	_	_
47-9	8378-8386	compiled	_	_
47-10	8387-8391	data	_	_
47-11	8392-8395	set	_	_
47-12	8396-8398	of	_	_
47-13	8399-8403	this	_	_
47-14	8404-8413	pathology	_	_
47-15	8414-8416	to	_	_
47-16	8417-8421	date	_	_
47-17	8421-8422	.	_	_

#Text=The data was acquired at 14 different German sites between 2005-2008 on 1.5T and 3T machines\;  further descriptions can be found in \[original study\](https://www.ahajournals.org/doi/epub/10.1161/CIRCIMAGING.111.963637), \[eprint previous work\](https://arxiv.org/abs/2002.04392) \[1\],\[2\]
48-1	8424-8427	The	_	_
48-2	8428-8432	data	_	_
48-3	8433-8436	was	_	_
48-4	8437-8445	acquired	_	_
48-5	8446-8448	at	_	_
48-6	8449-8451	14	_	_
48-7	8452-8461	different	_	_
48-8	8462-8468	German	_	_
48-9	8469-8474	sites	_	_
48-10	8475-8482	between	_	_
48-11	8483-8487	2005	_	_
48-12	8487-8488	-	_	_
48-13	8488-8492	2008	_	_
48-14	8493-8495	on	_	_
48-15	8496-8500	1.5T	_	_
48-16	8501-8504	and	_	_
48-17	8505-8507	3T	_	_
48-18	8508-8516	machines	_	_
48-19	8516-8517	\;	_	_
48-20	8519-8526	further	_	_
48-21	8527-8539	descriptions	_	_
48-22	8540-8543	can	_	_
48-23	8544-8546	be	_	_
48-24	8547-8552	found	_	_
48-25	8553-8555	in	_	_
48-26	8556-8557	\[	_	_
48-27	8557-8565	original	_	_
48-28	8566-8571	study	_	_
48-29	8571-8572	\]	_	_
48-30	8572-8573	(	_	_
48-31	8573-8578	https	_	_
48-32	8578-8579	:	_	_
48-33	8579-8580	/	_	_
48-34	8580-8581	/	_	_
48-35	8581-8600	www.ahajournals.org	_	_
48-36	8600-8601	/	_	_
48-37	8601-8604	doi	_	_
48-38	8604-8605	/	_	_
48-39	8605-8609	epub	_	_
48-40	8609-8610	/	_	_
48-41	8610-8617	10.1161	_	_
48-42	8617-8618	/	_	_
48-43	8618-8629	CIRCIMAGING	_	_
48-44	8629-8640	.111.963637	_	_
48-45	8640-8641	)	_	_
48-46	8641-8642	,	_	_
48-47	8643-8644	\[	_	_
48-48	8644-8650	eprint	_	_
48-49	8651-8659	previous	_	_
48-50	8660-8664	work	_	_
48-51	8664-8665	\]	_	_
48-52	8665-8666	(	_	_
48-53	8666-8671	https	_	_
48-54	8671-8672	:	_	_
48-55	8672-8673	/	_	_
48-56	8673-8674	/	_	_
48-57	8674-8683	arxiv.org	_	_
48-58	8683-8684	/	_	_
48-59	8684-8687	abs	_	_
48-60	8687-8688	/	_	_
48-61	8688-8698	2002.04392	_	_
48-62	8698-8699	)	_	_
48-63	8700-8701	\[	_	_
48-64	8701-8702	1	_	_
48-65	8702-8703	\]	_	_
48-66	8703-8704	,	_	_
48-67	8704-8705	\[	_	_
48-68	8705-8706	2	_	_
48-69	8706-8707	\]	_	_

#Text=.
49-1	8707-8708	.	_	_

#Text=\[1\] Sarikouch S, Koerperich H, Dubowy KO, Boethig D, Boettler P, Mir TS, Peters B, Kuehne T, Beerbaum P\; German Competence Network for Congenital Heart Defects Investigators.
50-1	8710-8711	\[	_	_
50-2	8711-8712	1	_	_
50-3	8712-8713	\]	_	_
50-4	8714-8723	Sarikouch	_	_
50-5	8724-8725	S	_	_
50-6	8725-8726	,	_	_
50-7	8727-8737	Koerperich	_	_
50-8	8738-8739	H	_	_
50-9	8739-8740	,	_	_
50-10	8741-8747	Dubowy	_	_
50-11	8748-8750	KO	_	_
50-12	8750-8751	,	_	_
50-13	8752-8759	Boethig	_	_
50-14	8760-8761	D	_	_
50-15	8761-8762	,	_	_
50-16	8763-8771	Boettler	_	_
50-17	8772-8773	P	_	_
50-18	8773-8774	,	_	_
50-19	8775-8778	Mir	_	_
50-20	8779-8781	TS	_	_
50-21	8781-8782	,	_	_
50-22	8783-8789	Peters	_	_
50-23	8790-8791	B	_	_
50-24	8791-8792	,	_	_
50-25	8793-8799	Kuehne	_	_
50-26	8800-8801	T	_	_
50-27	8801-8802	,	_	_
50-28	8803-8811	Beerbaum	_	_
50-29	8812-8813	P	_	_
50-30	8813-8814	\;	_	_
50-31	8815-8821	German	_	_
50-32	8822-8832	Competence	_	_
50-33	8833-8840	Network	_	_
50-34	8841-8844	for	_	_
50-35	8845-8855	Congenital	_	_
50-36	8856-8861	Heart	_	_
50-37	8862-8869	Defects	_	_
50-38	8870-8883	Investigators	_	_
50-39	8883-8884	.	_	_

#Text=Impact of gender and age on cardiovascular function late after repair of tetralogy of Fallot: percentiles based on cardiac magnetic resonance.
51-1	8885-8891	Impact	_	_
51-2	8892-8894	of	_	_
51-3	8895-8901	gender	_	_
51-4	8902-8905	and	_	_
51-5	8906-8909	age	_	_
51-6	8910-8912	on	_	_
51-7	8913-8927	cardiovascular	_	_
51-8	8928-8936	function	_	_
51-9	8937-8941	late	_	_
51-10	8942-8947	after	_	_
51-11	8948-8954	repair	_	_
51-12	8955-8957	of	_	_
51-13	8958-8967	tetralogy	_	_
51-14	8968-8970	of	_	_
51-15	8971-8977	Fallot	_	_
51-16	8977-8978	:	_	_
51-17	8979-8990	percentiles	_	_
51-18	8991-8996	based	_	_
51-19	8997-8999	on	_	_
51-20	9000-9007	cardiac	_	_
51-21	9008-9016	magnetic	_	_
51-22	9017-9026	resonance	_	_
51-23	9026-9027	.	_	_

#Text=Circ Cardiovasc Imaging. 2011 Nov\;4(6):703-11. doi: 10.1161/CIRCIMAGING.111.963637.
52-1	9028-9032	Circ	_	_
52-2	9033-9043	Cardiovasc	_	_
52-3	9044-9051	Imaging	_	_
52-4	9051-9052	.	_	_
52-5	9053-9057	2011	_	_
52-6	9058-9061	Nov	_	_
52-7	9061-9062	\;	_	_
52-8	9062-9063	4	_	_
52-9	9063-9064	(	_	_
52-10	9064-9065	6	_	_
52-11	9065-9066	)	_	_
52-12	9066-9067	:	_	_
52-13	9067-9070	703	_	_
52-14	9070-9071	-	_	_
52-15	9071-9073	11	_	_
52-16	9073-9074	.	_	_
52-17	9075-9078	doi	_	_
52-18	9078-9079	:	_	_
52-19	9080-9087	10.1161	_	_
52-20	9087-9088	/	_	_
52-21	9088-9099	CIRCIMAGING	_	_
52-22	9099-9110	.111.963637	_	_
52-23	9110-9111	.	_	_

#Text=Epub 2011 Sep 9.
53-1	9112-9116	Epub	_	_
53-2	9117-9121	2011	_	_
53-3	9122-9125	Sep	_	_
53-4	9126-9127	9	_	_
53-5	9127-9128	.	_	_

#Text=PMID: 21908707
54-1	9129-9133	PMID	_	_
54-2	9133-9134	:	_	_
54-3	9135-9143	21908707	_	_

#Text=.
55-1	9143-9144	.	_	_

#Text=\[2\] Köhler, Sven, Animesh Tandon, Tarique Hussain, H.
56-1	9146-9147	\[	_	_
56-2	9147-9148	2	_	_
56-3	9148-9149	\]	_	_
56-4	9150-9156	Köhler	_	_
56-5	9156-9157	,	_	_
56-6	9158-9162	Sven	_	_
56-7	9162-9163	,	_	_
56-8	9164-9171	Animesh	_	_
56-9	9172-9178	Tandon	_	_
56-10	9178-9179	,	_	_
56-11	9180-9187	Tarique	_	_
56-12	9188-9195	Hussain	_	_
56-13	9195-9196	,	_	_
56-14	9197-9198	H	_	_
56-15	9198-9199	.	_	_

#Text=Latus, T.
57-1	9200-9205	Latus	_	_
57-2	9205-9206	,	_	_
57-3	9207-9208	T	_	_
57-4	9208-9209	.	_	_

#Text=Pickardt, S.
58-1	9210-9218	Pickardt	_	_
58-2	9218-9219	,	_	_
58-3	9220-9221	S	_	_
58-4	9221-9222	.	_	_

#Text=Sarikouch, P.
59-1	9223-9232	Sarikouch	_	_
59-2	9232-9233	,	_	_
59-3	9234-9235	P	_	_
59-4	9235-9236	.	_	_

#Text=Beerbaum, G.
60-1	9237-9245	Beerbaum	_	_
60-2	9245-9246	,	_	_
60-3	9247-9248	G	_	_
60-4	9248-9249	.	_	_

#Text=Greil, S.
61-1	9250-9255	Greil	_	_
61-2	9255-9256	,	_	_
61-3	9257-9258	S	_	_
61-4	9258-9259	.	_	_

#Text=Engelhardt and Ivo Wolf.
62-1	9260-9270	Engelhardt	_	_
62-2	9271-9274	and	_	_
62-3	9275-9278	Ivo	_	_
62-4	9279-9283	Wolf	_	_
62-5	9283-9284	.	_	_

#Text=“How well do U-Net-based segmentation trained on adult cardiac magnetic resonance imaging data generalise to rare congenital heart diseases for surgical planning?”
63-1	9285-9286	“	_	_
63-2	9286-9289	How	_	_
63-3	9290-9294	well	_	_
63-4	9295-9297	do	_	_
63-5	9298-9309	U-Net-based	_	_
63-6	9310-9322	segmentation	_	_
63-7	9323-9330	trained	_	_
63-8	9331-9333	on	_	_
63-9	9334-9339	adult	_	_
63-10	9340-9347	cardiac	_	_
63-11	9348-9356	magnetic	_	_
63-12	9357-9366	resonance	_	_
63-13	9367-9374	imaging	_	_
63-14	9375-9379	data	_	_
63-15	9380-9390	generalise	_	_
63-16	9391-9393	to	_	_
63-17	9394-9398	rare	_	_
63-18	9399-9409	congenital	_	_
63-19	9410-9415	heart	_	_
63-20	9416-9424	diseases	_	_
63-21	9425-9428	for	_	_
63-22	9429-9437	surgical	_	_
63-23	9438-9446	planning	_	_
63-24	9446-9447	?	_	_
63-25	9447-9448	”	_	_

#Text=Medical Imaging: Image-Guided Procedures (2020).  ## Setup instructions (Ubuntu)  ### Preconditions:  - Python 3.6 locally installed  (e.g.:  <a target="\_blank" href="https://www.anaconda.com/download/#macos">Anaconda</a>) - Installed nvidia drivers, cuda and cudnn  (e.g.:  <a target="\_blank" href="https://www.tensorflow.org/install/gpu">Tensorflow</a>)  ### Local setup Clone repository ``` git clone %repo-name% cd %repo-name% ``` Create a conda environment from environment.yaml (environment name will be ax2sax) ``` conda env create --file environment.yaml ```  Activate environment ``` conda activate ax2sax ``` Install a helper to automatically change the working directory to the project root directory ``` pip install --extra-index-url https://test.pypi.org/simple/ ProjectRoot ``` Create a jupyter kernel from the activated environment, this kernel will be visible in the jupyter lab ``` python -m ipykernel install --user --name ax2sax --display-name "ax2sax kernel" ```   ### Enable interactive widgets in Jupyterlab  Pre-condition: nodejs installed globally or into the conda environment. e.g.: ``` conda install -c conda-forge nodejs ``` Install the jupyterlab-manager which enables the use of interactive widgets ``` jupyter labextension install @jupyter-widgets/jupyterlab-manager ```  Further infos on how to enable the jupyterlab-extensions: \[JupyterLab\](https://ipywidgets.readthedocs.io/en/latest/user\_install.html#installing-the-jupyterlab-extension)
64-1	9449-9456	Medical	_	_
64-2	9457-9464	Imaging	_	_
64-3	9464-9465	:	_	_
64-4	9466-9478	Image-Guided	_	_
64-5	9479-9489	Procedures	_	_
64-6	9490-9491	(	_	_
64-7	9491-9495	2020	_	_
64-8	9495-9496	)	_	_
64-9	9496-9497	.	_	_
64-10	9499-9500	#	_	_
64-11	9500-9501	#	_	_
64-12	9502-9507	Setup	_	_
64-13	9508-9520	instructions	_	_
64-14	9521-9522	(	_	_
64-15	9522-9528	Ubuntu	_	_
64-16	9528-9529	)	_	_
64-17	9531-9532	#	_	_
64-18	9532-9533	#	_	_
64-19	9533-9534	#	_	_
64-20	9535-9548	Preconditions	_	_
64-21	9548-9549	:	_	_
64-22	9551-9552	-	_	_
64-23	9553-9559	Python	_	_
64-24	9560-9563	3.6	_	_
64-25	9564-9571	locally	_	_
64-26	9572-9581	installed	_	_
64-27	9583-9584	(	_	_
64-28	9584-9587	e.g	_	_
64-29	9587-9588	.	_	_
64-30	9588-9589	:	_	_
64-31	9591-9592	<	_	_
64-32	9592-9593	a	_	_
64-33	9594-9600	target	_	_
64-34	9600-9601	=	_	_
64-35	9601-9602	"	_	_
64-36	9602-9603	\_	_	_
64-37	9603-9608	blank	_	_
64-38	9608-9609	"	_	_
64-39	9610-9614	href	_	_
64-40	9614-9615	=	_	_
64-41	9615-9616	"	_	_
64-42	9616-9621	https	_	_
64-43	9621-9622	:	_	_
64-44	9622-9623	/	_	_
64-45	9623-9624	/	_	_
64-46	9624-9640	www.anaconda.com	_	_
64-46	9628-9636	anaconda	_	_
64-47	9640-9641	/	_	_
64-48	9641-9649	download	_	_
64-49	9649-9650	/	_	_
64-50	9650-9651	#	_	_
64-51	9651-9656	macos	_	_
64-52	9656-9657	"	_	_
64-53	9657-9658	>	_	_
64-54	9658-9666	Anaconda	_	_
64-55	9666-9667	<	_	_
64-56	9667-9668	/	_	_
64-57	9668-9669	a	_	_
64-58	9669-9670	>	_	_
64-59	9670-9671	)	_	_
64-60	9672-9673	-	_	_
64-61	9674-9683	Installed	_	_
64-62	9684-9690	nvidia	_	_
64-63	9691-9698	drivers	_	_
64-64	9698-9699	,	_	_
64-65	9700-9704	cuda	_	_
64-66	9705-9708	and	_	_
64-67	9709-9714	cudnn	_	_
64-68	9716-9717	(	_	_
64-69	9717-9720	e.g	_	_
64-70	9720-9721	.	_	_
64-71	9721-9722	:	_	_
64-72	9724-9725	<	_	_
64-73	9725-9726	a	_	_
64-74	9727-9733	target	_	_
64-75	9733-9734	=	_	_
64-76	9734-9735	"	_	_
64-77	9735-9736	\_	_	_
64-78	9736-9741	blank	_	_
64-79	9741-9742	"	_	_
64-80	9743-9747	href	_	_
64-81	9747-9748	=	_	_
64-82	9748-9749	"	_	_
64-83	9749-9754	https	_	_
64-84	9754-9755	:	_	_
64-85	9755-9756	/	_	_
64-86	9756-9757	/	_	_
64-87	9757-9775	www.tensorflow.org	_	_
64-87	9761-9771	tensorflow	_	_
64-88	9775-9776	/	_	_
64-89	9776-9783	install	_	_
64-90	9783-9784	/	_	_
64-91	9784-9787	gpu	_	_
64-92	9787-9788	"	_	_
64-93	9788-9789	>	_	_
64-94	9789-9799	Tensorflow	_	_
64-95	9799-9800	<	_	_
64-96	9800-9801	/	_	_
64-97	9801-9802	a	_	_
64-98	9802-9803	>	_	_
64-99	9803-9804	)	_	_
64-100	9806-9807	#	_	_
64-101	9807-9808	#	_	_
64-102	9808-9809	#	_	_
64-103	9810-9815	Local	_	_
64-104	9816-9821	setup	_	_
64-105	9822-9827	Clone	_	_
64-106	9828-9838	repository	_	_
64-107	9839-9840	`	_	_
64-108	9840-9841	`	_	_
64-109	9841-9842	`	_	_
64-110	9843-9846	git	_	_
64-111	9847-9852	clone	_	_
64-112	9853-9854	%	_	_
64-113	9854-9863	repo-name	_	_
64-114	9863-9864	%	_	_
64-115	9865-9867	cd	_	_
64-116	9868-9869	%	_	_
64-117	9869-9878	repo-name	_	_
64-118	9878-9879	%	_	_
64-119	9880-9881	`	_	_
64-120	9881-9882	`	_	_
64-121	9882-9883	`	_	_
64-122	9884-9890	Create	_	_
64-123	9891-9892	a	_	_
64-124	9893-9898	conda	_	_
64-125	9899-9910	environment	_	_
64-126	9911-9915	from	_	_
64-127	9916-9932	environment.yaml	_	_
64-128	9933-9934	(	_	_
64-129	9934-9945	environment	_	_
64-130	9946-9950	name	_	_
64-131	9951-9955	will	_	_
64-132	9956-9958	be	_	_
64-133	9959-9965	ax2sax	_	_
64-134	9965-9966	)	_	_
64-135	9967-9968	`	_	_
64-136	9968-9969	`	_	_
64-137	9969-9970	`	_	_
64-138	9971-9976	conda	_	_
64-139	9977-9980	env	_	_
64-140	9981-9987	create	_	_
64-141	9988-9989	-	_	_
64-142	9989-9990	-	_	_
64-143	9990-9994	file	_	_
64-144	9995-10011	environment.yaml	_	_
64-145	10012-10013	`	_	_
64-146	10013-10014	`	_	_
64-147	10014-10015	`	_	_
64-148	10017-10025	Activate	_	_
64-149	10026-10037	environment	_	_
64-150	10038-10039	`	_	_
64-151	10039-10040	`	_	_
64-152	10040-10041	`	_	_
64-153	10042-10047	conda	_	_
64-154	10048-10056	activate	_	_
64-155	10057-10063	ax2sax	_	_
64-156	10064-10065	`	_	_
64-157	10065-10066	`	_	_
64-158	10066-10067	`	_	_
64-159	10068-10075	Install	_	_
64-160	10076-10077	a	_	_
64-161	10078-10084	helper	_	_
64-162	10085-10087	to	_	_
64-163	10088-10101	automatically	_	_
64-164	10102-10108	change	_	_
64-165	10109-10112	the	_	_
64-166	10113-10120	working	_	_
64-167	10121-10130	directory	_	_
64-168	10131-10133	to	_	_
64-169	10134-10137	the	_	_
64-170	10138-10145	project	_	_
64-171	10146-10150	root	_	_
64-172	10151-10160	directory	_	_
64-173	10161-10162	`	_	_
64-174	10162-10163	`	_	_
64-175	10163-10164	`	_	_
64-176	10165-10168	pip	_	_
64-177	10169-10176	install	_	_
64-178	10177-10178	-	_	_
64-179	10178-10179	-	_	_
64-180	10179-10194	extra-index-url	_	_
64-181	10195-10200	https	_	_
64-182	10200-10201	:	_	_
64-183	10201-10202	/	_	_
64-184	10202-10203	/	_	_
64-185	10203-10216	test.pypi.org	_	_
64-186	10216-10217	/	_	_
64-187	10217-10223	simple	_	_
64-188	10223-10224	/	_	_
64-189	10225-10236	ProjectRoot	_	_
64-190	10237-10238	`	_	_
64-191	10238-10239	`	_	_
64-192	10239-10240	`	_	_
64-193	10241-10247	Create	_	_
64-194	10248-10249	a	_	_
64-195	10250-10257	jupyter	_	_
64-196	10258-10264	kernel	_	_
64-197	10265-10269	from	_	_
64-198	10270-10273	the	_	_
64-199	10274-10283	activated	_	_
64-200	10284-10295	environment	_	_
64-201	10295-10296	,	_	_
64-202	10297-10301	this	_	_
64-203	10302-10308	kernel	_	_
64-204	10309-10313	will	_	_
64-205	10314-10316	be	_	_
64-206	10317-10324	visible	_	_
64-207	10325-10327	in	_	_
64-208	10328-10331	the	_	_
64-209	10332-10339	jupyter	_	_
64-210	10340-10343	lab	_	_
64-211	10344-10345	`	_	_
64-212	10345-10346	`	_	_
64-213	10346-10347	`	_	_
64-214	10348-10354	python	_	_
64-215	10355-10356	-	_	_
64-216	10356-10357	m	_	_
64-217	10358-10367	ipykernel	_	_
64-218	10368-10375	install	_	_
64-219	10376-10377	-	_	_
64-220	10377-10378	-	_	_
64-221	10378-10382	user	_	_
64-222	10383-10384	-	_	_
64-223	10384-10385	-	_	_
64-224	10385-10389	name	_	_
64-225	10390-10396	ax2sax	_	_
64-226	10397-10398	-	_	_
64-227	10398-10399	-	_	_
64-228	10399-10411	display-name	_	_
64-229	10412-10413	"	_	_
64-230	10413-10419	ax2sax	_	_
64-231	10420-10426	kernel	_	_
64-232	10426-10427	"	_	_
64-233	10428-10429	`	_	_
64-234	10429-10430	`	_	_
64-235	10430-10431	`	_	_
64-236	10434-10435	#	_	_
64-237	10435-10436	#	_	_
64-238	10436-10437	#	_	_
64-239	10438-10444	Enable	_	_
64-240	10445-10456	interactive	_	_
64-241	10457-10464	widgets	_	_
64-242	10465-10467	in	_	_
64-243	10468-10478	Jupyterlab	_	_
64-244	10480-10493	Pre-condition	_	_
64-245	10493-10494	:	_	_
64-246	10495-10501	nodejs	_	_
64-247	10502-10511	installed	_	_
64-248	10512-10520	globally	_	_
64-249	10521-10523	or	_	_
64-250	10524-10528	into	_	_
64-251	10529-10532	the	_	_
64-252	10533-10538	conda	_	_
64-253	10539-10550	environment	_	_
64-254	10550-10551	.	_	_
64-255	10552-10555	e.g	_	_
64-256	10555-10556	.	_	_
64-257	10556-10557	:	_	_
64-258	10558-10559	`	_	_
64-259	10559-10560	`	_	_
64-260	10560-10561	`	_	_
64-261	10562-10567	conda	_	_
64-262	10568-10575	install	_	_
64-263	10576-10577	-	_	_
64-264	10577-10578	c	_	_
64-265	10579-10590	conda-forge	_	_
64-266	10591-10597	nodejs	_	_
64-267	10598-10599	`	_	_
64-268	10599-10600	`	_	_
64-269	10600-10601	`	_	_
64-270	10602-10609	Install	_	_
64-271	10610-10613	the	_	_
64-272	10614-10632	jupyterlab-manager	_	_
64-273	10633-10638	which	_	_
64-274	10639-10646	enables	_	_
64-275	10647-10650	the	_	_
64-276	10651-10654	use	_	_
64-277	10655-10657	of	_	_
64-278	10658-10669	interactive	_	_
64-279	10670-10677	widgets	_	_
64-280	10678-10679	`	_	_
64-281	10679-10680	`	_	_
64-282	10680-10681	`	_	_
64-283	10682-10689	jupyter	_	_
64-284	10690-10702	labextension	_	_
64-285	10703-10710	install	_	_
64-286	10711-10712	@	_	_
64-287	10712-10727	jupyter-widgets	_	_
64-288	10727-10728	/	_	_
64-289	10728-10746	jupyterlab-manager	_	_
64-290	10747-10748	`	_	_
64-291	10748-10749	`	_	_
64-292	10749-10750	`	_	_
64-293	10752-10759	Further	_	_
64-294	10760-10765	infos	_	_
64-295	10766-10768	on	_	_
64-296	10769-10772	how	_	_
64-297	10773-10775	to	_	_
64-298	10776-10782	enable	_	_
64-299	10783-10786	the	_	_
64-300	10787-10808	jupyterlab-extensions	_	_
64-300	10787-10797	jupyterlab	_	_
64-301	10808-10809	:	_	_
64-302	10810-10811	\[	_	_
64-303	10811-10821	JupyterLab	_	_
64-304	10821-10822	\]	_	_
64-305	10822-10823	(	_	_
64-306	10823-10828	https	_	_
64-307	10828-10829	:	_	_
64-308	10829-10830	/	_	_
64-309	10830-10831	/	_	_
64-310	10831-10856	ipywidgets.readthedocs.io	_	_
64-311	10856-10857	/	_	_
64-312	10857-10859	en	_	_
64-313	10859-10860	/	_	_
64-314	10860-10866	latest	_	_
64-315	10866-10867	/	_	_
64-316	10867-10884	user\_install.html	_	_
64-317	10884-10885	#	_	_
64-318	10885-10920	installing-the-jupyterlab-extension	_	_
64-318	10900-10910	jupyterlab	_	_
64-319	10920-10921	)	_	_