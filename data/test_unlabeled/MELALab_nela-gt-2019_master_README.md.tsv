#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# NELA-GT-2019  This repository contain examples of how to use the NELA-GT-2019 data set with Python 3.
1-1	0-1	#	_	_
1-2	2-9	NELA-GT	_	_
1-3	9-10	-	_	_
1-4	10-14	2019	_	_
1-5	16-20	This	_	_
1-6	21-31	repository	_	_
1-7	32-39	contain	_	_
1-8	40-48	examples	_	_
1-9	49-51	of	_	_
1-10	52-55	how	_	_
1-11	56-58	to	_	_
1-12	59-62	use	_	_
1-13	63-66	the	_	_
1-14	67-74	NELA-GT	_	_
1-15	74-75	-	_	_
1-16	75-79	2019	_	_
1-17	80-84	data	_	_
1-18	85-88	set	_	_
1-19	89-93	with	_	_
1-20	94-100	Python	_	_
1-21	101-102	3	_	_
1-22	102-103	.	_	_

#Text=\_\_Download the dataset from here\_\_: https://dataverse.harvard.edu/dataset.xhtml?
2-1	105-106	\_	_	_
2-2	106-107	\_	_	_
2-3	107-115	Download	_	_
2-4	116-119	the	_	_
2-5	120-127	dataset	_	_
2-6	128-132	from	_	_
2-7	133-137	here	_	_
2-8	137-138	\_	_	_
2-9	138-139	\_	_	_
2-10	139-140	:	_	_
2-11	141-146	https	_	_
2-12	146-147	:	_	_
2-13	147-148	/	_	_
2-14	148-149	/	_	_
2-15	149-170	dataverse.harvard.edu	_	_
2-16	170-171	/	_	_
2-17	171-184	dataset.xhtml	_	_
2-18	184-185	?	_	_

#Text=persistentId=doi:10.7910/DVN/O7FWPO  \_\_For more details about this dataset, check the paper\_\_: https://arxiv.org/abs/2003.08444  If you use this dataset in your work, please cite us as follows: <br> ``` @misc{     gruppi2020nelagt2019,     title={NELA-GT-2019: A Large Multi-Labelled News Dataset for The Study of Misinformation in News Articles},     author={Maurício Gruppi and Benjamin D.
3-1	185-197	persistentId	_	_
3-2	197-198	=	_	_
3-3	198-201	doi	_	_
3-4	201-202	:	_	_
3-5	202-209	10.7910	_	_
3-6	209-210	/	_	_
3-7	210-213	DVN	_	_
3-8	213-214	/	_	_
3-9	214-220	O7FWPO	_	_
3-10	222-223	\_	_	_
3-11	223-224	\_	_	_
3-12	224-227	For	_	_
3-13	228-232	more	_	_
3-14	233-240	details	_	_
3-15	241-246	about	_	_
3-16	247-251	this	_	_
3-17	252-259	dataset	_	_
3-18	259-260	,	_	_
3-19	261-266	check	_	_
3-20	267-270	the	_	_
3-21	271-276	paper	_	_
3-22	276-277	\_	_	_
3-23	277-278	\_	_	_
3-24	278-279	:	_	_
3-25	280-285	https	_	_
3-26	285-286	:	_	_
3-27	286-287	/	_	_
3-28	287-288	/	_	_
3-29	288-297	arxiv.org	_	_
3-30	297-298	/	_	_
3-31	298-301	abs	_	_
3-32	301-302	/	_	_
3-33	302-312	2003.08444	_	_
3-34	314-316	If	_	_
3-35	317-320	you	_	_
3-36	321-324	use	_	_
3-37	325-329	this	_	_
3-38	330-337	dataset	_	_
3-39	338-340	in	_	_
3-40	341-345	your	_	_
3-41	346-350	work	_	_
3-42	350-351	,	_	_
3-43	352-358	please	_	_
3-44	359-363	cite	_	_
3-45	364-366	us	_	_
3-46	367-369	as	_	_
3-47	370-377	follows	_	_
3-48	377-378	:	_	_
3-49	379-380	<	_	_
3-50	380-382	br	_	_
3-51	382-383	>	_	_
3-52	384-385	`	_	_
3-53	385-386	`	_	_
3-54	386-387	`	_	_
3-55	388-389	@	_	_
3-56	389-393	misc	_	_
3-57	393-394	{	_	_
3-58	399-419	gruppi2020nelagt2019	_	_
3-59	419-420	,	_	_
3-60	425-430	title	_	_
3-61	430-431	=	_	_
3-62	431-432	{	_	_
3-63	432-439	NELA-GT	_	_
3-64	439-440	-	_	_
3-65	440-444	2019	_	_
3-66	444-445	:	_	_
3-67	446-447	A	_	_
3-68	448-453	Large	_	_
3-69	454-468	Multi-Labelled	_	_
3-70	469-473	News	_	_
3-71	474-481	Dataset	_	_
3-72	482-485	for	_	_
3-73	486-489	The	_	_
3-74	490-495	Study	_	_
3-75	496-498	of	_	_
3-76	499-513	Misinformation	_	_
3-77	514-516	in	_	_
3-78	517-521	News	_	_
3-79	522-530	Articles	_	_
3-80	530-531	}	_	_
3-81	531-532	,	_	_
3-82	537-543	author	_	_
3-83	543-544	=	_	_
3-84	544-545	{	_	_
3-85	545-553	Maurício	_	_
3-86	554-560	Gruppi	_	_
3-87	561-564	and	_	_
3-88	565-573	Benjamin	_	_
3-89	574-575	D	_	_
3-90	575-576	.	_	_

#Text=Horne and Sibel Adalı},     year={2020},     eprint={2003.08444},     archivePrefix={arXiv},     primaryClass={cs.CY} } ``` ## Data  Metadata\|\| ---\|--- Dataset name\|`NELA-GT-2019` Formats\|`Sqlite3`,`JSON` No. of articles\|`1118821` No. of sources\|`261` Collection period\|`2019-01-01` to `2019-12-31`  ### Fields  Each data point collected corresponds to an article and contains the fields described below.
4-1	577-582	Horne	_	_
4-2	583-586	and	_	_
4-3	587-592	Sibel	_	_
4-4	593-598	Adalı	_	_
4-5	598-599	}	_	_
4-6	599-600	,	_	_
4-7	605-609	year	_	_
4-8	609-610	=	_	_
4-9	610-611	{	_	_
4-10	611-615	2020	_	_
4-11	615-616	}	_	_
4-12	616-617	,	_	_
4-13	622-628	eprint	_	_
4-14	628-629	=	_	_
4-15	629-630	{	_	_
4-16	630-640	2003.08444	_	_
4-17	640-641	}	_	_
4-18	641-642	,	_	_
4-19	647-660	archivePrefix	_	_
4-20	660-661	=	_	_
4-21	661-662	{	_	_
4-22	662-667	arXiv	_	_
4-23	667-668	}	_	_
4-24	668-669	,	_	_
4-25	674-686	primaryClass	_	_
4-26	686-687	=	_	_
4-27	687-688	{	_	_
4-28	688-693	cs.CY	_	_
4-29	693-694	}	_	_
4-30	695-696	}	_	_
4-31	697-698	`	_	_
4-32	698-699	`	_	_
4-33	699-700	`	_	_
4-34	701-702	#	_	_
4-35	702-703	#	_	_
4-36	704-708	Data	_	_
4-37	710-718	Metadata	_	_
4-38	718-719	\|	_	_
4-39	719-720	\|	_	_
4-40	721-722	-	_	_
4-41	722-723	-	_	_
4-42	723-724	-	_	_
4-43	724-725	\|	_	_
4-44	725-726	-	_	_
4-45	726-727	-	_	_
4-46	727-728	-	_	_
4-47	729-736	Dataset	_	_
4-48	737-741	name	_	_
4-49	741-742	\|	_	_
4-50	742-743	`	_	_
4-51	743-750	NELA-GT	_	_
4-52	750-751	-	_	_
4-53	751-755	2019	_	_
4-54	755-756	`	_	_
4-55	757-764	Formats	_	_
4-56	764-765	\|	_	_
4-57	765-766	`	_	_
4-58	766-773	Sqlite3	_	_
4-59	773-774	`	_	_
4-60	774-775	,	_	_
4-61	775-776	`	_	_
4-62	776-780	JSON	_	_
4-63	780-781	`	_	_
4-64	782-784	No	_	_
4-65	784-785	.	_	_
4-66	786-788	of	_	_
4-67	789-797	articles	_	_
4-68	797-798	\|	_	_
4-69	798-799	`	_	_
4-70	799-806	1118821	_	_
4-71	806-807	`	_	_
4-72	808-810	No	_	_
4-73	810-811	.	_	_
4-74	812-814	of	_	_
4-75	815-822	sources	_	_
4-76	822-823	\|	_	_
4-77	823-824	`	_	_
4-78	824-827	261	_	_
4-79	827-828	`	_	_
4-80	829-839	Collection	_	_
4-81	840-846	period	_	_
4-82	846-847	\|	_	_
4-83	847-848	`	_	_
4-84	848-852	2019	_	_
4-85	852-853	-	_	_
4-86	853-855	01	_	_
4-87	855-856	-	_	_
4-88	856-858	01	_	_
4-89	858-859	`	_	_
4-90	860-862	to	_	_
4-91	863-864	`	_	_
4-92	864-868	2019	_	_
4-93	868-869	-	_	_
4-94	869-871	12	_	_
4-95	871-872	-	_	_
4-96	872-874	31	_	_
4-97	874-875	`	_	_
4-98	877-878	#	_	_
4-99	878-879	#	_	_
4-100	879-880	#	_	_
4-101	881-887	Fields	_	_
4-102	889-893	Each	_	_
4-103	894-898	data	_	_
4-104	899-904	point	_	_
4-105	905-914	collected	_	_
4-106	915-926	corresponds	_	_
4-107	927-929	to	_	_
4-108	930-932	an	_	_
4-109	933-940	article	_	_
4-110	941-944	and	_	_
4-111	945-953	contains	_	_
4-112	954-957	the	_	_
4-113	958-964	fields	_	_
4-114	965-974	described	_	_
4-115	975-980	below	_	_
4-116	980-981	.	_	_

#Text=\|Field \| Type \| Description\| ---\|---\|--- `id` \| string \| ID of the article `date` \| string \| date of publication (`YYYY-MM-DD`) `source` \| string \| name of the source `title` \| string \| article's headline `content` \| string \| article's body text `author` \| string \| author who signed the article `published` \| string \| date time string as provided by source `published\_utc` \| integer \| unix timestamp of publication `collection\_utc` \| integer \| unix timestamp of collection date  ### Aggregated labels  We provide aggregated labels based on Media Bias/Fact Check reports, classifying each source as:  \* \_Reliable\_ - class 0 \* \_Mixed\_ - class 1 \* \_Unreliable\_ - class 2  These labels can be found in `labels.csv`  \_\_Note\_\_: the labels used in this aggregation were collected from Media Bias/Fact Check on Mar 20, 2020.   ## Examples ###  load-sqlite3.py  \* How to load the data from the Sqlite3 database using SQL queries
5-1	983-984	\|	_	_
5-2	984-989	Field	_	_
5-3	990-991	\|	_	_
5-4	992-996	Type	_	_
5-5	997-998	\|	_	_
5-6	999-1010	Description	_	_
5-7	1010-1011	\|	_	_
5-8	1012-1013	-	_	_
5-9	1013-1014	-	_	_
5-10	1014-1015	-	_	_
5-11	1015-1016	\|	_	_
5-12	1016-1017	-	_	_
5-13	1017-1018	-	_	_
5-14	1018-1019	-	_	_
5-15	1019-1020	\|	_	_
5-16	1020-1021	-	_	_
5-17	1021-1022	-	_	_
5-18	1022-1023	-	_	_
5-19	1024-1025	`	_	_
5-20	1025-1027	id	_	_
5-21	1027-1028	`	_	_
5-22	1029-1030	\|	_	_
5-23	1031-1037	string	_	_
5-24	1038-1039	\|	_	_
5-25	1040-1042	ID	_	_
5-26	1043-1045	of	_	_
5-27	1046-1049	the	_	_
5-28	1050-1057	article	_	_
5-29	1058-1059	`	_	_
5-30	1059-1063	date	_	_
5-31	1063-1064	`	_	_
5-32	1065-1066	\|	_	_
5-33	1067-1073	string	_	_
5-34	1074-1075	\|	_	_
5-35	1076-1080	date	_	_
5-36	1081-1083	of	_	_
5-37	1084-1095	publication	_	_
5-38	1096-1097	(	_	_
5-39	1097-1098	`	_	_
5-40	1098-1108	YYYY-MM-DD	_	_
5-41	1108-1109	`	_	_
5-42	1109-1110	)	_	_
5-43	1111-1112	`	_	_
5-44	1112-1118	source	_	_
5-45	1118-1119	`	_	_
5-46	1120-1121	\|	_	_
5-47	1122-1128	string	_	_
5-48	1129-1130	\|	_	_
5-49	1131-1135	name	_	_
5-50	1136-1138	of	_	_
5-51	1139-1142	the	_	_
5-52	1143-1149	source	_	_
5-53	1150-1151	`	_	_
5-54	1151-1156	title	_	_
5-55	1156-1157	`	_	_
5-56	1158-1159	\|	_	_
5-57	1160-1166	string	_	_
5-58	1167-1168	\|	_	_
5-59	1169-1178	article's	_	_
5-60	1179-1187	headline	_	_
5-61	1188-1189	`	_	_
5-62	1189-1196	content	_	_
5-63	1196-1197	`	_	_
5-64	1198-1199	\|	_	_
5-65	1200-1206	string	_	_
5-66	1207-1208	\|	_	_
5-67	1209-1218	article's	_	_
5-68	1219-1223	body	_	_
5-69	1224-1228	text	_	_
5-70	1229-1230	`	_	_
5-71	1230-1236	author	_	_
5-72	1236-1237	`	_	_
5-73	1238-1239	\|	_	_
5-74	1240-1246	string	_	_
5-75	1247-1248	\|	_	_
5-76	1249-1255	author	_	_
5-77	1256-1259	who	_	_
5-78	1260-1266	signed	_	_
5-79	1267-1270	the	_	_
5-80	1271-1278	article	_	_
5-81	1279-1280	`	_	_
5-82	1280-1289	published	_	_
5-83	1289-1290	`	_	_
5-84	1291-1292	\|	_	_
5-85	1293-1299	string	_	_
5-86	1300-1301	\|	_	_
5-87	1302-1306	date	_	_
5-88	1307-1311	time	_	_
5-89	1312-1318	string	_	_
5-90	1319-1321	as	_	_
5-91	1322-1330	provided	_	_
5-92	1331-1333	by	_	_
5-93	1334-1340	source	_	_
5-94	1341-1342	`	_	_
5-95	1342-1355	published\_utc	_	_
5-96	1355-1356	`	_	_
5-97	1357-1358	\|	_	_
5-98	1359-1366	integer	_	_
5-99	1367-1368	\|	_	_
5-100	1369-1373	unix	_	_
5-101	1374-1383	timestamp	_	_
5-102	1384-1386	of	_	_
5-103	1387-1398	publication	_	_
5-104	1399-1400	`	_	_
5-105	1400-1414	collection\_utc	_	_
5-106	1414-1415	`	_	_
5-107	1416-1417	\|	_	_
5-108	1418-1425	integer	_	_
5-109	1426-1427	\|	_	_
5-110	1428-1432	unix	_	_
5-111	1433-1442	timestamp	_	_
5-112	1443-1445	of	_	_
5-113	1446-1456	collection	_	_
5-114	1457-1461	date	_	_
5-115	1463-1464	#	_	_
5-116	1464-1465	#	_	_
5-117	1465-1466	#	_	_
5-118	1467-1477	Aggregated	_	_
5-119	1478-1484	labels	_	_
5-120	1486-1488	We	_	_
5-121	1489-1496	provide	_	_
5-122	1497-1507	aggregated	_	_
5-123	1508-1514	labels	_	_
5-124	1515-1520	based	_	_
5-125	1521-1523	on	_	_
5-126	1524-1529	Media	_	_
5-127	1530-1534	Bias	_	_
5-128	1534-1535	/	_	_
5-129	1535-1539	Fact	_	_
5-130	1540-1545	Check	_	_
5-131	1546-1553	reports	_	_
5-132	1553-1554	,	_	_
5-133	1555-1566	classifying	_	_
5-134	1567-1571	each	_	_
5-135	1572-1578	source	_	_
5-136	1579-1581	as	_	_
5-137	1581-1582	:	_	_
5-138	1584-1585	\*	_	_
5-139	1586-1587	\_	_	_
5-140	1587-1595	Reliable	_	_
5-141	1595-1596	\_	_	_
5-142	1597-1598	-	_	_
5-143	1599-1604	class	_	_
5-144	1605-1606	0	_	_
5-145	1607-1608	\*	_	_
5-146	1609-1610	\_	_	_
5-147	1610-1615	Mixed	_	_
5-148	1615-1616	\_	_	_
5-149	1617-1618	-	_	_
5-150	1619-1624	class	_	_
5-151	1625-1626	1	_	_
5-152	1627-1628	\*	_	_
5-153	1629-1630	\_	_	_
5-154	1630-1640	Unreliable	_	_
5-155	1640-1641	\_	_	_
5-156	1642-1643	-	_	_
5-157	1644-1649	class	_	_
5-158	1650-1651	2	_	_
5-159	1653-1658	These	_	_
5-160	1659-1665	labels	_	_
5-161	1666-1669	can	_	_
5-162	1670-1672	be	_	_
5-163	1673-1678	found	_	_
5-164	1679-1681	in	_	_
5-165	1682-1683	`	_	_
5-166	1683-1693	labels.csv	_	_
5-167	1693-1694	`	_	_
5-168	1696-1697	\_	_	_
5-169	1697-1698	\_	_	_
5-170	1698-1702	Note	_	_
5-171	1702-1703	\_	_	_
5-172	1703-1704	\_	_	_
5-173	1704-1705	:	_	_
5-174	1706-1709	the	_	_
5-175	1710-1716	labels	_	_
5-176	1717-1721	used	_	_
5-177	1722-1724	in	_	_
5-178	1725-1729	this	_	_
5-179	1730-1741	aggregation	_	_
5-180	1742-1746	were	_	_
5-181	1747-1756	collected	_	_
5-182	1757-1761	from	_	_
5-183	1762-1767	Media	_	_
5-184	1768-1772	Bias	_	_
5-185	1772-1773	/	_	_
5-186	1773-1777	Fact	_	_
5-187	1778-1783	Check	_	_
5-188	1784-1786	on	_	_
5-189	1787-1790	Mar	_	_
5-190	1791-1793	20	_	_
5-191	1793-1794	,	_	_
5-192	1795-1799	2020	_	_
5-193	1799-1800	.	_	_
5-194	1803-1804	#	_	_
5-195	1804-1805	#	_	_
5-196	1806-1814	Examples	_	_
5-197	1815-1816	#	_	_
5-198	1816-1817	#	_	_
5-199	1817-1818	#	_	_
5-200	1820-1832	load-sqlite3	_	_
5-201	1832-1833	.	_	_
5-202	1833-1835	py	_	_
5-203	1837-1838	\*	_	_
5-204	1839-1842	How	_	_
5-205	1843-1845	to	_	_
5-206	1846-1850	load	_	_
5-207	1851-1854	the	_	_
5-208	1855-1859	data	_	_
5-209	1860-1864	from	_	_
5-210	1865-1868	the	_	_
5-211	1869-1876	Sqlite3	_	_
5-212	1877-1885	database	_	_
5-213	1886-1891	using	_	_
5-214	1892-1895	SQL	_	_
5-215	1896-1903	queries	_	_

#Text=.
6-1	1903-1904	.	_	_

#Text=+ Loading data from single or multiple sources from the database   + Loading data from the database into a Pandas dataframe  Usage: ``` python3 load-sqlite3.py <path-to-database> ```  ###  load-json.py  \* How to load NELA in JSON format with Python 3
7-1	1907-1908	+	_	_
7-2	1909-1916	Loading	_	_
7-3	1917-1921	data	_	_
7-4	1922-1926	from	_	_
7-5	1927-1933	single	_	_
7-6	1934-1936	or	_	_
7-7	1937-1945	multiple	_	_
7-8	1946-1953	sources	_	_
7-9	1954-1958	from	_	_
7-10	1959-1962	the	_	_
7-11	1963-1971	database	_	_
7-12	1974-1975	+	_	_
7-13	1976-1983	Loading	_	_
7-14	1984-1988	data	_	_
7-15	1989-1993	from	_	_
7-16	1994-1997	the	_	_
7-17	1998-2006	database	_	_
7-18	2007-2011	into	_	_
7-19	2012-2013	a	_	_
7-20	2014-2020	Pandas	_	_
7-21	2021-2030	dataframe	_	_
7-22	2032-2037	Usage	_	_
7-23	2037-2038	:	_	_
7-24	2039-2040	`	_	_
7-25	2040-2041	`	_	_
7-26	2041-2042	`	_	_
7-27	2043-2050	python3	_	_
7-28	2051-2063	load-sqlite3	_	_
7-29	2063-2064	.	_	_
7-30	2064-2066	py	_	_
7-31	2067-2068	<	_	_
7-32	2068-2084	path-to-database	_	_
7-33	2084-2085	>	_	_
7-34	2086-2087	`	_	_
7-35	2087-2088	`	_	_
7-36	2088-2089	`	_	_
7-37	2091-2092	#	_	_
7-38	2092-2093	#	_	_
7-39	2093-2094	#	_	_
7-40	2096-2108	load-json.py	_	_
7-41	2110-2111	\*	_	_
7-42	2112-2115	How	_	_
7-43	2116-2118	to	_	_
7-44	2119-2123	load	_	_
7-45	2124-2128	NELA	_	_
7-46	2129-2131	in	_	_
7-47	2132-2136	JSON	_	_
7-48	2137-2143	format	_	_
7-49	2144-2148	with	_	_
7-50	2149-2155	Python	_	_
7-51	2156-2157	3	_	_

#Text=.
8-1	2157-2158	.	_	_

#Text=+ Loading a single source's JSON   + Loading a directory of NELA JSON files - \*\*WARNING\*\*: this consumes a lot of memory  Usage: ``` python3 load-json.py <path-to-file> ```
9-1	2161-2162	+	_	_
9-2	2163-2170	Loading	_	_
9-3	2171-2172	a	_	_
9-4	2173-2179	single	_	_
9-5	2180-2188	source's	_	_
9-6	2189-2193	JSON	_	_
9-7	2196-2197	+	_	_
9-8	2198-2205	Loading	_	_
9-9	2206-2207	a	_	_
9-10	2208-2217	directory	_	_
9-11	2218-2220	of	_	_
9-12	2221-2225	NELA	_	_
9-13	2226-2230	JSON	_	_
9-14	2231-2236	files	_	_
9-15	2237-2238	-	_	_
9-16	2239-2240	\*	_	_
9-17	2240-2241	\*	_	_
9-18	2241-2248	WARNING	_	_
9-19	2248-2249	\*	_	_
9-20	2249-2250	\*	_	_
9-21	2250-2251	:	_	_
9-22	2252-2256	this	_	_
9-23	2257-2265	consumes	_	_
9-24	2266-2267	a	_	_
9-25	2268-2271	lot	_	_
9-26	2272-2274	of	_	_
9-27	2275-2281	memory	_	_
9-28	2283-2288	Usage	_	_
9-29	2288-2289	:	_	_
9-30	2290-2291	`	_	_
9-31	2291-2292	`	_	_
9-32	2292-2293	`	_	_
9-33	2294-2301	python3	_	_
9-34	2302-2314	load-json.py	_	_
9-35	2315-2316	<	_	_
9-36	2316-2328	path-to-file	_	_
9-37	2328-2329	>	_	_
9-38	2330-2331	`	_	_
9-39	2331-2332	`	_	_
9-40	2332-2333	`	_	_