#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# NetCov NetCov is an open-source tool that can be used with \[Batfish\](https://github.com/batfish/batfish) to analyze test coverage for network configurations.
1-1	0-1	#	_	_
1-2	2-8	NetCov	_	_
1-3	9-15	NetCov	_	_
1-4	16-18	is	_	_
1-5	19-21	an	_	_
1-6	22-33	open-source	_	_
1-7	34-38	tool	_	_
1-8	39-43	that	_	_
1-9	44-47	can	_	_
1-10	48-50	be	_	_
1-11	51-55	used	_	_
1-12	56-60	with	_	_
1-13	61-62	\[	_	_
1-14	62-69	Batfish	_	_
1-15	69-70	\]	_	_
1-16	70-71	(	_	_
1-17	71-76	https	_	_
1-18	76-77	:	_	_
1-19	77-78	/	_	_
1-20	78-79	/	_	_
1-21	79-89	github.com	_	_
1-22	89-90	/	_	_
1-23	90-97	batfish	_	_
1-24	97-98	/	_	_
1-25	98-105	batfish	_	_
1-26	105-106	)	_	_
1-27	107-109	to	_	_
1-28	110-117	analyze	_	_
1-29	118-122	test	_	_
1-30	123-131	coverage	_	_
1-31	132-135	for	_	_
1-32	136-143	network	_	_
1-33	144-158	configurations	_	_
1-34	158-159	.	_	_

#Text=Given a set of Batfish queries, it analyzes which lines of configurations has/has not been covered.
2-1	160-165	Given	_	_
2-2	166-167	a	_	_
2-3	168-171	set	_	_
2-4	172-174	of	_	_
2-5	175-182	Batfish	_	_
2-6	183-190	queries	_	_
2-7	190-191	,	_	_
2-8	192-194	it	_	_
2-9	195-203	analyzes	_	_
2-10	204-209	which	_	_
2-11	210-215	lines	_	_
2-12	216-218	of	_	_
2-13	219-233	configurations	_	_
2-14	234-237	has	_	_
2-15	237-238	/	_	_
2-16	238-241	has	_	_
2-17	242-245	not	_	_
2-18	246-250	been	_	_
2-19	251-258	covered	_	_
2-20	258-259	.	_	_

#Text=The result can be used to assess the rigorousness of the test suite and help discover the blind spots.
3-1	260-263	The	_	_
3-2	264-270	result	_	_
3-3	271-274	can	_	_
3-4	275-277	be	_	_
3-5	278-282	used	_	_
3-6	283-285	to	_	_
3-7	286-292	assess	_	_
3-8	293-296	the	_	_
3-9	297-309	rigorousness	_	_
3-10	310-312	of	_	_
3-11	313-316	the	_	_
3-12	317-321	test	_	_
3-13	322-327	suite	_	_
3-14	328-331	and	_	_
3-15	332-336	help	_	_
3-16	337-345	discover	_	_
3-17	346-349	the	_	_
3-18	350-355	blind	_	_
3-19	356-361	spots	_	_
3-20	361-362	.	_	_

#Text=Please refer to our \[paper\](https://www.usenix.org/conference/nsdi23/presentation/xu) for technical details.
4-1	363-369	Please	_	_
4-2	370-375	refer	_	_
4-3	376-378	to	_	_
4-4	379-382	our	_	_
4-5	383-384	\[	_	_
4-6	384-389	paper	_	_
4-7	389-390	\]	_	_
4-8	390-391	(	_	_
4-9	391-396	https	_	_
4-10	396-397	:	_	_
4-11	397-398	/	_	_
4-12	398-399	/	_	_
4-13	399-413	www.usenix.org	_	_
4-14	413-414	/	_	_
4-15	414-424	conference	_	_
4-16	424-425	/	_	_
4-17	425-431	nsdi23	_	_
4-18	431-432	/	_	_
4-19	432-444	presentation	_	_
4-20	444-445	/	_	_
4-21	445-447	xu	_	_
4-22	447-448	)	_	_
4-23	449-452	for	_	_
4-24	453-462	technical	_	_
4-25	463-470	details	_	_
4-26	470-471	.	_	_

#Text=NetCov is written in Python and can be used in concert with \[pybatfish\](https://pybatfish.readthedocs.io/en/latest/notebooks/interacting.html), Batfish's Python API.
5-1	474-480	NetCov	_	_
5-2	481-483	is	_	_
5-3	484-491	written	_	_
5-4	492-494	in	_	_
5-5	495-501	Python	_	_
5-6	502-505	and	_	_
5-7	506-509	can	_	_
5-8	510-512	be	_	_
5-9	513-517	used	_	_
5-10	518-520	in	_	_
5-11	521-528	concert	_	_
5-12	529-533	with	_	_
5-13	534-535	\[	_	_
5-14	535-544	pybatfish	_	_
5-15	544-545	\]	_	_
5-16	545-546	(	_	_
5-17	546-551	https	_	_
5-18	551-552	:	_	_
5-19	552-553	/	_	_
5-20	553-554	/	_	_
5-21	554-578	pybatfish.readthedocs.io	_	_
5-21	554-563	pybatfish	_	_
5-22	578-579	/	_	_
5-23	579-581	en	_	_
5-24	581-582	/	_	_
5-25	582-588	latest	_	_
5-26	588-589	/	_	_
5-27	589-598	notebooks	_	_
5-28	598-599	/	_	_
5-29	599-615	interacting.html	_	_
5-30	615-616	)	_	_
5-31	616-617	,	_	_
5-32	618-627	Batfish's	_	_
5-32	618-625	Batfish	_	_
5-33	628-634	Python	_	_
5-34	635-638	API	_	_
5-35	638-639	.	_	_

#Text=\[<img src="screenshot\_demo\_video.png"  width="500">\](https://youtube.com/video/FcBD2LhxqOQ)  ## Features  NetCov supports coverage tracking for the following \[Batfish questions\](https://pybatfish.readthedocs.io/en/latest/questions.html):  - Reachability test via \[traceroute\](https://pybatfish.readthedocs.io/en/latest/notebooks/forwarding.html#Traceroute) question - Routing policy evaluation via \[testRoutePolicies\](https://pybatfish.readthedocs.io/en/latest/notebooks/routingProtocols.html#Test-Route-Policies) question - Direct inspection of routing tables via \[routes\](https://pybatfish.readthedocs.io/en/latest/notebooks/routingTables.html#Routes) and \[bgpRib\](https://pybatfish.readthedocs.io/en/latest/notebooks/routingTables.html#BGP-RIB) questions - Querying interfaces via \[interfaceProperties\](https://pybatfish.readthedocs.io/en/latest/notebooks/configProperties.html#Interface-Properties) question   NetCov supports configuration syntax of the following vendors:  \|                    \| Interface          \| BGP neighbor       \| Routing Policy     \| Prefix list        \| Community list     \| As-path list       \| \|--------------------\|--------------------\|--------------------\|--------------------\|--------------------\|--------------------\|--------------------\| \| Cisco              \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| \| Juniper            \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| \| Arista             \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| \| Palo Alto Networks \| :heavy\_check\_mark: \|                    \|                    \|                    \|                    \|                    \| \| SONiC              \|                    \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \| :heavy\_check\_mark: \|   If youâ€™d like support for additional \[vendors\](https://pybatfish.readthedocs.io/en/latest/supported\_devices.html) (which are supported by Batfish but unsupported by NetCov) or currently-unsupported configuration features, let us know via \[GitHub issue\](https://github.com/UWNetworksLab/netcov/issues).
6-1	641-642	\[	_	_
6-2	642-643	<	_	_
6-3	643-646	img	_	_
6-4	647-650	src	_	_
6-5	650-651	=	_	_
6-6	651-652	"	_	_
6-7	652-677	screenshot\_demo\_video.png	_	_
6-8	677-678	"	_	_
6-9	680-685	width	_	_
6-10	685-686	=	_	_
6-11	686-687	"	_	_
6-12	687-690	500	_	_
6-13	690-691	"	_	_
6-14	691-692	>	_	_
6-15	692-693	\]	_	_
6-16	693-694	(	_	_
6-17	694-699	https	_	_
6-18	699-700	:	_	_
6-19	700-701	/	_	_
6-20	701-702	/	_	_
6-21	702-713	youtube.com	_	_
6-22	713-714	/	_	_
6-23	714-719	video	_	_
6-24	719-720	/	_	_
6-25	720-731	FcBD2LhxqOQ	_	_
6-26	731-732	)	_	_
6-27	734-735	#	_	_
6-28	735-736	#	_	_
6-29	737-745	Features	_	_
6-30	747-753	NetCov	_	_
6-31	754-762	supports	_	_
6-32	763-771	coverage	_	_
6-33	772-780	tracking	_	_
6-34	781-784	for	_	_
6-35	785-788	the	_	_
6-36	789-798	following	_	_
6-37	799-800	\[	_	_
6-38	800-807	Batfish	_	_
6-39	808-817	questions	_	_
6-40	817-818	\]	_	_
6-41	818-819	(	_	_
6-42	819-824	https	_	_
6-43	824-825	:	_	_
6-44	825-826	/	_	_
6-45	826-827	/	_	_
6-46	827-851	pybatfish.readthedocs.io	_	_
6-46	827-836	pybatfish	_	_
6-47	851-852	/	_	_
6-48	852-854	en	_	_
6-49	854-855	/	_	_
6-50	855-861	latest	_	_
6-51	861-862	/	_	_
6-52	862-876	questions.html	_	_
6-53	876-877	)	_	_
6-54	877-878	:	_	_
6-55	880-881	-	_	_
6-56	882-894	Reachability	_	_
6-57	895-899	test	_	_
6-58	900-903	via	_	_
6-59	904-905	\[	_	_
6-60	905-915	traceroute	_	_
6-61	915-916	\]	_	_
6-62	916-917	(	_	_
6-63	917-922	https	_	_
6-64	922-923	:	_	_
6-65	923-924	/	_	_
6-66	924-925	/	_	_
6-67	925-949	pybatfish.readthedocs.io	_	_
6-67	925-934	pybatfish	_	_
6-68	949-950	/	_	_
6-69	950-952	en	_	_
6-70	952-953	/	_	_
6-71	953-959	latest	_	_
6-72	959-960	/	_	_
6-73	960-969	notebooks	_	_
6-74	969-970	/	_	_
6-75	970-985	forwarding.html	_	_
6-76	985-986	#	_	_
6-77	986-996	Traceroute	_	_
6-78	996-997	)	_	_
6-79	998-1006	question	_	_
6-80	1007-1008	-	_	_
6-81	1009-1016	Routing	_	_
6-82	1017-1023	policy	_	_
6-83	1024-1034	evaluation	_	_
6-84	1035-1038	via	_	_
6-85	1039-1040	\[	_	_
6-86	1040-1057	testRoutePolicies	_	_
6-87	1057-1058	\]	_	_
6-88	1058-1059	(	_	_
6-89	1059-1064	https	_	_
6-90	1064-1065	:	_	_
6-91	1065-1066	/	_	_
6-92	1066-1067	/	_	_
6-93	1067-1091	pybatfish.readthedocs.io	_	_
6-93	1067-1076	pybatfish	_	_
6-94	1091-1092	/	_	_
6-95	1092-1094	en	_	_
6-96	1094-1095	/	_	_
6-97	1095-1101	latest	_	_
6-98	1101-1102	/	_	_
6-99	1102-1111	notebooks	_	_
6-100	1111-1112	/	_	_
6-101	1112-1133	routingProtocols.html	_	_
6-102	1133-1134	#	_	_
6-103	1134-1153	Test-Route-Policies	_	_
6-104	1153-1154	)	_	_
6-105	1155-1163	question	_	_
6-106	1164-1165	-	_	_
6-107	1166-1172	Direct	_	_
6-108	1173-1183	inspection	_	_
6-109	1184-1186	of	_	_
6-110	1187-1194	routing	_	_
6-111	1195-1201	tables	_	_
6-112	1202-1205	via	_	_
6-113	1206-1207	\[	_	_
6-114	1207-1213	routes	_	_
6-115	1213-1214	\]	_	_
6-116	1214-1215	(	_	_
6-117	1215-1220	https	_	_
6-118	1220-1221	:	_	_
6-119	1221-1222	/	_	_
6-120	1222-1223	/	_	_
6-121	1223-1247	pybatfish.readthedocs.io	_	_
6-121	1223-1232	pybatfish	_	_
6-122	1247-1248	/	_	_
6-123	1248-1250	en	_	_
6-124	1250-1251	/	_	_
6-125	1251-1257	latest	_	_
6-126	1257-1258	/	_	_
6-127	1258-1267	notebooks	_	_
6-128	1267-1268	/	_	_
6-129	1268-1286	routingTables.html	_	_
6-130	1286-1287	#	_	_
6-131	1287-1293	Routes	_	_
6-132	1293-1294	)	_	_
6-133	1295-1298	and	_	_
6-134	1299-1300	\[	_	_
6-135	1300-1306	bgpRib	_	_
6-136	1306-1307	\]	_	_
6-137	1307-1308	(	_	_
6-138	1308-1313	https	_	_
6-139	1313-1314	:	_	_
6-140	1314-1315	/	_	_
6-141	1315-1316	/	_	_
6-142	1316-1340	pybatfish.readthedocs.io	_	_
6-142	1316-1325	pybatfish	_	_
6-143	1340-1341	/	_	_
6-144	1341-1343	en	_	_
6-145	1343-1344	/	_	_
6-146	1344-1350	latest	_	_
6-147	1350-1351	/	_	_
6-148	1351-1360	notebooks	_	_
6-149	1360-1361	/	_	_
6-150	1361-1379	routingTables.html	_	_
6-151	1379-1380	#	_	_
6-152	1380-1387	BGP-RIB	_	_
6-153	1387-1388	)	_	_
6-154	1389-1398	questions	_	_
6-155	1399-1400	-	_	_
6-156	1401-1409	Querying	_	_
6-157	1410-1420	interfaces	_	_
6-158	1421-1424	via	_	_
6-159	1425-1426	\[	_	_
6-160	1426-1445	interfaceProperties	_	_
6-161	1445-1446	\]	_	_
6-162	1446-1447	(	_	_
6-163	1447-1452	https	_	_
6-164	1452-1453	:	_	_
6-165	1453-1454	/	_	_
6-166	1454-1455	/	_	_
6-167	1455-1479	pybatfish.readthedocs.io	_	_
6-167	1455-1464	pybatfish	_	_
6-168	1479-1480	/	_	_
6-169	1480-1482	en	_	_
6-170	1482-1483	/	_	_
6-171	1483-1489	latest	_	_
6-172	1489-1490	/	_	_
6-173	1490-1499	notebooks	_	_
6-174	1499-1500	/	_	_
6-175	1500-1521	configProperties.html	_	_
6-176	1521-1522	#	_	_
6-177	1522-1542	Interface-Properties	_	_
6-178	1542-1543	)	_	_
6-179	1544-1552	question	_	_
6-180	1555-1561	NetCov	_	_
6-181	1562-1570	supports	_	_
6-182	1571-1584	configuration	_	_
6-183	1585-1591	syntax	_	_
6-184	1592-1594	of	_	_
6-185	1595-1598	the	_	_
6-186	1599-1608	following	_	_
6-187	1609-1616	vendors	_	_
6-188	1616-1617	:	_	_
6-189	1619-1620	\|	_	_
6-190	1640-1641	\|	_	_
6-191	1642-1651	Interface	_	_
6-192	1661-1662	\|	_	_
6-193	1663-1666	BGP	_	_
6-194	1667-1675	neighbor	_	_
6-195	1682-1683	\|	_	_
6-196	1684-1691	Routing	_	_
6-197	1692-1698	Policy	_	_
6-198	1703-1704	\|	_	_
6-199	1705-1711	Prefix	_	_
6-200	1712-1716	list	_	_
6-201	1724-1725	\|	_	_
6-202	1726-1735	Community	_	_
6-203	1736-1740	list	_	_
6-204	1745-1746	\|	_	_
6-205	1747-1754	As-path	_	_
6-206	1755-1759	list	_	_
6-207	1766-1767	\|	_	_
6-208	1768-1769	\|	_	_
6-209	1769-1770	-	_	_
6-210	1770-1771	-	_	_
6-211	1771-1772	-	_	_
6-212	1772-1773	-	_	_
6-213	1773-1774	-	_	_
6-214	1774-1775	-	_	_
6-215	1775-1776	-	_	_
6-216	1776-1777	-	_	_
6-217	1777-1778	-	_	_
6-218	1778-1779	-	_	_
6-219	1779-1780	-	_	_
6-220	1780-1781	-	_	_
6-221	1781-1782	-	_	_
6-222	1782-1783	-	_	_
6-223	1783-1784	-	_	_
6-224	1784-1785	-	_	_
6-225	1785-1786	-	_	_
6-226	1786-1787	-	_	_
6-227	1787-1788	-	_	_
6-228	1788-1789	-	_	_
6-229	1789-1790	\|	_	_
6-230	1790-1791	-	_	_
6-231	1791-1792	-	_	_
6-232	1792-1793	-	_	_
6-233	1793-1794	-	_	_
6-234	1794-1795	-	_	_
6-235	1795-1796	-	_	_
6-236	1796-1797	-	_	_
6-237	1797-1798	-	_	_
6-238	1798-1799	-	_	_
6-239	1799-1800	-	_	_
6-240	1800-1801	-	_	_
6-241	1801-1802	-	_	_
6-242	1802-1803	-	_	_
6-243	1803-1804	-	_	_
6-244	1804-1805	-	_	_
6-245	1805-1806	-	_	_
6-246	1806-1807	-	_	_
6-247	1807-1808	-	_	_
6-248	1808-1809	-	_	_
6-249	1809-1810	-	_	_
6-250	1810-1811	\|	_	_
6-251	1811-1812	-	_	_
6-252	1812-1813	-	_	_
6-253	1813-1814	-	_	_
6-254	1814-1815	-	_	_
6-255	1815-1816	-	_	_
6-256	1816-1817	-	_	_
6-257	1817-1818	-	_	_
6-258	1818-1819	-	_	_
6-259	1819-1820	-	_	_
6-260	1820-1821	-	_	_
6-261	1821-1822	-	_	_
6-262	1822-1823	-	_	_
6-263	1823-1824	-	_	_
6-264	1824-1825	-	_	_
6-265	1825-1826	-	_	_
6-266	1826-1827	-	_	_
6-267	1827-1828	-	_	_
6-268	1828-1829	-	_	_
6-269	1829-1830	-	_	_
6-270	1830-1831	-	_	_
6-271	1831-1832	\|	_	_
6-272	1832-1833	-	_	_
6-273	1833-1834	-	_	_
6-274	1834-1835	-	_	_
6-275	1835-1836	-	_	_
6-276	1836-1837	-	_	_
6-277	1837-1838	-	_	_
6-278	1838-1839	-	_	_
6-279	1839-1840	-	_	_
6-280	1840-1841	-	_	_
6-281	1841-1842	-	_	_
6-282	1842-1843	-	_	_
6-283	1843-1844	-	_	_
6-284	1844-1845	-	_	_
6-285	1845-1846	-	_	_
6-286	1846-1847	-	_	_
6-287	1847-1848	-	_	_
6-288	1848-1849	-	_	_
6-289	1849-1850	-	_	_
6-290	1850-1851	-	_	_
6-291	1851-1852	-	_	_
6-292	1852-1853	\|	_	_
6-293	1853-1854	-	_	_
6-294	1854-1855	-	_	_
6-295	1855-1856	-	_	_
6-296	1856-1857	-	_	_
6-297	1857-1858	-	_	_
6-298	1858-1859	-	_	_
6-299	1859-1860	-	_	_
6-300	1860-1861	-	_	_
6-301	1861-1862	-	_	_
6-302	1862-1863	-	_	_
6-303	1863-1864	-	_	_
6-304	1864-1865	-	_	_
6-305	1865-1866	-	_	_
6-306	1866-1867	-	_	_
6-307	1867-1868	-	_	_
6-308	1868-1869	-	_	_
6-309	1869-1870	-	_	_
6-310	1870-1871	-	_	_
6-311	1871-1872	-	_	_
6-312	1872-1873	-	_	_
6-313	1873-1874	\|	_	_
6-314	1874-1875	-	_	_
6-315	1875-1876	-	_	_
6-316	1876-1877	-	_	_
6-317	1877-1878	-	_	_
6-318	1878-1879	-	_	_
6-319	1879-1880	-	_	_
6-320	1880-1881	-	_	_
6-321	1881-1882	-	_	_
6-322	1882-1883	-	_	_
6-323	1883-1884	-	_	_
6-324	1884-1885	-	_	_
6-325	1885-1886	-	_	_
6-326	1886-1887	-	_	_
6-327	1887-1888	-	_	_
6-328	1888-1889	-	_	_
6-329	1889-1890	-	_	_
6-330	1890-1891	-	_	_
6-331	1891-1892	-	_	_
6-332	1892-1893	-	_	_
6-333	1893-1894	-	_	_
6-334	1894-1895	\|	_	_
6-335	1895-1896	-	_	_
6-336	1896-1897	-	_	_
6-337	1897-1898	-	_	_
6-338	1898-1899	-	_	_
6-339	1899-1900	-	_	_
6-340	1900-1901	-	_	_
6-341	1901-1902	-	_	_
6-342	1902-1903	-	_	_
6-343	1903-1904	-	_	_
6-344	1904-1905	-	_	_
6-345	1905-1906	-	_	_
6-346	1906-1907	-	_	_
6-347	1907-1908	-	_	_
6-348	1908-1909	-	_	_
6-349	1909-1910	-	_	_
6-350	1910-1911	-	_	_
6-351	1911-1912	-	_	_
6-352	1912-1913	-	_	_
6-353	1913-1914	-	_	_
6-354	1914-1915	-	_	_
6-355	1915-1916	\|	_	_
6-356	1917-1918	\|	_	_
6-357	1919-1924	Cisco	_	_
6-358	1938-1939	\|	_	_
6-359	1940-1941	:	_	_
6-360	1941-1957	heavy\_check\_mark	_	_
6-361	1957-1958	:	_	_
6-362	1959-1960	\|	_	_
6-363	1961-1962	:	_	_
6-364	1962-1978	heavy\_check\_mark	_	_
6-365	1978-1979	:	_	_
6-366	1980-1981	\|	_	_
6-367	1982-1983	:	_	_
6-368	1983-1999	heavy\_check\_mark	_	_
6-369	1999-2000	:	_	_
6-370	2001-2002	\|	_	_
6-371	2003-2004	:	_	_
6-372	2004-2020	heavy\_check\_mark	_	_
6-373	2020-2021	:	_	_
6-374	2022-2023	\|	_	_
6-375	2024-2025	:	_	_
6-376	2025-2041	heavy\_check\_mark	_	_
6-377	2041-2042	:	_	_
6-378	2043-2044	\|	_	_
6-379	2045-2046	:	_	_
6-380	2046-2062	heavy\_check\_mark	_	_
6-381	2062-2063	:	_	_
6-382	2064-2065	\|	_	_
6-383	2066-2067	\|	_	_
6-384	2068-2075	Juniper	_	_
6-385	2087-2088	\|	_	_
6-386	2089-2090	:	_	_
6-387	2090-2106	heavy\_check\_mark	_	_
6-388	2106-2107	:	_	_
6-389	2108-2109	\|	_	_
6-390	2110-2111	:	_	_
6-391	2111-2127	heavy\_check\_mark	_	_
6-392	2127-2128	:	_	_
6-393	2129-2130	\|	_	_
6-394	2131-2132	:	_	_
6-395	2132-2148	heavy\_check\_mark	_	_
6-396	2148-2149	:	_	_
6-397	2150-2151	\|	_	_
6-398	2152-2153	:	_	_
6-399	2153-2169	heavy\_check\_mark	_	_
6-400	2169-2170	:	_	_
6-401	2171-2172	\|	_	_
6-402	2173-2174	:	_	_
6-403	2174-2190	heavy\_check\_mark	_	_
6-404	2190-2191	:	_	_
6-405	2192-2193	\|	_	_
6-406	2194-2195	:	_	_
6-407	2195-2211	heavy\_check\_mark	_	_
6-408	2211-2212	:	_	_
6-409	2213-2214	\|	_	_
6-410	2215-2216	\|	_	_
6-411	2217-2223	Arista	_	_
6-412	2236-2237	\|	_	_
6-413	2238-2239	:	_	_
6-414	2239-2255	heavy\_check\_mark	_	_
6-415	2255-2256	:	_	_
6-416	2257-2258	\|	_	_
6-417	2259-2260	:	_	_
6-418	2260-2276	heavy\_check\_mark	_	_
6-419	2276-2277	:	_	_
6-420	2278-2279	\|	_	_
6-421	2280-2281	:	_	_
6-422	2281-2297	heavy\_check\_mark	_	_
6-423	2297-2298	:	_	_
6-424	2299-2300	\|	_	_
6-425	2301-2302	:	_	_
6-426	2302-2318	heavy\_check\_mark	_	_
6-427	2318-2319	:	_	_
6-428	2320-2321	\|	_	_
6-429	2322-2323	:	_	_
6-430	2323-2339	heavy\_check\_mark	_	_
6-431	2339-2340	:	_	_
6-432	2341-2342	\|	_	_
6-433	2343-2344	:	_	_
6-434	2344-2360	heavy\_check\_mark	_	_
6-435	2360-2361	:	_	_
6-436	2362-2363	\|	_	_
6-437	2364-2365	\|	_	_
6-438	2366-2370	Palo	_	_
6-439	2371-2375	Alto	_	_
6-440	2376-2384	Networks	_	_
6-441	2385-2386	\|	_	_
6-442	2387-2388	:	_	_
6-443	2388-2404	heavy\_check\_mark	_	_
6-444	2404-2405	:	_	_
6-445	2406-2407	\|	_	_
6-446	2427-2428	\|	_	_
6-447	2448-2449	\|	_	_
6-448	2469-2470	\|	_	_
6-449	2490-2491	\|	_	_
6-450	2511-2512	\|	_	_
6-451	2513-2514	\|	_	_
6-452	2515-2520	SONiC	_	_
6-453	2534-2535	\|	_	_
6-454	2555-2556	\|	_	_
6-455	2557-2558	:	_	_
6-456	2558-2574	heavy\_check\_mark	_	_
6-457	2574-2575	:	_	_
6-458	2576-2577	\|	_	_
6-459	2578-2579	:	_	_
6-460	2579-2595	heavy\_check\_mark	_	_
6-461	2595-2596	:	_	_
6-462	2597-2598	\|	_	_
6-463	2599-2600	:	_	_
6-464	2600-2616	heavy\_check\_mark	_	_
6-465	2616-2617	:	_	_
6-466	2618-2619	\|	_	_
6-467	2620-2621	:	_	_
6-468	2621-2637	heavy\_check\_mark	_	_
6-469	2637-2638	:	_	_
6-470	2639-2640	\|	_	_
6-471	2641-2642	:	_	_
6-472	2642-2658	heavy\_check\_mark	_	_
6-473	2658-2659	:	_	_
6-474	2660-2661	\|	_	_
6-475	2664-2666	If	_	_
6-476	2667-2670	you	_	_
6-477	2670-2671	â€™	_	_
6-478	2671-2672	d	_	_
6-479	2673-2677	like	_	_
6-480	2678-2685	support	_	_
6-481	2686-2689	for	_	_
6-482	2690-2700	additional	_	_
6-483	2701-2702	\[	_	_
6-484	2702-2709	vendors	_	_
6-485	2709-2710	\]	_	_
6-486	2710-2711	(	_	_
6-487	2711-2716	https	_	_
6-488	2716-2717	:	_	_
6-489	2717-2718	/	_	_
6-490	2718-2719	/	_	_
6-491	2719-2743	pybatfish.readthedocs.io	_	_
6-491	2719-2728	pybatfish	_	_
6-492	2743-2744	/	_	_
6-493	2744-2746	en	_	_
6-494	2746-2747	/	_	_
6-495	2747-2753	latest	_	_
6-496	2753-2754	/	_	_
6-497	2754-2776	supported\_devices.html	_	_
6-498	2776-2777	)	_	_
6-499	2778-2779	(	_	_
6-500	2779-2784	which	_	_
6-501	2785-2788	are	_	_
6-502	2789-2798	supported	_	_
6-503	2799-2801	by	_	_
6-504	2802-2809	Batfish	_	_
6-505	2810-2813	but	_	_
6-506	2814-2825	unsupported	_	_
6-507	2826-2828	by	_	_
6-508	2829-2835	NetCov	_	_
6-509	2835-2836	)	_	_
6-510	2837-2839	or	_	_
6-511	2840-2861	currently-unsupported	_	_
6-512	2862-2875	configuration	_	_
6-513	2876-2884	features	_	_
6-514	2884-2885	,	_	_
6-515	2886-2889	let	_	_
6-516	2890-2892	us	_	_
6-517	2893-2897	know	_	_
6-518	2898-2901	via	_	_
6-519	2902-2903	\[	_	_
6-520	2903-2909	GitHub	_	_
6-521	2910-2915	issue	_	_
6-522	2915-2916	\]	_	_
6-523	2916-2917	(	_	_
6-524	2917-2922	https	_	_
6-525	2922-2923	:	_	_
6-526	2923-2924	/	_	_
6-527	2924-2925	/	_	_
6-528	2925-2935	github.com	_	_
6-529	2935-2936	/	_	_
6-530	2936-2949	UWNetworksLab	_	_
6-531	2949-2950	/	_	_
6-532	2950-2956	netcov	_	_
6-533	2956-2957	/	_	_
6-534	2957-2963	issues	_	_
6-535	2963-2964	)	_	_
6-536	2964-2965	.	_	_

#Text=We'll try to add support, and it would help if you share a configuration example.
7-1	2966-2971	We'll	_	_
7-2	2972-2975	try	_	_
7-3	2976-2978	to	_	_
7-4	2979-2982	add	_	_
7-5	2983-2990	support	_	_
7-6	2990-2991	,	_	_
7-7	2992-2995	and	_	_
7-8	2996-2998	it	_	_
7-9	2999-3004	would	_	_
7-10	3005-3009	help	_	_
7-11	3010-3012	if	_	_
7-12	3013-3016	you	_	_
7-13	3017-3022	share	_	_
7-14	3023-3024	a	_	_
7-15	3025-3038	configuration	_	_
7-16	3039-3046	example	_	_
7-17	3046-3047	.	_	_

#Text=You may want to use an \[anonymizer\](https://github.com/intentionet/netconan) before sharing.
8-1	3048-3051	You	_	_
8-2	3052-3055	may	_	_
8-3	3056-3060	want	_	_
8-4	3061-3063	to	_	_
8-5	3064-3067	use	_	_
8-6	3068-3070	an	_	_
8-7	3071-3072	\[	_	_
8-8	3072-3082	anonymizer	_	_
8-9	3082-3083	\]	_	_
8-10	3083-3084	(	_	_
8-11	3084-3089	https	_	_
8-12	3089-3090	:	_	_
8-13	3090-3091	/	_	_
8-14	3091-3092	/	_	_
8-15	3092-3102	github.com	_	_
8-16	3102-3103	/	_	_
8-17	3103-3114	intentionet	_	_
8-18	3114-3115	/	_	_
8-19	3115-3123	netconan	_	_
8-20	3123-3124	)	_	_
8-21	3125-3131	before	_	_
8-22	3132-3139	sharing	_	_
8-23	3139-3140	.	_	_

#Text=NetCov reports configuration coverage as the percentage of configuration lines that are covered, such as:  <img src="screenshot\_aggregate.png"  width="500">  NetCov can also report fine-grained coverage results as colored annotations on source configurations (lines in blue are covered, lines in red are not covered):  <img src="screenshot\_annotation.png"  width="500">  You can find an example of the coverage report \[here\](https://rawcdn.githack.com/UWNetworksLab/netcov/main/examples/fattree4/coverage/HTML\_REPORT/index.html).     ## Installing NetCov Install NetCov using `pip`.
9-1	3142-3148	NetCov	_	_
9-2	3149-3156	reports	_	_
9-3	3157-3170	configuration	_	_
9-4	3171-3179	coverage	_	_
9-5	3180-3182	as	_	_
9-6	3183-3186	the	_	_
9-7	3187-3197	percentage	_	_
9-8	3198-3200	of	_	_
9-9	3201-3214	configuration	_	_
9-10	3215-3220	lines	_	_
9-11	3221-3225	that	_	_
9-12	3226-3229	are	_	_
9-13	3230-3237	covered	_	_
9-14	3237-3238	,	_	_
9-15	3239-3243	such	_	_
9-16	3244-3246	as	_	_
9-17	3246-3247	:	_	_
9-18	3249-3250	<	_	_
9-19	3250-3253	img	_	_
9-20	3254-3257	src	_	_
9-21	3257-3258	=	_	_
9-22	3258-3259	"	_	_
9-23	3259-3283	screenshot\_aggregate.png	_	_
9-24	3283-3284	"	_	_
9-25	3286-3291	width	_	_
9-26	3291-3292	=	_	_
9-27	3292-3293	"	_	_
9-28	3293-3296	500	_	_
9-29	3296-3297	"	_	_
9-30	3297-3298	>	_	_
9-31	3300-3306	NetCov	_	_
9-32	3307-3310	can	_	_
9-33	3311-3315	also	_	_
9-34	3316-3322	report	_	_
9-35	3323-3335	fine-grained	_	_
9-36	3336-3344	coverage	_	_
9-37	3345-3352	results	_	_
9-38	3353-3355	as	_	_
9-39	3356-3363	colored	_	_
9-40	3364-3375	annotations	_	_
9-41	3376-3378	on	_	_
9-42	3379-3385	source	_	_
9-43	3386-3400	configurations	_	_
9-44	3401-3402	(	_	_
9-45	3402-3407	lines	_	_
9-46	3408-3410	in	_	_
9-47	3411-3415	blue	_	_
9-48	3416-3419	are	_	_
9-49	3420-3427	covered	_	_
9-50	3427-3428	,	_	_
9-51	3429-3434	lines	_	_
9-52	3435-3437	in	_	_
9-53	3438-3441	red	_	_
9-54	3442-3445	are	_	_
9-55	3446-3449	not	_	_
9-56	3450-3457	covered	_	_
9-57	3457-3458	)	_	_
9-58	3458-3459	:	_	_
9-59	3461-3462	<	_	_
9-60	3462-3465	img	_	_
9-61	3466-3469	src	_	_
9-62	3469-3470	=	_	_
9-63	3470-3471	"	_	_
9-64	3471-3496	screenshot\_annotation.png	_	_
9-65	3496-3497	"	_	_
9-66	3499-3504	width	_	_
9-67	3504-3505	=	_	_
9-68	3505-3506	"	_	_
9-69	3506-3509	500	_	_
9-70	3509-3510	"	_	_
9-71	3510-3511	>	_	_
9-72	3513-3516	You	_	_
9-73	3517-3520	can	_	_
9-74	3521-3525	find	_	_
9-75	3526-3528	an	_	_
9-76	3529-3536	example	_	_
9-77	3537-3539	of	_	_
9-78	3540-3543	the	_	_
9-79	3544-3552	coverage	_	_
9-80	3553-3559	report	_	_
9-81	3560-3561	\[	_	_
9-82	3561-3565	here	_	_
9-83	3565-3566	\]	_	_
9-84	3566-3567	(	_	_
9-85	3567-3572	https	_	_
9-86	3572-3573	:	_	_
9-87	3573-3574	/	_	_
9-88	3574-3575	/	_	_
9-89	3575-3593	rawcdn.githack.com	_	_
9-90	3593-3594	/	_	_
9-91	3594-3607	UWNetworksLab	_	_
9-92	3607-3608	/	_	_
9-93	3608-3614	netcov	_	_
9-94	3614-3615	/	_	_
9-95	3615-3619	main	_	_
9-96	3619-3620	/	_	_
9-97	3620-3628	examples	_	_
9-98	3628-3629	/	_	_
9-99	3629-3637	fattree4	_	_
9-100	3637-3638	/	_	_
9-101	3638-3646	coverage	_	_
9-102	3646-3647	/	_	_
9-103	3647-3658	HTML\_REPORT	_	_
9-104	3658-3659	/	_	_
9-105	3659-3669	index.html	_	_
9-106	3669-3670	)	_	_
9-107	3670-3671	.	_	_
9-108	3676-3677	#	_	_
9-109	3677-3678	#	_	_
9-110	3679-3689	Installing	_	_
9-111	3690-3696	NetCov	_	_
9-112	3697-3704	Install	_	_
9-113	3705-3711	NetCov	_	_
9-114	3712-3717	using	_	_
9-115	3718-3719	`	_	_
9-116	3719-3722	pip	_	_
9-117	3722-3723	`	_	_
9-118	3723-3724	.	_	_

#Text=A virtual environment and Python version 3.7 is recommended.
10-1	3725-3726	A	_	_
10-2	3727-3734	virtual	_	_
10-3	3735-3746	environment	_	_
10-4	3747-3750	and	_	_
10-5	3751-3757	Python	_	_
10-6	3758-3765	version	_	_
10-7	3766-3769	3.7	_	_
10-8	3770-3772	is	_	_
10-9	3773-3784	recommended	_	_
10-10	3784-3785	.	_	_

#Text=```sh $ pip install netcov ```  NetCov leverages \[LCOV\](https://github.com/linux-test-project/lcov) to generate HTML report.
11-1	3786-3787	`	_	_
11-2	3787-3788	`	_	_
11-3	3788-3789	`	_	_
11-4	3789-3791	sh	_	_
11-5	3792-3793	$	_	_
11-6	3794-3797	pip	_	_
11-7	3798-3805	install	_	_
11-8	3806-3812	netcov	_	_
11-9	3813-3814	`	_	_
11-10	3814-3815	`	_	_
11-11	3815-3816	`	_	_
11-12	3818-3824	NetCov	_	_
11-13	3825-3834	leverages	_	_
11-14	3835-3836	\[	_	_
11-15	3836-3840	LCOV	_	_
11-16	3840-3841	\]	_	_
11-17	3841-3842	(	_	_
11-18	3842-3847	https	_	_
11-19	3847-3848	:	_	_
11-20	3848-3849	/	_	_
11-21	3849-3850	/	_	_
11-22	3850-3860	github.com	_	_
11-23	3860-3861	/	_	_
11-24	3861-3879	linux-test-project	_	_
11-25	3879-3880	/	_	_
11-26	3880-3884	lcov	_	_
11-27	3884-3885	)	_	_
11-28	3886-3888	to	_	_
11-29	3889-3897	generate	_	_
11-30	3898-3902	HTML	_	_
11-31	3903-3909	report	_	_
11-32	3909-3910	.	_	_

#Text=If you would like to use this feature, install LCOV using Homebrew (MacOS) or apt (Ubuntu):  Install `lcov` on MacOS using Homebrew: ```sh $ brew install lcov ``` Install `lcov` on Ubuntu using apt: ```sh $ sudo apt install lcov ```     ## Usage NetCov can be used seamlessly with `pybatfish`.
12-1	3911-3913	If	_	_
12-2	3914-3917	you	_	_
12-3	3918-3923	would	_	_
12-4	3924-3928	like	_	_
12-5	3929-3931	to	_	_
12-6	3932-3935	use	_	_
12-7	3936-3940	this	_	_
12-8	3941-3948	feature	_	_
12-9	3948-3949	,	_	_
12-10	3950-3957	install	_	_
12-11	3958-3962	LCOV	_	_
12-12	3963-3968	using	_	_
12-13	3969-3977	Homebrew	_	_
12-14	3978-3979	(	_	_
12-15	3979-3984	MacOS	_	_
12-16	3984-3985	)	_	_
12-17	3986-3988	or	_	_
12-18	3989-3992	apt	_	_
12-19	3993-3994	(	_	_
12-20	3994-4000	Ubuntu	_	_
12-21	4000-4001	)	_	_
12-22	4001-4002	:	_	_
12-23	4004-4011	Install	_	_
12-24	4012-4013	`	_	_
12-25	4013-4017	lcov	_	_
12-26	4017-4018	`	_	_
12-27	4019-4021	on	_	_
12-28	4022-4027	MacOS	_	_
12-29	4028-4033	using	_	_
12-30	4034-4042	Homebrew	_	_
12-31	4042-4043	:	_	_
12-32	4044-4045	`	_	_
12-33	4045-4046	`	_	_
12-34	4046-4047	`	_	_
12-35	4047-4049	sh	_	_
12-36	4050-4051	$	_	_
12-37	4052-4056	brew	_	_
12-38	4057-4064	install	_	_
12-39	4065-4069	lcov	_	_
12-40	4070-4071	`	_	_
12-41	4071-4072	`	_	_
12-42	4072-4073	`	_	_
12-43	4074-4081	Install	_	_
12-44	4082-4083	`	_	_
12-45	4083-4087	lcov	_	_
12-46	4087-4088	`	_	_
12-47	4089-4091	on	_	_
12-48	4092-4098	Ubuntu	_	_
12-49	4099-4104	using	_	_
12-50	4105-4108	apt	_	_
12-51	4108-4109	:	_	_
12-52	4110-4111	`	_	_
12-53	4111-4112	`	_	_
12-54	4112-4113	`	_	_
12-55	4113-4115	sh	_	_
12-56	4116-4117	$	_	_
12-57	4118-4122	sudo	_	_
12-58	4123-4126	apt	_	_
12-59	4127-4134	install	_	_
12-60	4135-4139	lcov	_	_
12-61	4140-4141	`	_	_
12-62	4141-4142	`	_	_
12-63	4142-4143	`	_	_
12-64	4148-4149	#	_	_
12-65	4149-4150	#	_	_
12-66	4151-4156	Usage	_	_
12-67	4157-4163	NetCov	_	_
12-68	4164-4167	can	_	_
12-69	4168-4170	be	_	_
12-70	4171-4175	used	_	_
12-71	4176-4186	seamlessly	_	_
12-72	4187-4191	with	_	_
12-73	4192-4193	`	_	_
12-74	4193-4202	pybatfish	_	_
12-75	4202-4203	`	_	_
12-76	4203-4204	.	_	_

#Text=It provides a hooked version of pybatfish APIs that automatically tracks coverage during the execution of supported pybatfish questions.   ### Using NetCov for an existing pybatfish script/notebook  It takes only two simple steps to measure coverage for your existing pybatfish scripts/notebooks.  1.
13-1	4205-4207	It	_	_
13-2	4208-4216	provides	_	_
13-3	4217-4218	a	_	_
13-4	4219-4225	hooked	_	_
13-5	4226-4233	version	_	_
13-6	4234-4236	of	_	_
13-7	4237-4246	pybatfish	_	_
13-8	4247-4251	APIs	_	_
13-9	4252-4256	that	_	_
13-10	4257-4270	automatically	_	_
13-11	4271-4277	tracks	_	_
13-12	4278-4286	coverage	_	_
13-13	4287-4293	during	_	_
13-14	4294-4297	the	_	_
13-15	4298-4307	execution	_	_
13-16	4308-4310	of	_	_
13-17	4311-4320	supported	_	_
13-18	4321-4330	pybatfish	_	_
13-19	4331-4340	questions	_	_
13-20	4340-4341	.	_	_
13-21	4344-4345	#	_	_
13-22	4345-4346	#	_	_
13-23	4346-4347	#	_	_
13-24	4348-4353	Using	_	_
13-25	4354-4360	NetCov	_	_
13-26	4361-4364	for	_	_
13-27	4365-4367	an	_	_
13-28	4368-4376	existing	_	_
13-29	4377-4386	pybatfish	_	_
13-30	4387-4393	script	_	_
13-31	4393-4394	/	_	_
13-32	4394-4402	notebook	_	_
13-33	4404-4406	It	_	_
13-34	4407-4412	takes	_	_
13-35	4413-4417	only	_	_
13-36	4418-4421	two	_	_
13-37	4422-4428	simple	_	_
13-38	4429-4434	steps	_	_
13-39	4435-4437	to	_	_
13-40	4438-4445	measure	_	_
13-41	4446-4454	coverage	_	_
13-42	4455-4458	for	_	_
13-43	4459-4463	your	_	_
13-44	4464-4472	existing	_	_
13-45	4473-4482	pybatfish	_	_
13-46	4483-4490	scripts	_	_
13-47	4490-4491	/	_	_
13-48	4491-4500	notebooks	_	_
13-49	4500-4501	.	_	_
13-50	4503-4504	1	_	_
13-51	4504-4505	.	_	_

#Text=For import, replace pybatfish client session with the one provided by NetCov: ```python #from pybatfish.client.session import Session from netcov import NetCovSession as Session ``` 2.
14-1	4506-4509	For	_	_
14-2	4510-4516	import	_	_
14-3	4516-4517	,	_	_
14-4	4518-4525	replace	_	_
14-5	4526-4535	pybatfish	_	_
14-6	4536-4542	client	_	_
14-7	4543-4550	session	_	_
14-8	4551-4555	with	_	_
14-9	4556-4559	the	_	_
14-10	4560-4563	one	_	_
14-11	4564-4572	provided	_	_
14-12	4573-4575	by	_	_
14-13	4576-4582	NetCov	_	_
14-14	4582-4583	:	_	_
14-15	4584-4585	`	_	_
14-16	4585-4586	`	_	_
14-17	4586-4587	`	_	_
14-18	4587-4593	python	_	_
14-19	4594-4595	#	_	_
14-20	4595-4599	from	_	_
14-21	4600-4624	pybatfish.client.session	_	_
14-21	4600-4609	pybatfish	_	_
14-22	4625-4631	import	_	_
14-23	4632-4639	Session	_	_
14-24	4640-4644	from	_	_
14-25	4645-4651	netcov	_	_
14-26	4652-4658	import	_	_
14-27	4659-4672	NetCovSession	_	_
14-28	4673-4675	as	_	_
14-29	4676-4683	Session	_	_
14-30	4684-4685	`	_	_
14-31	4685-4686	`	_	_
14-32	4686-4687	`	_	_
14-33	4688-4689	2	_	_
14-34	4689-4690	.	_	_

#Text=Generate coverage results at the end of your script.
15-1	4691-4699	Generate	_	_
15-2	4700-4708	coverage	_	_
15-3	4709-4716	results	_	_
15-4	4717-4719	at	_	_
15-5	4720-4723	the	_	_
15-6	4724-4727	end	_	_
15-7	4728-4730	of	_	_
15-8	4731-4735	your	_	_
15-9	4736-4742	script	_	_
15-10	4742-4743	.	_	_

#Text=To print coverage metrics to the console, use `bf.cov.result()`.
16-1	4744-4746	To	_	_
16-2	4747-4752	print	_	_
16-3	4753-4761	coverage	_	_
16-4	4762-4769	metrics	_	_
16-5	4770-4772	to	_	_
16-6	4773-4776	the	_	_
16-7	4777-4784	console	_	_
16-8	4784-4785	,	_	_
16-9	4786-4789	use	_	_
16-10	4790-4791	`	_	_
16-11	4791-4804	bf.cov.result	_	_
16-12	4804-4805	(	_	_
16-13	4805-4806	)	_	_
16-14	4806-4807	`	_	_
16-15	4807-4808	.	_	_

#Text=To generate HTML report, use `bf.cov.html\_report()`.  ### Use NetCov for a new pybatfish script/notebook   We provide a \[demo video\](https://www.youtube.com/watch?
17-1	4809-4811	To	_	_
17-2	4812-4820	generate	_	_
17-3	4821-4825	HTML	_	_
17-4	4826-4832	report	_	_
17-5	4832-4833	,	_	_
17-6	4834-4837	use	_	_
17-7	4838-4839	`	_	_
17-8	4839-4857	bf.cov.html\_report	_	_
17-9	4857-4858	(	_	_
17-10	4858-4859	)	_	_
17-11	4859-4860	`	_	_
17-12	4860-4861	.	_	_
17-13	4863-4864	#	_	_
17-14	4864-4865	#	_	_
17-15	4865-4866	#	_	_
17-16	4867-4870	Use	_	_
17-17	4871-4877	NetCov	_	_
17-18	4878-4881	for	_	_
17-19	4882-4883	a	_	_
17-20	4884-4887	new	_	_
17-21	4888-4897	pybatfish	_	_
17-22	4898-4904	script	_	_
17-23	4904-4905	/	_	_
17-24	4905-4913	notebook	_	_
17-25	4916-4918	We	_	_
17-26	4919-4926	provide	_	_
17-27	4927-4928	a	_	_
17-28	4929-4930	\[	_	_
17-29	4930-4934	demo	_	_
17-30	4935-4940	video	_	_
17-31	4940-4941	\]	_	_
17-32	4941-4942	(	_	_
17-33	4942-4947	https	_	_
17-34	4947-4948	:	_	_
17-35	4948-4949	/	_	_
17-36	4949-4950	/	_	_
17-37	4950-4965	www.youtube.com	_	_
17-38	4965-4966	/	_	_
17-39	4966-4971	watch	_	_
17-40	4971-4972	?	_	_

#Text=v=FcBD2LhxqOQ) and an \[example\](examples/demo.ipynb) to help you get started.
18-1	4972-4973	v	_	_
18-2	4973-4974	=	_	_
18-3	4974-4985	FcBD2LhxqOQ	_	_
18-4	4985-4986	)	_	_
18-5	4987-4990	and	_	_
18-6	4991-4993	an	_	_
18-7	4994-4995	\[	_	_
18-8	4995-5002	example	_	_
18-9	5002-5003	\]	_	_
18-10	5003-5004	(	_	_
18-11	5004-5012	examples	_	_
18-12	5012-5013	/	_	_
18-13	5013-5023	demo.ipynb	_	_
18-14	5023-5024	)	_	_
18-15	5025-5027	to	_	_
18-16	5028-5032	help	_	_
18-17	5033-5036	you	_	_
18-18	5037-5040	get	_	_
18-19	5041-5048	started	_	_
18-20	5048-5049	.	_	_

#Text=If you are new to pybatfish, we recommend reading the \[pybatfish doc\](https://pybatfish.readthedocs.io/en/latest/notebooks/interacting.html) first.    ### Advanced  Sometimes not all information retrieved by Batfish questions are meant to be tested, for example, when you retrieve all RIB entries but only assert on a subset of them.
19-1	5050-5052	If	_	_
19-2	5053-5056	you	_	_
19-3	5057-5060	are	_	_
19-4	5061-5064	new	_	_
19-5	5065-5067	to	_	_
19-6	5068-5077	pybatfish	_	_
19-7	5077-5078	,	_	_
19-8	5079-5081	we	_	_
19-9	5082-5091	recommend	_	_
19-10	5092-5099	reading	_	_
19-11	5100-5103	the	_	_
19-12	5104-5105	\[	_	_
19-13	5105-5114	pybatfish	_	_
19-14	5115-5118	doc	_	_
19-15	5118-5119	\]	_	_
19-16	5119-5120	(	_	_
19-17	5120-5125	https	_	_
19-18	5125-5126	:	_	_
19-19	5126-5127	/	_	_
19-20	5127-5128	/	_	_
19-21	5128-5152	pybatfish.readthedocs.io	_	_
19-21	5128-5137	pybatfish	_	_
19-22	5152-5153	/	_	_
19-23	5153-5155	en	_	_
19-24	5155-5156	/	_	_
19-25	5156-5162	latest	_	_
19-26	5162-5163	/	_	_
19-27	5163-5172	notebooks	_	_
19-28	5172-5173	/	_	_
19-29	5173-5189	interacting.html	_	_
19-30	5189-5190	)	_	_
19-31	5191-5196	first	_	_
19-32	5196-5197	.	_	_
19-33	5201-5202	#	_	_
19-34	5202-5203	#	_	_
19-35	5203-5204	#	_	_
19-36	5205-5213	Advanced	_	_
19-37	5215-5224	Sometimes	_	_
19-38	5225-5228	not	_	_
19-39	5229-5232	all	_	_
19-40	5233-5244	information	_	_
19-41	5245-5254	retrieved	_	_
19-42	5255-5257	by	_	_
19-43	5258-5265	Batfish	_	_
19-44	5266-5275	questions	_	_
19-45	5276-5279	are	_	_
19-46	5280-5285	meant	_	_
19-47	5286-5288	to	_	_
19-48	5289-5291	be	_	_
19-49	5292-5298	tested	_	_
19-50	5298-5299	,	_	_
19-51	5300-5303	for	_	_
19-52	5304-5311	example	_	_
19-53	5311-5312	,	_	_
19-54	5313-5317	when	_	_
19-55	5318-5321	you	_	_
19-56	5322-5330	retrieve	_	_
19-57	5331-5334	all	_	_
19-58	5335-5338	RIB	_	_
19-59	5339-5346	entries	_	_
19-60	5347-5350	but	_	_
19-61	5351-5355	only	_	_
19-62	5356-5362	assert	_	_
19-63	5363-5365	on	_	_
19-64	5366-5367	a	_	_
19-65	5368-5374	subset	_	_
19-66	5375-5377	of	_	_
19-67	5378-5382	them	_	_
19-68	5382-5383	.	_	_

#Text=To help NetCov model coverage more accurately, you can pause coverage tracking and add tested information use a NetCov API: ``` # pause coverage tracking to avoid over-estimation bf.cov.pause() routes = bf.q.routes(nodes="edge-0000").answer().frame() bf.cov.resume()  # filter RIB entries to test tested = routes\[routes\["Network"\] == '0.0.0.0/0'\].head(1)  # add tested route to coverage trace bf.cov.add\_tested\_routes(tested) ```  `bf.cov.result()` prints coverage metrics using `logging` module and writes to `stderr` by default.
20-1	5384-5386	To	_	_
20-2	5387-5391	help	_	_
20-3	5392-5398	NetCov	_	_
20-4	5399-5404	model	_	_
20-5	5405-5413	coverage	_	_
20-6	5414-5418	more	_	_
20-7	5419-5429	accurately	_	_
20-8	5429-5430	,	_	_
20-9	5431-5434	you	_	_
20-10	5435-5438	can	_	_
20-11	5439-5444	pause	_	_
20-12	5445-5453	coverage	_	_
20-13	5454-5462	tracking	_	_
20-14	5463-5466	and	_	_
20-15	5467-5470	add	_	_
20-16	5471-5477	tested	_	_
20-17	5478-5489	information	_	_
20-18	5490-5493	use	_	_
20-19	5494-5495	a	_	_
20-20	5496-5502	NetCov	_	_
20-21	5503-5506	API	_	_
20-22	5506-5507	:	_	_
20-23	5508-5509	`	_	_
20-24	5509-5510	`	_	_
20-25	5510-5511	`	_	_
20-26	5512-5513	#	_	_
20-27	5514-5519	pause	_	_
20-28	5520-5528	coverage	_	_
20-29	5529-5537	tracking	_	_
20-30	5538-5540	to	_	_
20-31	5541-5546	avoid	_	_
20-32	5547-5562	over-estimation	_	_
20-33	5563-5575	bf.cov.pause	_	_
20-34	5575-5576	(	_	_
20-35	5576-5577	)	_	_
20-36	5578-5584	routes	_	_
20-37	5585-5586	=	_	_
20-38	5587-5598	bf.q.routes	_	_
20-39	5598-5599	(	_	_
20-40	5599-5604	nodes	_	_
20-41	5604-5605	=	_	_
20-42	5605-5606	"	_	_
20-43	5606-5610	edge	_	_
20-44	5610-5611	-	_	_
20-45	5611-5615	0000	_	_
20-46	5615-5616	"	_	_
20-47	5616-5617	)	_	_
20-48	5617-5618	.	_	_
20-49	5618-5624	answer	_	_
20-50	5624-5625	(	_	_
20-51	5625-5626	)	_	_
20-52	5626-5627	.	_	_
20-53	5627-5632	frame	_	_
20-54	5632-5633	(	_	_
20-55	5633-5634	)	_	_
20-56	5635-5648	bf.cov.resume	_	_
20-57	5648-5649	(	_	_
20-58	5649-5650	)	_	_
20-59	5652-5653	#	_	_
20-60	5654-5660	filter	_	_
20-61	5661-5664	RIB	_	_
20-62	5665-5672	entries	_	_
20-63	5673-5675	to	_	_
20-64	5676-5680	test	_	_
20-65	5681-5687	tested	_	_
20-66	5688-5689	=	_	_
20-67	5690-5696	routes	_	_
20-68	5696-5697	\[	_	_
20-69	5697-5703	routes	_	_
20-70	5703-5704	\[	_	_
20-71	5704-5705	"	_	_
20-72	5705-5712	Network	_	_
20-73	5712-5713	"	_	_
20-74	5713-5714	\]	_	_
20-75	5715-5716	=	_	_
20-76	5716-5717	=	_	_
20-77	5718-5719	'	_	_
20-78	5719-5726	0.0.0.0	_	_
20-79	5726-5727	/	_	_
20-80	5727-5728	0	_	_
20-81	5728-5729	'	_	_
20-82	5729-5730	\]	_	_
20-83	5730-5731	.	_	_
20-84	5731-5735	head	_	_
20-85	5735-5736	(	_	_
20-86	5736-5737	1	_	_
20-87	5737-5738	)	_	_
20-88	5740-5741	#	_	_
20-89	5742-5745	add	_	_
20-90	5746-5752	tested	_	_
20-91	5753-5758	route	_	_
20-92	5759-5761	to	_	_
20-93	5762-5770	coverage	_	_
20-94	5771-5776	trace	_	_
20-95	5777-5801	bf.cov.add\_tested\_routes	_	_
20-96	5801-5802	(	_	_
20-97	5802-5808	tested	_	_
20-98	5808-5809	)	_	_
20-99	5810-5811	`	_	_
20-100	5811-5812	`	_	_
20-101	5812-5813	`	_	_
20-102	5815-5816	`	_	_
20-103	5816-5829	bf.cov.result	_	_
20-104	5829-5830	(	_	_
20-105	5830-5831	)	_	_
20-106	5831-5832	`	_	_
20-107	5833-5839	prints	_	_
20-108	5840-5848	coverage	_	_
20-109	5849-5856	metrics	_	_
20-110	5857-5862	using	_	_
20-111	5863-5864	`	_	_
20-112	5864-5871	logging	_	_
20-113	5871-5872	`	_	_
20-114	5873-5879	module	_	_
20-115	5880-5883	and	_	_
20-116	5884-5890	writes	_	_
20-117	5891-5893	to	_	_
20-118	5894-5895	`	_	_
20-119	5895-5901	stderr	_	_
20-120	5901-5902	`	_	_
20-121	5903-5905	by	_	_
20-122	5906-5913	default	_	_
20-123	5913-5914	.	_	_

#Text=To save the coverage report to file, you can customize logger by: ```python import logging fh = logging.FileHandler('cov.log') logging.getLogger('netcov').addHandler(fh) ```  ## References ``` @inproceedings {netcov-nsdi-2023,   author = {Xieyang Xu and Weixin Deng and Ryan Beckett and Ratul Mahajan and David Walker},   title = {Test Coverage for Network Configurations},   booktitle = {20th USENIX Symposium on Networked Systems Design and Implementation (NSDI 23)},   year = {2023},   isbn = {978-1-939133-33-5},   address = {Boston, MA},   pages = {1717--1732},   url = {https://www.usenix.org/conference/nsdi23/presentation/xu},   publisher = {USENIX Association},   month = apr, }```
21-1	5915-5917	To	_	_
21-2	5918-5922	save	_	_
21-3	5923-5926	the	_	_
21-4	5927-5935	coverage	_	_
21-5	5936-5942	report	_	_
21-6	5943-5945	to	_	_
21-7	5946-5950	file	_	_
21-8	5950-5951	,	_	_
21-9	5952-5955	you	_	_
21-10	5956-5959	can	_	_
21-11	5960-5969	customize	_	_
21-12	5970-5976	logger	_	_
21-13	5977-5979	by	_	_
21-14	5979-5980	:	_	_
21-15	5981-5982	`	_	_
21-16	5982-5983	`	_	_
21-17	5983-5984	`	_	_
21-18	5984-5990	python	_	_
21-19	5991-5997	import	_	_
21-20	5998-6005	logging	_	_
21-21	6006-6008	fh	_	_
21-22	6009-6010	=	_	_
21-23	6011-6030	logging.FileHandler	_	_
21-24	6030-6031	(	_	_
21-25	6031-6032	'	_	_
21-26	6032-6039	cov.log	_	_
21-27	6039-6040	'	_	_
21-28	6040-6041	)	_	_
21-29	6042-6059	logging.getLogger	_	_
21-30	6059-6060	(	_	_
21-31	6060-6061	'	_	_
21-32	6061-6067	netcov	_	_
21-33	6067-6068	'	_	_
21-34	6068-6069	)	_	_
21-35	6069-6070	.	_	_
21-36	6070-6080	addHandler	_	_
21-37	6080-6081	(	_	_
21-38	6081-6083	fh	_	_
21-39	6083-6084	)	_	_
21-40	6085-6086	`	_	_
21-41	6086-6087	`	_	_
21-42	6087-6088	`	_	_
21-43	6090-6091	#	_	_
21-44	6091-6092	#	_	_
21-45	6093-6103	References	_	_
21-46	6104-6105	`	_	_
21-47	6105-6106	`	_	_
21-48	6106-6107	`	_	_
21-49	6108-6109	@	_	_
21-50	6109-6122	inproceedings	_	_
21-51	6123-6124	{	_	_
21-52	6124-6135	netcov-nsdi	_	_
21-53	6135-6136	-	_	_
21-54	6136-6140	2023	_	_
21-55	6140-6141	,	_	_
21-56	6144-6150	author	_	_
21-57	6151-6152	=	_	_
21-58	6153-6154	{	_	_
21-59	6154-6161	Xieyang	_	_
21-60	6162-6164	Xu	_	_
21-61	6165-6168	and	_	_
21-62	6169-6175	Weixin	_	_
21-63	6176-6180	Deng	_	_
21-64	6181-6184	and	_	_
21-65	6185-6189	Ryan	_	_
21-66	6190-6197	Beckett	_	_
21-67	6198-6201	and	_	_
21-68	6202-6207	Ratul	_	_
21-69	6208-6215	Mahajan	_	_
21-70	6216-6219	and	_	_
21-71	6220-6225	David	_	_
21-72	6226-6232	Walker	_	_
21-73	6232-6233	}	_	_
21-74	6233-6234	,	_	_
21-75	6237-6242	title	_	_
21-76	6243-6244	=	_	_
21-77	6245-6246	{	_	_
21-78	6246-6250	Test	_	_
21-79	6251-6259	Coverage	_	_
21-80	6260-6263	for	_	_
21-81	6264-6271	Network	_	_
21-82	6272-6286	Configurations	_	_
21-83	6286-6287	}	_	_
21-84	6287-6288	,	_	_
21-85	6291-6300	booktitle	_	_
21-86	6301-6302	=	_	_
21-87	6303-6304	{	_	_
21-88	6304-6308	20th	_	_
21-89	6309-6315	USENIX	_	_
21-90	6316-6325	Symposium	_	_
21-91	6326-6328	on	_	_
21-92	6329-6338	Networked	_	_
21-93	6339-6346	Systems	_	_
21-94	6347-6353	Design	_	_
21-95	6354-6357	and	_	_
21-96	6358-6372	Implementation	_	_
21-97	6373-6374	(	_	_
21-98	6374-6378	NSDI	_	_
21-99	6379-6381	23	_	_
21-100	6381-6382	)	_	_
21-101	6382-6383	}	_	_
21-102	6383-6384	,	_	_
21-103	6387-6391	year	_	_
21-104	6392-6393	=	_	_
21-105	6394-6395	{	_	_
21-106	6395-6399	2023	_	_
21-107	6399-6400	}	_	_
21-108	6400-6401	,	_	_
21-109	6404-6408	isbn	_	_
21-110	6409-6410	=	_	_
21-111	6411-6412	{	_	_
21-112	6412-6415	978	_	_
21-113	6415-6416	-	_	_
21-114	6416-6417	1	_	_
21-115	6417-6418	-	_	_
21-116	6418-6424	939133	_	_
21-117	6424-6425	-	_	_
21-118	6425-6427	33	_	_
21-119	6427-6428	-	_	_
21-120	6428-6429	5	_	_
21-121	6429-6430	}	_	_
21-122	6430-6431	,	_	_
21-123	6434-6441	address	_	_
21-124	6442-6443	=	_	_
21-125	6444-6445	{	_	_
21-126	6445-6451	Boston	_	_
21-127	6451-6452	,	_	_
21-128	6453-6455	MA	_	_
21-129	6455-6456	}	_	_
21-130	6456-6457	,	_	_
21-131	6460-6465	pages	_	_
21-132	6466-6467	=	_	_
21-133	6468-6469	{	_	_
21-134	6469-6473	1717	_	_
21-135	6473-6474	-	_	_
21-136	6474-6475	-	_	_
21-137	6475-6479	1732	_	_
21-138	6479-6480	}	_	_
21-139	6480-6481	,	_	_
21-140	6484-6487	url	_	_
21-141	6488-6489	=	_	_
21-142	6490-6491	{	_	_
21-143	6491-6496	https	_	_
21-144	6496-6497	:	_	_
21-145	6497-6498	/	_	_
21-146	6498-6499	/	_	_
21-147	6499-6513	www.usenix.org	_	_
21-148	6513-6514	/	_	_
21-149	6514-6524	conference	_	_
21-150	6524-6525	/	_	_
21-151	6525-6531	nsdi23	_	_
21-152	6531-6532	/	_	_
21-153	6532-6544	presentation	_	_
21-154	6544-6545	/	_	_
21-155	6545-6547	xu	_	_
21-156	6547-6548	}	_	_
21-157	6548-6549	,	_	_
21-158	6552-6561	publisher	_	_
21-159	6562-6563	=	_	_
21-160	6564-6565	{	_	_
21-161	6565-6571	USENIX	_	_
21-162	6572-6583	Association	_	_
21-163	6583-6584	}	_	_
21-164	6584-6585	,	_	_
21-165	6588-6593	month	_	_
21-166	6594-6595	=	_	_
21-167	6596-6599	apr	_	_
21-168	6599-6600	,	_	_
21-169	6601-6602	}	_	_
21-170	6602-6603	`	_	_
21-171	6603-6604	`	_	_
21-172	6604-6605	`	_	_