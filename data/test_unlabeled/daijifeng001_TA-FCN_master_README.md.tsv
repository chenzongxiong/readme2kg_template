#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=## Fully Convolutional Instance-aware Semantic Segmentation  The major contributors of this repository include \[Haozhi Qi\](https://github.com/Oh233), \[Yi Li\](https://github.com/liyi14), \[Guodong Zhang\](https://github.com/gd-zhang), \[Haochen Zhang\](https://github.com/Braininvat), \[Jifeng Dai\](https://github.com/daijifeng001), and \[Yichen Wei\](https://github.com/YichenWei).  ### Introduction  \*\*FCIS\*\* is a fully convolutional end-to-end solution for instance segmentation, which won the first place in COCO segmentation challenge 2016.
1-1	0-1	#	_	_
1-2	1-2	#	_	_
1-3	3-8	Fully	_	_
1-4	9-22	Convolutional	_	_
1-5	23-37	Instance-aware	_	_
1-6	38-46	Semantic	_	_
1-7	47-59	Segmentation	_	_
1-8	61-64	The	_	_
1-9	65-70	major	_	_
1-10	71-83	contributors	_	_
1-11	84-86	of	_	_
1-12	87-91	this	_	_
1-13	92-102	repository	_	_
1-14	103-110	include	_	_
1-15	111-112	\[	_	_
1-16	112-118	Haozhi	_	_
1-17	119-121	Qi	_	_
1-18	121-122	\]	_	_
1-19	122-123	(	_	_
1-20	123-128	https	_	_
1-21	128-129	:	_	_
1-22	129-130	/	_	_
1-23	130-131	/	_	_
1-24	131-141	github.com	_	_
1-25	141-142	/	_	_
1-26	142-147	Oh233	_	_
1-27	147-148	)	_	_
1-28	148-149	,	_	_
1-29	150-151	\[	_	_
1-30	151-153	Yi	_	_
1-31	154-156	Li	_	_
1-32	156-157	\]	_	_
1-33	157-158	(	_	_
1-34	158-163	https	_	_
1-35	163-164	:	_	_
1-36	164-165	/	_	_
1-37	165-166	/	_	_
1-38	166-176	github.com	_	_
1-39	176-177	/	_	_
1-40	177-183	liyi14	_	_
1-41	183-184	)	_	_
1-42	184-185	,	_	_
1-43	186-187	\[	_	_
1-44	187-194	Guodong	_	_
1-45	195-200	Zhang	_	_
1-46	200-201	\]	_	_
1-47	201-202	(	_	_
1-48	202-207	https	_	_
1-49	207-208	:	_	_
1-50	208-209	/	_	_
1-51	209-210	/	_	_
1-52	210-220	github.com	_	_
1-53	220-221	/	_	_
1-54	221-229	gd-zhang	_	_
1-55	229-230	)	_	_
1-56	230-231	,	_	_
1-57	232-233	\[	_	_
1-58	233-240	Haochen	_	_
1-59	241-246	Zhang	_	_
1-60	246-247	\]	_	_
1-61	247-248	(	_	_
1-62	248-253	https	_	_
1-63	253-254	:	_	_
1-64	254-255	/	_	_
1-65	255-256	/	_	_
1-66	256-266	github.com	_	_
1-67	266-267	/	_	_
1-68	267-277	Braininvat	_	_
1-69	277-278	)	_	_
1-70	278-279	,	_	_
1-71	280-281	\[	_	_
1-72	281-287	Jifeng	_	_
1-73	288-291	Dai	_	_
1-74	291-292	\]	_	_
1-75	292-293	(	_	_
1-76	293-298	https	_	_
1-77	298-299	:	_	_
1-78	299-300	/	_	_
1-79	300-301	/	_	_
1-80	301-311	github.com	_	_
1-81	311-312	/	_	_
1-82	312-324	daijifeng001	_	_
1-83	324-325	)	_	_
1-84	325-326	,	_	_
1-85	327-330	and	_	_
1-86	331-332	\[	_	_
1-87	332-338	Yichen	_	_
1-88	339-342	Wei	_	_
1-89	342-343	\]	_	_
1-90	343-344	(	_	_
1-91	344-349	https	_	_
1-92	349-350	:	_	_
1-93	350-351	/	_	_
1-94	351-352	/	_	_
1-95	352-362	github.com	_	_
1-96	362-363	/	_	_
1-97	363-372	YichenWei	_	_
1-98	372-373	)	_	_
1-99	373-374	.	_	_
1-100	376-377	#	_	_
1-101	377-378	#	_	_
1-102	378-379	#	_	_
1-103	380-392	Introduction	_	_
1-104	394-395	\*	_	_
1-105	395-396	\*	_	_
1-106	396-400	FCIS	_	_
1-107	400-401	\*	_	_
1-108	401-402	\*	_	_
1-109	403-405	is	_	_
1-110	406-407	a	_	_
1-111	408-413	fully	_	_
1-112	414-427	convolutional	_	_
1-113	428-438	end-to-end	_	_
1-114	439-447	solution	_	_
1-115	448-451	for	_	_
1-116	452-460	instance	_	_
1-117	461-473	segmentation	_	_
1-118	473-474	,	_	_
1-119	475-480	which	_	_
1-120	481-484	won	_	_
1-121	485-488	the	_	_
1-122	489-494	first	_	_
1-123	495-500	place	_	_
1-124	501-503	in	_	_
1-125	504-508	COCO	_	_
1-126	509-521	segmentation	_	_
1-127	522-531	challenge	_	_
1-128	532-536	2016	_	_
1-129	536-537	.	_	_

#Text=FCIS is initially described in a \[CVPR 2017 spotlight paper\](https://arxiv.org/abs/1611.07709).
2-1	540-544	FCIS	_	_
2-2	545-547	is	_	_
2-3	548-557	initially	_	_
2-4	558-567	described	_	_
2-5	568-570	in	_	_
2-6	571-572	a	_	_
2-7	573-574	\[	_	_
2-8	574-578	CVPR	_	_
2-9	579-583	2017	_	_
2-10	584-593	spotlight	_	_
2-11	594-599	paper	_	_
2-12	599-600	\]	_	_
2-13	600-601	(	_	_
2-14	601-606	https	_	_
2-15	606-607	:	_	_
2-16	607-608	/	_	_
2-17	608-609	/	_	_
2-18	609-618	arxiv.org	_	_
2-19	618-619	/	_	_
2-20	619-622	abs	_	_
2-21	622-623	/	_	_
2-22	623-633	1611.07709	_	_
2-23	633-634	)	_	_
2-24	634-635	.	_	_

#Text=It is worth noticing that: \* FCIS provides a simple, fast and accurate framework for instance segmentation. \* Different from \[MNC\](https://github.com/daijifeng001/MNC), FCIS performs instance mask estimation and categorization jointly and simultanously, and estimates class-specific masks. \* We did not exploit the various techniques & tricks in the Mask RCNN system, like increasing RPN anchor numbers (from 12 to 15), training on anchors out of image boundary, enlarging the image (shorter side from 600 to 800 pixels), utilizing FPN features and aligned ROI pooling.
3-1	636-638	It	_	_
3-2	639-641	is	_	_
3-3	642-647	worth	_	_
3-4	648-656	noticing	_	_
3-5	657-661	that	_	_
3-6	661-662	:	_	_
3-7	663-664	\*	_	_
3-8	665-669	FCIS	_	_
3-9	670-678	provides	_	_
3-10	679-680	a	_	_
3-11	681-687	simple	_	_
3-12	687-688	,	_	_
3-13	689-693	fast	_	_
3-14	694-697	and	_	_
3-15	698-706	accurate	_	_
3-16	707-716	framework	_	_
3-17	717-720	for	_	_
3-18	721-729	instance	_	_
3-19	730-742	segmentation	_	_
3-20	742-743	.	_	_
3-21	744-745	\*	_	_
3-22	746-755	Different	_	_
3-23	756-760	from	_	_
3-24	761-762	\[	_	_
3-25	762-765	MNC	_	_
3-26	765-766	\]	_	_
3-27	766-767	(	_	_
3-28	767-772	https	_	_
3-29	772-773	:	_	_
3-30	773-774	/	_	_
3-31	774-775	/	_	_
3-32	775-785	github.com	_	_
3-33	785-786	/	_	_
3-34	786-798	daijifeng001	_	_
3-35	798-799	/	_	_
3-36	799-802	MNC	_	_
3-37	802-803	)	_	_
3-38	803-804	,	_	_
3-39	805-809	FCIS	_	_
3-40	810-818	performs	_	_
3-41	819-827	instance	_	_
3-42	828-832	mask	_	_
3-43	833-843	estimation	_	_
3-44	844-847	and	_	_
3-45	848-862	categorization	_	_
3-46	863-870	jointly	_	_
3-47	871-874	and	_	_
3-48	875-888	simultanously	_	_
3-49	888-889	,	_	_
3-50	890-893	and	_	_
3-51	894-903	estimates	_	_
3-52	904-918	class-specific	_	_
3-53	919-924	masks	_	_
3-54	924-925	.	_	_
3-55	926-927	\*	_	_
3-56	928-930	We	_	_
3-57	931-934	did	_	_
3-58	935-938	not	_	_
3-59	939-946	exploit	_	_
3-60	947-950	the	_	_
3-61	951-958	various	_	_
3-62	959-969	techniques	_	_
3-63	970-971	&	_	_
3-64	972-978	tricks	_	_
3-65	979-981	in	_	_
3-66	982-985	the	_	_
3-67	986-990	Mask	_	_
3-68	991-995	RCNN	_	_
3-69	996-1002	system	_	_
3-70	1002-1003	,	_	_
3-71	1004-1008	like	_	_
3-72	1009-1019	increasing	_	_
3-73	1020-1023	RPN	_	_
3-74	1024-1030	anchor	_	_
3-75	1031-1038	numbers	_	_
3-76	1039-1040	(	_	_
3-77	1040-1044	from	_	_
3-78	1045-1047	12	_	_
3-79	1048-1050	to	_	_
3-80	1051-1053	15	_	_
3-81	1053-1054	)	_	_
3-82	1054-1055	,	_	_
3-83	1056-1064	training	_	_
3-84	1065-1067	on	_	_
3-85	1068-1075	anchors	_	_
3-86	1076-1079	out	_	_
3-87	1080-1082	of	_	_
3-88	1083-1088	image	_	_
3-89	1089-1097	boundary	_	_
3-90	1097-1098	,	_	_
3-91	1099-1108	enlarging	_	_
3-92	1109-1112	the	_	_
3-93	1113-1118	image	_	_
3-94	1119-1120	(	_	_
3-95	1120-1127	shorter	_	_
3-96	1128-1132	side	_	_
3-97	1133-1137	from	_	_
3-98	1138-1141	600	_	_
3-99	1142-1144	to	_	_
3-100	1145-1148	800	_	_
3-101	1149-1155	pixels	_	_
3-102	1155-1156	)	_	_
3-103	1156-1157	,	_	_
3-104	1158-1167	utilizing	_	_
3-105	1168-1171	FPN	_	_
3-106	1172-1180	features	_	_
3-107	1181-1184	and	_	_
3-108	1185-1192	aligned	_	_
3-109	1193-1196	ROI	_	_
3-110	1197-1204	pooling	_	_
3-111	1204-1205	.	_	_

#Text=These techniques & tricks should be orthogonal to our simple baseline.   ### Resources  1.
4-1	1206-1211	These	_	_
4-2	1212-1222	techniques	_	_
4-3	1223-1224	&	_	_
4-4	1225-1231	tricks	_	_
4-5	1232-1238	should	_	_
4-6	1239-1241	be	_	_
4-7	1242-1252	orthogonal	_	_
4-8	1253-1255	to	_	_
4-9	1256-1259	our	_	_
4-10	1260-1266	simple	_	_
4-11	1267-1275	baseline	_	_
4-12	1275-1276	.	_	_
4-13	1279-1280	#	_	_
4-14	1280-1281	#	_	_
4-15	1281-1282	#	_	_
4-16	1283-1292	Resources	_	_
4-17	1294-1295	1	_	_
4-18	1295-1296	.	_	_

#Text=Visual results on the first 5k images from COCO test set of our \*\*\*COCO 2016 challenge entry\*\*\*: \[OneDrive\](https://onedrive.live.com/?
5-1	1297-1303	Visual	_	_
5-2	1304-1311	results	_	_
5-3	1312-1314	on	_	_
5-4	1315-1318	the	_	_
5-5	1319-1324	first	_	_
5-6	1325-1327	5k	_	_
5-7	1328-1334	images	_	_
5-8	1335-1339	from	_	_
5-9	1340-1344	COCO	_	_
5-10	1345-1349	test	_	_
5-11	1350-1353	set	_	_
5-12	1354-1356	of	_	_
5-13	1357-1360	our	_	_
5-14	1361-1362	\*	_	_
5-15	1362-1363	\*	_	_
5-16	1363-1364	\*	_	_
5-17	1364-1368	COCO	_	_
5-18	1369-1373	2016	_	_
5-19	1374-1383	challenge	_	_
5-20	1384-1389	entry	_	_
5-21	1389-1390	\*	_	_
5-22	1390-1391	\*	_	_
5-23	1391-1392	\*	_	_
5-24	1392-1393	:	_	_
5-25	1394-1395	\[	_	_
5-26	1395-1403	OneDrive	_	_
5-27	1403-1404	\]	_	_
5-28	1404-1405	(	_	_
5-29	1405-1410	https	_	_
5-30	1410-1411	:	_	_
5-31	1411-1412	/	_	_
5-32	1412-1413	/	_	_
5-33	1413-1430	onedrive.live.com	_	_
5-34	1430-1431	/	_	_
5-35	1431-1432	?	_	_

#Text=authkey=%21ABB\_CV2zvCEoNK0&id=F371D9563727B96F%2192190&cid=F371D9563727B96F). 2.
6-1	1432-1439	authkey	_	_
6-2	1439-1440	=	_	_
6-3	1440-1441	%	_	_
6-4	1441-1459	21ABB\_CV2zvCEoNK0&	_	_
6-5	1459-1461	id	_	_
6-6	1461-1462	=	_	_
6-7	1462-1478	F371D9563727B96F	_	_
6-8	1478-1479	%	_	_
6-9	1479-1487	2192190&	_	_
6-10	1487-1490	cid	_	_
6-11	1490-1491	=	_	_
6-12	1491-1507	F371D9563727B96F	_	_
6-13	1507-1508	)	_	_
6-14	1508-1509	.	_	_
6-15	1510-1511	2	_	_
6-16	1511-1512	.	_	_

#Text=Slides in \[ImageNet ILSVRC and COCO workshop 2016\](http://image-net.org/challenges/ilsvrc+coco2016): \[OneDrive\](https://onedrive.live.com/?
7-1	1513-1519	Slides	_	_
7-2	1520-1522	in	_	_
7-3	1523-1524	\[	_	_
7-4	1524-1532	ImageNet	_	_
7-5	1533-1539	ILSVRC	_	_
7-6	1540-1543	and	_	_
7-7	1544-1548	COCO	_	_
7-8	1549-1557	workshop	_	_
7-9	1558-1562	2016	_	_
7-10	1562-1563	\]	_	_
7-11	1563-1564	(	_	_
7-12	1564-1568	http	_	_
7-13	1568-1569	:	_	_
7-14	1569-1570	/	_	_
7-15	1570-1571	/	_	_
7-16	1571-1584	image-net.org	_	_
7-17	1584-1585	/	_	_
7-18	1585-1595	challenges	_	_
7-19	1595-1596	/	_	_
7-20	1596-1602	ilsvrc	_	_
7-21	1602-1603	+	_	_
7-22	1603-1611	coco2016	_	_
7-23	1611-1612	)	_	_
7-24	1612-1613	:	_	_
7-25	1614-1615	\[	_	_
7-26	1615-1623	OneDrive	_	_
7-27	1623-1624	\]	_	_
7-28	1624-1625	(	_	_
7-29	1625-1630	https	_	_
7-30	1630-1631	:	_	_
7-31	1631-1632	/	_	_
7-32	1632-1633	/	_	_
7-33	1633-1650	onedrive.live.com	_	_
7-34	1650-1651	/	_	_
7-35	1651-1652	?	_	_

#Text=cid=f371d9563727b96f&id=F371D9563727B96F%2197213&authkey=%21AEYOyOirjIutSVk).
8-1	1652-1655	cid	_	_
8-2	1655-1656	=	_	_
8-3	1656-1672	f371d9563727b96f	_	_
8-4	1672-1673	&	_	_
8-5	1673-1675	id	_	_
8-6	1675-1676	=	_	_
8-7	1676-1692	F371D9563727B96F	_	_
8-8	1692-1693	%	_	_
8-9	1693-1701	2197213&	_	_
8-10	1701-1708	authkey	_	_
8-11	1708-1709	=	_	_
8-12	1709-1710	%	_	_
8-13	1710-1727	21AEYOyOirjIutSVk	_	_
8-14	1727-1728	)	_	_
8-15	1728-1729	.	_	_

#Text=<img src='data/readme\_img.png' width='800'>   ### Disclaimer  This is an official implementation for \[Fully Convolutional Instance-aware Semantic Segmentation\](https://arxiv.org/abs/1611.07709) (FCIS) based on MXNet.
9-1	1731-1732	<	_	_
9-2	1732-1735	img	_	_
9-3	1736-1739	src	_	_
9-4	1739-1740	=	_	_
9-5	1740-1741	'	_	_
9-6	1741-1745	data	_	_
9-7	1745-1746	/	_	_
9-8	1746-1760	readme\_img.png	_	_
9-9	1760-1761	'	_	_
9-10	1762-1767	width	_	_
9-11	1767-1768	=	_	_
9-12	1768-1769	'	_	_
9-13	1769-1772	800	_	_
9-14	1772-1773	'	_	_
9-15	1773-1774	>	_	_
9-16	1777-1778	#	_	_
9-17	1778-1779	#	_	_
9-18	1779-1780	#	_	_
9-19	1781-1791	Disclaimer	_	_
9-20	1793-1797	This	_	_
9-21	1798-1800	is	_	_
9-22	1801-1803	an	_	_
9-23	1804-1812	official	_	_
9-24	1813-1827	implementation	_	_
9-25	1828-1831	for	_	_
9-26	1832-1833	\[	_	_
9-27	1833-1838	Fully	_	_
9-28	1839-1852	Convolutional	_	_
9-29	1853-1867	Instance-aware	_	_
9-30	1868-1876	Semantic	_	_
9-31	1877-1889	Segmentation	_	_
9-32	1889-1890	\]	_	_
9-33	1890-1891	(	_	_
9-34	1891-1896	https	_	_
9-35	1896-1897	:	_	_
9-36	1897-1898	/	_	_
9-37	1898-1899	/	_	_
9-38	1899-1908	arxiv.org	_	_
9-39	1908-1909	/	_	_
9-40	1909-1912	abs	_	_
9-41	1912-1913	/	_	_
9-42	1913-1923	1611.07709	_	_
9-43	1923-1924	)	_	_
9-44	1925-1926	(	_	_
9-45	1926-1930	FCIS	_	_
9-46	1930-1931	)	_	_
9-47	1932-1937	based	_	_
9-48	1938-1940	on	_	_
9-49	1941-1946	MXNet	_	_
9-50	1946-1947	.	_	_

#Text=It is worth noticing that:    \* The original implementation is based on our internal Caffe version on Windows.
10-1	1948-1950	It	_	_
10-2	1951-1953	is	_	_
10-3	1954-1959	worth	_	_
10-4	1960-1968	noticing	_	_
10-5	1969-1973	that	_	_
10-6	1973-1974	:	_	_
10-7	1978-1979	\*	_	_
10-8	1980-1983	The	_	_
10-9	1984-1992	original	_	_
10-10	1993-2007	implementation	_	_
10-11	2008-2010	is	_	_
10-12	2011-2016	based	_	_
10-13	2017-2019	on	_	_
10-14	2020-2023	our	_	_
10-15	2024-2032	internal	_	_
10-16	2033-2038	Caffe	_	_
10-17	2039-2046	version	_	_
10-18	2047-2049	on	_	_
10-19	2050-2057	Windows	_	_
10-20	2057-2058	.	_	_

#Text=There are slight differences in the final accuracy and running time due to the plenty details in platform switch
11-1	2059-2064	There	_	_
11-2	2065-2068	are	_	_
11-3	2069-2075	slight	_	_
11-4	2076-2087	differences	_	_
11-5	2088-2090	in	_	_
11-6	2091-2094	the	_	_
11-7	2095-2100	final	_	_
11-8	2101-2109	accuracy	_	_
11-9	2110-2113	and	_	_
11-10	2114-2121	running	_	_
11-11	2122-2126	time	_	_
11-12	2127-2130	due	_	_
11-13	2131-2133	to	_	_
11-14	2134-2137	the	_	_
11-15	2138-2144	plenty	_	_
11-16	2145-2152	details	_	_
11-17	2153-2155	in	_	_
11-18	2156-2164	platform	_	_
11-19	2165-2171	switch	_	_

#Text=.
12-1	2171-2172	.	_	_

#Text=\* The code is tested on official \[MXNet@(commit 62ecb60)\](https://github.com/dmlc/mxnet/tree/62ecb60) with the extra operators for FCIS
13-1	2175-2176	\*	_	_
13-2	2177-2180	The	_	_
13-3	2181-2185	code	_	_
13-4	2186-2188	is	_	_
13-5	2189-2195	tested	_	_
13-6	2196-2198	on	_	_
13-7	2199-2207	official	_	_
13-8	2208-2209	\[	_	_
13-9	2209-2214	MXNet	_	_
13-10	2214-2215	@	_	_
13-11	2215-2216	(	_	_
13-12	2216-2222	commit	_	_
13-13	2223-2230	62ecb60	_	_
13-14	2230-2231	)	_	_
13-15	2231-2232	\]	_	_
13-16	2232-2233	(	_	_
13-17	2233-2238	https	_	_
13-18	2238-2239	:	_	_
13-19	2239-2240	/	_	_
13-20	2240-2241	/	_	_
13-21	2241-2251	github.com	_	_
13-22	2251-2252	/	_	_
13-23	2252-2256	dmlc	_	_
13-24	2256-2257	/	_	_
13-25	2257-2262	mxnet	_	_
13-26	2262-2263	/	_	_
13-27	2263-2267	tree	_	_
13-28	2267-2268	/	_	_
13-29	2268-2275	62ecb60	_	_
13-30	2275-2276	)	_	_
13-31	2277-2281	with	_	_
13-32	2282-2285	the	_	_
13-33	2286-2291	extra	_	_
13-34	2292-2301	operators	_	_
13-35	2302-2305	for	_	_
13-36	2306-2310	FCIS	_	_

#Text=.
14-1	2310-2311	.	_	_

#Text=\* We trained our model based on the ImageNet pre-trained \[ResNet-v1-101\](https://github.com/KaimingHe/deep-residual-networks) using a \[model converter\](https://github.com/dmlc/mxnet/tree/430ea7bfbbda67d993996d81c7fd44d3a20ef846/tools/caffe\_converter).
15-1	2314-2315	\*	_	_
15-2	2316-2318	We	_	_
15-3	2319-2326	trained	_	_
15-4	2327-2330	our	_	_
15-5	2331-2336	model	_	_
15-6	2337-2342	based	_	_
15-7	2343-2345	on	_	_
15-8	2346-2349	the	_	_
15-9	2350-2358	ImageNet	_	_
15-10	2359-2370	pre-trained	_	_
15-11	2371-2372	\[	_	_
15-12	2372-2381	ResNet-v1	_	_
15-13	2381-2382	-	_	_
15-14	2382-2385	101	_	_
15-15	2385-2386	\]	_	_
15-16	2386-2387	(	_	_
15-17	2387-2392	https	_	_
15-18	2392-2393	:	_	_
15-19	2393-2394	/	_	_
15-20	2394-2395	/	_	_
15-21	2395-2405	github.com	_	_
15-22	2405-2406	/	_	_
15-23	2406-2415	KaimingHe	_	_
15-24	2415-2416	/	_	_
15-25	2416-2438	deep-residual-networks	_	_
15-26	2438-2439	)	_	_
15-27	2440-2445	using	_	_
15-28	2446-2447	a	_	_
15-29	2448-2449	\[	_	_
15-30	2449-2454	model	_	_
15-31	2455-2464	converter	_	_
15-32	2464-2465	\]	_	_
15-33	2465-2466	(	_	_
15-34	2466-2471	https	_	_
15-35	2471-2472	:	_	_
15-36	2472-2473	/	_	_
15-37	2473-2474	/	_	_
15-38	2474-2484	github.com	_	_
15-39	2484-2485	/	_	_
15-40	2485-2489	dmlc	_	_
15-41	2489-2490	/	_	_
15-42	2490-2495	mxnet	_	_
15-43	2495-2496	/	_	_
15-44	2496-2500	tree	_	_
15-45	2500-2501	/	_	_
15-46	2501-2541	430ea7bfbbda67d993996d81c7fd44d3a20ef846	_	_
15-47	2541-2542	/	_	_
15-48	2542-2547	tools	_	_
15-49	2547-2548	/	_	_
15-50	2548-2563	caffe\_converter	_	_
15-51	2563-2564	)	_	_
15-52	2564-2565	.	_	_

#Text=The converted model produces slightly lower accuracy (Top-1 Error on ImageNet val: 24.0% v.s. 23.6%)
16-1	2566-2569	The	_	_
16-2	2570-2579	converted	_	_
16-3	2580-2585	model	_	_
16-4	2586-2594	produces	_	_
16-5	2595-2603	slightly	_	_
16-6	2604-2609	lower	_	_
16-7	2610-2618	accuracy	_	_
16-8	2619-2620	(	_	_
16-9	2620-2623	Top	_	_
16-10	2623-2624	-	_	_
16-11	2624-2625	1	_	_
16-12	2626-2631	Error	_	_
16-13	2632-2634	on	_	_
16-14	2635-2643	ImageNet	_	_
16-15	2644-2647	val	_	_
16-16	2647-2648	:	_	_
16-17	2649-2654	24.0%	_	_
16-18	2655-2658	v.s	_	_
16-19	2658-2659	.	_	_
16-20	2660-2665	23.6%	_	_
16-21	2665-2666	)	_	_

#Text=.
17-1	2666-2667	.	_	_

#Text=\* This repository used code from \[MXNet rcnn example\](https://github.com/dmlc/mxnet/tree/master/example/rcnn) and \[mx-rfcn\](https://github.com/giorking/mx-rfcn).   ### License  © Microsoft, 2017.
18-1	2670-2671	\*	_	_
18-2	2672-2676	This	_	_
18-3	2677-2687	repository	_	_
18-4	2688-2692	used	_	_
18-5	2693-2697	code	_	_
18-6	2698-2702	from	_	_
18-7	2703-2704	\[	_	_
18-8	2704-2709	MXNet	_	_
18-9	2710-2714	rcnn	_	_
18-10	2715-2722	example	_	_
18-11	2722-2723	\]	_	_
18-12	2723-2724	(	_	_
18-13	2724-2729	https	_	_
18-14	2729-2730	:	_	_
18-15	2730-2731	/	_	_
18-16	2731-2732	/	_	_
18-17	2732-2742	github.com	_	_
18-18	2742-2743	/	_	_
18-19	2743-2747	dmlc	_	_
18-20	2747-2748	/	_	_
18-21	2748-2753	mxnet	_	_
18-22	2753-2754	/	_	_
18-23	2754-2758	tree	_	_
18-24	2758-2759	/	_	_
18-25	2759-2765	master	_	_
18-26	2765-2766	/	_	_
18-27	2766-2773	example	_	_
18-28	2773-2774	/	_	_
18-29	2774-2778	rcnn	_	_
18-30	2778-2779	)	_	_
18-31	2780-2783	and	_	_
18-32	2784-2785	\[	_	_
18-33	2785-2792	mx-rfcn	_	_
18-34	2792-2793	\]	_	_
18-35	2793-2794	(	_	_
18-36	2794-2799	https	_	_
18-37	2799-2800	:	_	_
18-38	2800-2801	/	_	_
18-39	2801-2802	/	_	_
18-40	2802-2812	github.com	_	_
18-41	2812-2813	/	_	_
18-42	2813-2821	giorking	_	_
18-43	2821-2822	/	_	_
18-44	2822-2829	mx-rfcn	_	_
18-45	2829-2830	)	_	_
18-46	2830-2831	.	_	_
18-47	2834-2835	#	_	_
18-48	2835-2836	#	_	_
18-49	2836-2837	#	_	_
18-50	2838-2845	License	_	_
18-51	2847-2848	©	_	_
18-52	2849-2858	Microsoft	_	_
18-53	2858-2859	,	_	_
18-54	2860-2864	2017	_	_
18-55	2864-2865	.	_	_

#Text=Licensed under an MIT license.  ### Citing FCIS  If you find FCIS useful in your research, please consider citing: ``` @inproceedings{li2016fully,   Author = {Yi Li, Haozhi Qi, Jifeng Dai, Xiangyang Ji and Yichen Wei}   Title = {Fully Convolutional Instance-aware Semantic Segmentation},   Conference = {CVPR},   year = {2017} } ```  ### Main Results  \|                                 \| training data  \| testing data \| mAP^r@0.5 \| mAP^r@0.7 \| time   \| \|:---------------------------------:\|:----------------:\|:--------------:\|:-----------:\|:-----------:\|:--------:\| \| FCIS, ResNet-v1-101             \| VOC 2012 train \| VOC 2012 val \| 66.0      \| 51.9      \|   0.23s    \|  \|                                 \| <sub>training data</sub> \| <sub>testing data</sub>  \| <sub>mAP^r</sub>  \| <sub>mAP^r@0.5</sub> \| <sub>mAP^r@0.75</sub>\| <sub>mAP^r@S</sub> \| <sub>mAP^r@M</sub> \| <sub>mAP^r@L</sub> \| \|:---------------------------------:\|:---------------:\|:---------------:\|:------:\|:---------:\|:---------:\|:-------:\|:-------:\|:-------:\| \| <sub>FCIS, ResNet-v1-101, OHEM </sub> \| <sub>coco trainval35k</sub> \| <sub>coco minival</sub> \| 29.2 \| 50.8 \| 29.7 \| 7.9 \| 31.4 \| 51.1 \| \| <sub>FCIS, ResNet-v1-101, OHEM </sub> \| <sub>coco trainval35k</sub> \| <sub>coco test-dev</sub>\| 29.6 \| 51.4 \| 30.2 \| 8.0 \| 31.0 \| 49.7 \|  \*Running time is counted on a single Maxwell Titan X GPU (mini-batch size is 1 in inference).\*  ### Requirements: Software  1.
19-1	2866-2874	Licensed	_	_
19-2	2875-2880	under	_	_
19-3	2881-2883	an	_	_
19-4	2884-2887	MIT	_	_
19-5	2888-2895	license	_	_
19-6	2895-2896	.	_	_
19-7	2898-2899	#	_	_
19-8	2899-2900	#	_	_
19-9	2900-2901	#	_	_
19-10	2902-2908	Citing	_	_
19-11	2909-2913	FCIS	_	_
19-12	2915-2917	If	_	_
19-13	2918-2921	you	_	_
19-14	2922-2926	find	_	_
19-15	2927-2931	FCIS	_	_
19-16	2932-2938	useful	_	_
19-17	2939-2941	in	_	_
19-18	2942-2946	your	_	_
19-19	2947-2955	research	_	_
19-20	2955-2956	,	_	_
19-21	2957-2963	please	_	_
19-22	2964-2972	consider	_	_
19-23	2973-2979	citing	_	_
19-24	2979-2980	:	_	_
19-25	2981-2982	`	_	_
19-26	2982-2983	`	_	_
19-27	2983-2984	`	_	_
19-28	2985-2986	@	_	_
19-29	2986-2999	inproceedings	_	_
19-30	2999-3000	{	_	_
19-31	3000-3011	li2016fully	_	_
19-32	3011-3012	,	_	_
19-33	3015-3021	Author	_	_
19-34	3022-3023	=	_	_
19-35	3024-3025	{	_	_
19-36	3025-3027	Yi	_	_
19-37	3028-3030	Li	_	_
19-38	3030-3031	,	_	_
19-39	3032-3038	Haozhi	_	_
19-40	3039-3041	Qi	_	_
19-41	3041-3042	,	_	_
19-42	3043-3049	Jifeng	_	_
19-43	3050-3053	Dai	_	_
19-44	3053-3054	,	_	_
19-45	3055-3064	Xiangyang	_	_
19-46	3065-3067	Ji	_	_
19-47	3068-3071	and	_	_
19-48	3072-3078	Yichen	_	_
19-49	3079-3082	Wei	_	_
19-50	3082-3083	}	_	_
19-51	3086-3091	Title	_	_
19-52	3092-3093	=	_	_
19-53	3094-3095	{	_	_
19-54	3095-3100	Fully	_	_
19-55	3101-3114	Convolutional	_	_
19-56	3115-3129	Instance-aware	_	_
19-57	3130-3138	Semantic	_	_
19-58	3139-3151	Segmentation	_	_
19-59	3151-3152	}	_	_
19-60	3152-3153	,	_	_
19-61	3156-3166	Conference	_	_
19-62	3167-3168	=	_	_
19-63	3169-3170	{	_	_
19-64	3170-3174	CVPR	_	_
19-65	3174-3175	}	_	_
19-66	3175-3176	,	_	_
19-67	3179-3183	year	_	_
19-68	3184-3185	=	_	_
19-69	3186-3187	{	_	_
19-70	3187-3191	2017	_	_
19-71	3191-3192	}	_	_
19-72	3193-3194	}	_	_
19-73	3195-3196	`	_	_
19-74	3196-3197	`	_	_
19-75	3197-3198	`	_	_
19-76	3200-3201	#	_	_
19-77	3201-3202	#	_	_
19-78	3202-3203	#	_	_
19-79	3204-3208	Main	_	_
19-80	3209-3216	Results	_	_
19-81	3218-3219	\|	_	_
19-82	3252-3253	\|	_	_
19-83	3254-3262	training	_	_
19-84	3263-3267	data	_	_
19-85	3269-3270	\|	_	_
19-86	3271-3278	testing	_	_
19-87	3279-3283	data	_	_
19-88	3284-3285	\|	_	_
19-89	3286-3289	mAP	_	_
19-90	3289-3290	^	_	_
19-91	3290-3291	r	_	_
19-92	3291-3292	@	_	_
19-93	3292-3295	0.5	_	_
19-94	3296-3297	\|	_	_
19-95	3298-3301	mAP	_	_
19-96	3301-3302	^	_	_
19-97	3302-3303	r	_	_
19-98	3303-3304	@	_	_
19-99	3304-3307	0.7	_	_
19-100	3308-3309	\|	_	_
19-101	3310-3314	time	_	_
19-102	3317-3318	\|	_	_
19-103	3319-3320	\|	_	_
19-104	3320-3321	:	_	_
19-105	3321-3322	-	_	_
19-106	3322-3323	-	_	_
19-107	3323-3324	-	_	_
19-108	3324-3325	-	_	_
19-109	3325-3326	-	_	_
19-110	3326-3327	-	_	_
19-111	3327-3328	-	_	_
19-112	3328-3329	-	_	_
19-113	3329-3330	-	_	_
19-114	3330-3331	-	_	_
19-115	3331-3332	-	_	_
19-116	3332-3333	-	_	_
19-117	3333-3334	-	_	_
19-118	3334-3335	-	_	_
19-119	3335-3336	-	_	_
19-120	3336-3337	-	_	_
19-121	3337-3338	-	_	_
19-122	3338-3339	-	_	_
19-123	3339-3340	-	_	_
19-124	3340-3341	-	_	_
19-125	3341-3342	-	_	_
19-126	3342-3343	-	_	_
19-127	3343-3344	-	_	_
19-128	3344-3345	-	_	_
19-129	3345-3346	-	_	_
19-130	3346-3347	-	_	_
19-131	3347-3348	-	_	_
19-132	3348-3349	-	_	_
19-133	3349-3350	-	_	_
19-134	3350-3351	-	_	_
19-135	3351-3352	-	_	_
19-136	3352-3353	-	_	_
19-137	3353-3354	-	_	_
19-138	3354-3355	:	_	_
19-139	3355-3356	\|	_	_
19-140	3356-3357	:	_	_
19-141	3357-3358	-	_	_
19-142	3358-3359	-	_	_
19-143	3359-3360	-	_	_
19-144	3360-3361	-	_	_
19-145	3361-3362	-	_	_
19-146	3362-3363	-	_	_
19-147	3363-3364	-	_	_
19-148	3364-3365	-	_	_
19-149	3365-3366	-	_	_
19-150	3366-3367	-	_	_
19-151	3367-3368	-	_	_
19-152	3368-3369	-	_	_
19-153	3369-3370	-	_	_
19-154	3370-3371	-	_	_
19-155	3371-3372	-	_	_
19-156	3372-3373	-	_	_
19-157	3373-3374	:	_	_
19-158	3374-3375	\|	_	_
19-159	3375-3376	:	_	_
19-160	3376-3377	-	_	_
19-161	3377-3378	-	_	_
19-162	3378-3379	-	_	_
19-163	3379-3380	-	_	_
19-164	3380-3381	-	_	_
19-165	3381-3382	-	_	_
19-166	3382-3383	-	_	_
19-167	3383-3384	-	_	_
19-168	3384-3385	-	_	_
19-169	3385-3386	-	_	_
19-170	3386-3387	-	_	_
19-171	3387-3388	-	_	_
19-172	3388-3389	-	_	_
19-173	3389-3390	-	_	_
19-174	3390-3391	:	_	_
19-175	3391-3392	\|	_	_
19-176	3392-3393	:	_	_
19-177	3393-3394	-	_	_
19-178	3394-3395	-	_	_
19-179	3395-3396	-	_	_
19-180	3396-3397	-	_	_
19-181	3397-3398	-	_	_
19-182	3398-3399	-	_	_
19-183	3399-3400	-	_	_
19-184	3400-3401	-	_	_
19-185	3401-3402	-	_	_
19-186	3402-3403	-	_	_
19-187	3403-3404	-	_	_
19-188	3404-3405	:	_	_
19-189	3405-3406	\|	_	_
19-190	3406-3407	:	_	_
19-191	3407-3408	-	_	_
19-192	3408-3409	-	_	_
19-193	3409-3410	-	_	_
19-194	3410-3411	-	_	_
19-195	3411-3412	-	_	_
19-196	3412-3413	-	_	_
19-197	3413-3414	-	_	_
19-198	3414-3415	-	_	_
19-199	3415-3416	-	_	_
19-200	3416-3417	-	_	_
19-201	3417-3418	-	_	_
19-202	3418-3419	:	_	_
19-203	3419-3420	\|	_	_
19-204	3420-3421	:	_	_
19-205	3421-3422	-	_	_
19-206	3422-3423	-	_	_
19-207	3423-3424	-	_	_
19-208	3424-3425	-	_	_
19-209	3425-3426	-	_	_
19-210	3426-3427	-	_	_
19-211	3427-3428	-	_	_
19-212	3428-3429	-	_	_
19-213	3429-3430	:	_	_
19-214	3430-3431	\|	_	_
19-215	3432-3433	\|	_	_
19-216	3434-3438	FCIS	_	_
19-217	3438-3439	,	_	_
19-218	3440-3449	ResNet-v1	_	_
19-219	3449-3450	-	_	_
19-220	3450-3453	101	_	_
19-221	3466-3467	\|	_	_
19-222	3468-3471	VOC	_	_
19-223	3472-3476	2012	_	_
19-224	3477-3482	train	_	_
19-225	3483-3484	\|	_	_
19-226	3485-3488	VOC	_	_
19-227	3489-3493	2012	_	_
19-228	3494-3497	val	_	_
19-229	3498-3499	\|	_	_
19-230	3500-3504	66.0	_	_
19-231	3510-3511	\|	_	_
19-232	3512-3516	51.9	_	_
19-233	3522-3523	\|	_	_
19-234	3526-3531	0.23s	_	_
19-235	3535-3536	\|	_	_
19-236	3538-3539	\|	_	_
19-237	3572-3573	\|	_	_
19-238	3574-3575	<	_	_
19-239	3575-3578	sub	_	_
19-240	3578-3579	>	_	_
19-241	3579-3587	training	_	_
19-242	3588-3592	data	_	_
19-243	3592-3593	<	_	_
19-244	3593-3594	/	_	_
19-245	3594-3597	sub	_	_
19-246	3597-3598	>	_	_
19-247	3599-3600	\|	_	_
19-248	3601-3602	<	_	_
19-249	3602-3605	sub	_	_
19-250	3605-3606	>	_	_
19-251	3606-3613	testing	_	_
19-252	3614-3618	data	_	_
19-253	3618-3619	<	_	_
19-254	3619-3620	/	_	_
19-255	3620-3623	sub	_	_
19-256	3623-3624	>	_	_
19-257	3626-3627	\|	_	_
19-258	3628-3629	<	_	_
19-259	3629-3632	sub	_	_
19-260	3632-3633	>	_	_
19-261	3633-3636	mAP	_	_
19-262	3636-3637	^	_	_
19-263	3637-3638	r	_	_
19-264	3638-3639	<	_	_
19-265	3639-3640	/	_	_
19-266	3640-3643	sub	_	_
19-267	3643-3644	>	_	_
19-268	3646-3647	\|	_	_
19-269	3648-3649	<	_	_
19-270	3649-3652	sub	_	_
19-271	3652-3653	>	_	_
19-272	3653-3656	mAP	_	_
19-273	3656-3657	^	_	_
19-274	3657-3658	r	_	_
19-275	3658-3659	@	_	_
19-276	3659-3662	0.5	_	_
19-277	3662-3663	<	_	_
19-278	3663-3664	/	_	_
19-279	3664-3667	sub	_	_
19-280	3667-3668	>	_	_
19-281	3669-3670	\|	_	_
19-282	3671-3672	<	_	_
19-283	3672-3675	sub	_	_
19-284	3675-3676	>	_	_
19-285	3676-3679	mAP	_	_
19-286	3679-3680	^	_	_
19-287	3680-3681	r	_	_
19-288	3681-3682	@	_	_
19-289	3682-3686	0.75	_	_
19-290	3686-3687	<	_	_
19-291	3687-3688	/	_	_
19-292	3688-3691	sub	_	_
19-293	3691-3692	>	_	_
19-294	3692-3693	\|	_	_
19-295	3694-3695	<	_	_
19-296	3695-3698	sub	_	_
19-297	3698-3699	>	_	_
19-298	3699-3702	mAP	_	_
19-299	3702-3703	^	_	_
19-300	3703-3704	r	_	_
19-301	3704-3705	@	_	_
19-302	3705-3706	S	_	_
19-303	3706-3707	<	_	_
19-304	3707-3708	/	_	_
19-305	3708-3711	sub	_	_
19-306	3711-3712	>	_	_
19-307	3713-3714	\|	_	_
19-308	3715-3716	<	_	_
19-309	3716-3719	sub	_	_
19-310	3719-3720	>	_	_
19-311	3720-3723	mAP	_	_
19-312	3723-3724	^	_	_
19-313	3724-3725	r	_	_
19-314	3725-3726	@	_	_
19-315	3726-3727	M	_	_
19-316	3727-3728	<	_	_
19-317	3728-3729	/	_	_
19-318	3729-3732	sub	_	_
19-319	3732-3733	>	_	_
19-320	3734-3735	\|	_	_
19-321	3736-3737	<	_	_
19-322	3737-3740	sub	_	_
19-323	3740-3741	>	_	_
19-324	3741-3744	mAP	_	_
19-325	3744-3745	^	_	_
19-326	3745-3746	r	_	_
19-327	3746-3747	@	_	_
19-328	3747-3748	L	_	_
19-329	3748-3749	<	_	_
19-330	3749-3750	/	_	_
19-331	3750-3753	sub	_	_
19-332	3753-3754	>	_	_
19-333	3755-3756	\|	_	_
19-334	3757-3758	\|	_	_
19-335	3758-3759	:	_	_
19-336	3759-3760	-	_	_
19-337	3760-3761	-	_	_
19-338	3761-3762	-	_	_
19-339	3762-3763	-	_	_
19-340	3763-3764	-	_	_
19-341	3764-3765	-	_	_
19-342	3765-3766	-	_	_
19-343	3766-3767	-	_	_
19-344	3767-3768	-	_	_
19-345	3768-3769	-	_	_
19-346	3769-3770	-	_	_
19-347	3770-3771	-	_	_
19-348	3771-3772	-	_	_
19-349	3772-3773	-	_	_
19-350	3773-3774	-	_	_
19-351	3774-3775	-	_	_
19-352	3775-3776	-	_	_
19-353	3776-3777	-	_	_
19-354	3777-3778	-	_	_
19-355	3778-3779	-	_	_
19-356	3779-3780	-	_	_
19-357	3780-3781	-	_	_
19-358	3781-3782	-	_	_
19-359	3782-3783	-	_	_
19-360	3783-3784	-	_	_
19-361	3784-3785	-	_	_
19-362	3785-3786	-	_	_
19-363	3786-3787	-	_	_
19-364	3787-3788	-	_	_
19-365	3788-3789	-	_	_
19-366	3789-3790	-	_	_
19-367	3790-3791	-	_	_
19-368	3791-3792	-	_	_
19-369	3792-3793	:	_	_
19-370	3793-3794	\|	_	_
19-371	3794-3795	:	_	_
19-372	3795-3796	-	_	_
19-373	3796-3797	-	_	_
19-374	3797-3798	-	_	_
19-375	3798-3799	-	_	_
19-376	3799-3800	-	_	_
19-377	3800-3801	-	_	_
19-378	3801-3802	-	_	_
19-379	3802-3803	-	_	_
19-380	3803-3804	-	_	_
19-381	3804-3805	-	_	_
19-382	3805-3806	-	_	_
19-383	3806-3807	-	_	_
19-384	3807-3808	-	_	_
19-385	3808-3809	-	_	_
19-386	3809-3810	-	_	_
19-387	3810-3811	:	_	_
19-388	3811-3812	\|	_	_
19-389	3812-3813	:	_	_
19-390	3813-3814	-	_	_
19-391	3814-3815	-	_	_
19-392	3815-3816	-	_	_
19-393	3816-3817	-	_	_
19-394	3817-3818	-	_	_
19-395	3818-3819	-	_	_
19-396	3819-3820	-	_	_
19-397	3820-3821	-	_	_
19-398	3821-3822	-	_	_
19-399	3822-3823	-	_	_
19-400	3823-3824	-	_	_
19-401	3824-3825	-	_	_
19-402	3825-3826	-	_	_
19-403	3826-3827	-	_	_
19-404	3827-3828	-	_	_
19-405	3828-3829	:	_	_
19-406	3829-3830	\|	_	_
19-407	3830-3831	:	_	_
19-408	3831-3832	-	_	_
19-409	3832-3833	-	_	_
19-410	3833-3834	-	_	_
19-411	3834-3835	-	_	_
19-412	3835-3836	-	_	_
19-413	3836-3837	-	_	_
19-414	3837-3838	:	_	_
19-415	3838-3839	\|	_	_
19-416	3839-3840	:	_	_
19-417	3840-3841	-	_	_
19-418	3841-3842	-	_	_
19-419	3842-3843	-	_	_
19-420	3843-3844	-	_	_
19-421	3844-3845	-	_	_
19-422	3845-3846	-	_	_
19-423	3846-3847	-	_	_
19-424	3847-3848	-	_	_
19-425	3848-3849	-	_	_
19-426	3849-3850	:	_	_
19-427	3850-3851	\|	_	_
19-428	3851-3852	:	_	_
19-429	3852-3853	-	_	_
19-430	3853-3854	-	_	_
19-431	3854-3855	-	_	_
19-432	3855-3856	-	_	_
19-433	3856-3857	-	_	_
19-434	3857-3858	-	_	_
19-435	3858-3859	-	_	_
19-436	3859-3860	-	_	_
19-437	3860-3861	-	_	_
19-438	3861-3862	:	_	_
19-439	3862-3863	\|	_	_
19-440	3863-3864	:	_	_
19-441	3864-3865	-	_	_
19-442	3865-3866	-	_	_
19-443	3866-3867	-	_	_
19-444	3867-3868	-	_	_
19-445	3868-3869	-	_	_
19-446	3869-3870	-	_	_
19-447	3870-3871	-	_	_
19-448	3871-3872	:	_	_
19-449	3872-3873	\|	_	_
19-450	3873-3874	:	_	_
19-451	3874-3875	-	_	_
19-452	3875-3876	-	_	_
19-453	3876-3877	-	_	_
19-454	3877-3878	-	_	_
19-455	3878-3879	-	_	_
19-456	3879-3880	-	_	_
19-457	3880-3881	-	_	_
19-458	3881-3882	:	_	_
19-459	3882-3883	\|	_	_
19-460	3883-3884	:	_	_
19-461	3884-3885	-	_	_
19-462	3885-3886	-	_	_
19-463	3886-3887	-	_	_
19-464	3887-3888	-	_	_
19-465	3888-3889	-	_	_
19-466	3889-3890	-	_	_
19-467	3890-3891	-	_	_
19-468	3891-3892	:	_	_
19-469	3892-3893	\|	_	_
19-470	3894-3895	\|	_	_
19-471	3896-3897	<	_	_
19-472	3897-3900	sub	_	_
19-473	3900-3901	>	_	_
19-474	3901-3905	FCIS	_	_
19-475	3905-3906	,	_	_
19-476	3907-3916	ResNet-v1	_	_
19-477	3916-3917	-	_	_
19-478	3917-3920	101	_	_
19-479	3920-3921	,	_	_
19-480	3922-3926	OHEM	_	_
19-481	3927-3928	<	_	_
19-482	3928-3929	/	_	_
19-483	3929-3932	sub	_	_
19-484	3932-3933	>	_	_
19-485	3934-3935	\|	_	_
19-486	3936-3937	<	_	_
19-487	3937-3940	sub	_	_
19-488	3940-3941	>	_	_
19-489	3941-3945	coco	_	_
19-490	3946-3957	trainval35k	_	_
19-491	3957-3958	<	_	_
19-492	3958-3959	/	_	_
19-493	3959-3962	sub	_	_
19-494	3962-3963	>	_	_
19-495	3964-3965	\|	_	_
19-496	3966-3967	<	_	_
19-497	3967-3970	sub	_	_
19-498	3970-3971	>	_	_
19-499	3971-3975	coco	_	_
19-500	3976-3983	minival	_	_
19-501	3983-3984	<	_	_
19-502	3984-3985	/	_	_
19-503	3985-3988	sub	_	_
19-504	3988-3989	>	_	_
19-505	3990-3991	\|	_	_
19-506	3992-3996	29.2	_	_
19-507	3997-3998	\|	_	_
19-508	3999-4003	50.8	_	_
19-509	4004-4005	\|	_	_
19-510	4006-4010	29.7	_	_
19-511	4011-4012	\|	_	_
19-512	4013-4016	7.9	_	_
19-513	4017-4018	\|	_	_
19-514	4019-4023	31.4	_	_
19-515	4024-4025	\|	_	_
19-516	4026-4030	51.1	_	_
19-517	4031-4032	\|	_	_
19-518	4033-4034	\|	_	_
19-519	4035-4036	<	_	_
19-520	4036-4039	sub	_	_
19-521	4039-4040	>	_	_
19-522	4040-4044	FCIS	_	_
19-523	4044-4045	,	_	_
19-524	4046-4055	ResNet-v1	_	_
19-525	4055-4056	-	_	_
19-526	4056-4059	101	_	_
19-527	4059-4060	,	_	_
19-528	4061-4065	OHEM	_	_
19-529	4066-4067	<	_	_
19-530	4067-4068	/	_	_
19-531	4068-4071	sub	_	_
19-532	4071-4072	>	_	_
19-533	4073-4074	\|	_	_
19-534	4075-4076	<	_	_
19-535	4076-4079	sub	_	_
19-536	4079-4080	>	_	_
19-537	4080-4084	coco	_	_
19-538	4085-4096	trainval35k	_	_
19-539	4096-4097	<	_	_
19-540	4097-4098	/	_	_
19-541	4098-4101	sub	_	_
19-542	4101-4102	>	_	_
19-543	4103-4104	\|	_	_
19-544	4105-4106	<	_	_
19-545	4106-4109	sub	_	_
19-546	4109-4110	>	_	_
19-547	4110-4114	coco	_	_
19-548	4115-4123	test-dev	_	_
19-549	4123-4124	<	_	_
19-550	4124-4125	/	_	_
19-551	4125-4128	sub	_	_
19-552	4128-4129	>	_	_
19-553	4129-4130	\|	_	_
19-554	4131-4135	29.6	_	_
19-555	4136-4137	\|	_	_
19-556	4138-4142	51.4	_	_
19-557	4143-4144	\|	_	_
19-558	4145-4149	30.2	_	_
19-559	4150-4151	\|	_	_
19-560	4152-4155	8.0	_	_
19-561	4156-4157	\|	_	_
19-562	4158-4162	31.0	_	_
19-563	4163-4164	\|	_	_
19-564	4165-4169	49.7	_	_
19-565	4170-4171	\|	_	_
19-566	4173-4174	\*	_	_
19-567	4174-4181	Running	_	_
19-568	4182-4186	time	_	_
19-569	4187-4189	is	_	_
19-570	4190-4197	counted	_	_
19-571	4198-4200	on	_	_
19-572	4201-4202	a	_	_
19-573	4203-4209	single	_	_
19-574	4210-4217	Maxwell	_	_
19-575	4218-4223	Titan	_	_
19-576	4224-4225	X	_	_
19-577	4226-4229	GPU	_	_
19-578	4230-4231	(	_	_
19-579	4231-4241	mini-batch	_	_
19-580	4242-4246	size	_	_
19-581	4247-4249	is	_	_
19-582	4250-4251	1	_	_
19-583	4252-4254	in	_	_
19-584	4255-4264	inference	_	_
19-585	4264-4265	)	_	_
19-586	4265-4266	.	_	_
19-587	4266-4267	\*	_	_
19-588	4269-4270	#	_	_
19-589	4270-4271	#	_	_
19-590	4271-4272	#	_	_
19-591	4273-4285	Requirements	_	_
19-592	4285-4286	:	_	_
19-593	4287-4295	Software	_	_
19-594	4297-4298	1	_	_
19-595	4298-4299	.	_	_

#Text=MXNet from \[the offical repository\](https://github.com/dmlc/mxnet).
20-1	4300-4305	MXNet	_	_
20-2	4306-4310	from	_	_
20-3	4311-4312	\[	_	_
20-4	4312-4315	the	_	_
20-5	4316-4323	offical	_	_
20-6	4324-4334	repository	_	_
20-7	4334-4335	\]	_	_
20-8	4335-4336	(	_	_
20-9	4336-4341	https	_	_
20-10	4341-4342	:	_	_
20-11	4342-4343	/	_	_
20-12	4343-4344	/	_	_
20-13	4344-4354	github.com	_	_
20-14	4354-4355	/	_	_
20-15	4355-4359	dmlc	_	_
20-16	4359-4360	/	_	_
20-17	4360-4365	mxnet	_	_
20-18	4365-4366	)	_	_
20-19	4366-4367	.	_	_

#Text=We tested our code on \[MXNet@(commit 62ecb60)\](https://github.com/dmlc/mxnet/tree/62ecb60).
21-1	4368-4370	We	_	_
21-2	4371-4377	tested	_	_
21-3	4378-4381	our	_	_
21-4	4382-4386	code	_	_
21-5	4387-4389	on	_	_
21-6	4390-4391	\[	_	_
21-7	4391-4396	MXNet	_	_
21-8	4396-4397	@	_	_
21-9	4397-4398	(	_	_
21-10	4398-4404	commit	_	_
21-11	4405-4412	62ecb60	_	_
21-12	4412-4413	)	_	_
21-13	4413-4414	\]	_	_
21-14	4414-4415	(	_	_
21-15	4415-4420	https	_	_
21-16	4420-4421	:	_	_
21-17	4421-4422	/	_	_
21-18	4422-4423	/	_	_
21-19	4423-4433	github.com	_	_
21-20	4433-4434	/	_	_
21-21	4434-4438	dmlc	_	_
21-22	4438-4439	/	_	_
21-23	4439-4444	mxnet	_	_
21-24	4444-4445	/	_	_
21-25	4445-4449	tree	_	_
21-26	4449-4450	/	_	_
21-27	4450-4457	62ecb60	_	_
21-28	4457-4458	)	_	_
21-29	4458-4459	.	_	_

#Text=Due to the rapid development of MXNet, it is recommended to checkout this version if you encounter any issues.
22-1	4460-4463	Due	_	_
22-2	4464-4466	to	_	_
22-3	4467-4470	the	_	_
22-4	4471-4476	rapid	_	_
22-5	4477-4488	development	_	_
22-6	4489-4491	of	_	_
22-7	4492-4497	MXNet	_	_
22-8	4497-4498	,	_	_
22-9	4499-4501	it	_	_
22-10	4502-4504	is	_	_
22-11	4505-4516	recommended	_	_
22-12	4517-4519	to	_	_
22-13	4520-4528	checkout	_	_
22-14	4529-4533	this	_	_
22-15	4534-4541	version	_	_
22-16	4542-4544	if	_	_
22-17	4545-4548	you	_	_
22-18	4549-4558	encounter	_	_
22-19	4559-4562	any	_	_
22-20	4563-4569	issues	_	_
22-21	4569-4570	.	_	_

#Text=We may maintain this repository periodically if MXNet adds important feature in future release.  2.
23-1	4571-4573	We	_	_
23-2	4574-4577	may	_	_
23-3	4578-4586	maintain	_	_
23-4	4587-4591	this	_	_
23-5	4592-4602	repository	_	_
23-6	4603-4615	periodically	_	_
23-7	4616-4618	if	_	_
23-8	4619-4624	MXNet	_	_
23-9	4625-4629	adds	_	_
23-10	4630-4639	important	_	_
23-11	4640-4647	feature	_	_
23-12	4648-4650	in	_	_
23-13	4651-4657	future	_	_
23-14	4658-4665	release	_	_
23-15	4665-4666	.	_	_
23-16	4668-4669	2	_	_
23-17	4669-4670	.	_	_

#Text=Python packages might missing: cython, opencv-python >= 3.2.0, easydict.
24-1	4671-4677	Python	_	_
24-2	4678-4686	packages	_	_
24-3	4687-4692	might	_	_
24-4	4693-4700	missing	_	_
24-5	4700-4701	:	_	_
24-6	4702-4708	cython	_	_
24-7	4708-4709	,	_	_
24-8	4710-4723	opencv-python	_	_
24-8	4717-4723	python	_	_
24-9	4724-4725	>	_	_
24-10	4725-4726	=	_	_
24-11	4727-4732	3.2.0	_	_
24-12	4732-4733	,	_	_
24-13	4734-4742	easydict	_	_
24-14	4742-4743	.	_	_

#Text=If `pip` is set up on your system, those packages should be able to be fetched and installed by running  ```  pip install Cython  pip install opencv-python==3.2.0.6  pip install easydict==1.6  pip install hickle  ``` 3.
25-1	4744-4746	If	_	_
25-2	4747-4748	`	_	_
25-3	4748-4751	pip	_	_
25-4	4751-4752	`	_	_
25-5	4753-4755	is	_	_
25-6	4756-4759	set	_	_
25-7	4760-4762	up	_	_
25-8	4763-4765	on	_	_
25-9	4766-4770	your	_	_
25-10	4771-4777	system	_	_
25-11	4777-4778	,	_	_
25-12	4779-4784	those	_	_
25-13	4785-4793	packages	_	_
25-14	4794-4800	should	_	_
25-15	4801-4803	be	_	_
25-16	4804-4808	able	_	_
25-17	4809-4811	to	_	_
25-18	4812-4814	be	_	_
25-19	4815-4822	fetched	_	_
25-20	4823-4826	and	_	_
25-21	4827-4836	installed	_	_
25-22	4837-4839	by	_	_
25-23	4840-4847	running	_	_
25-24	4849-4850	`	_	_
25-25	4850-4851	`	_	_
25-26	4851-4852	`	_	_
25-27	4854-4857	pip	_	_
25-28	4858-4865	install	_	_
25-29	4866-4872	Cython	_	_
25-30	4874-4877	pip	_	_
25-31	4878-4885	install	_	_
25-32	4886-4899	opencv-python	_	_
25-32	4893-4899	python	_	_
25-33	4899-4900	=	_	_
25-34	4900-4901	=	_	_
25-35	4901-4908	3.2.0.6	_	_
25-36	4910-4913	pip	_	_
25-37	4914-4921	install	_	_
25-38	4922-4930	easydict	_	_
25-39	4930-4931	=	_	_
25-40	4931-4932	=	_	_
25-41	4932-4935	1.6	_	_
25-42	4937-4940	pip	_	_
25-43	4941-4948	install	_	_
25-44	4949-4955	hickle	_	_
25-45	4957-4958	`	_	_
25-46	4958-4959	`	_	_
25-47	4959-4960	`	_	_
25-48	4961-4962	3	_	_
25-49	4962-4963	.	_	_

#Text=For Windows users, Visual Studio 2015 is needed to compile cython module.   ### Requirements: Hardware  Any NVIDIA GPUs with at least 5GB memory should be OK  ### Installation  1.
26-1	4964-4967	For	_	_
26-2	4968-4975	Windows	_	_
26-3	4976-4981	users	_	_
26-4	4981-4982	,	_	_
26-5	4983-4989	Visual	_	_
26-6	4990-4996	Studio	_	_
26-7	4997-5001	2015	_	_
26-8	5002-5004	is	_	_
26-9	5005-5011	needed	_	_
26-10	5012-5014	to	_	_
26-11	5015-5022	compile	_	_
26-12	5023-5029	cython	_	_
26-13	5030-5036	module	_	_
26-14	5036-5037	.	_	_
26-15	5040-5041	#	_	_
26-16	5041-5042	#	_	_
26-17	5042-5043	#	_	_
26-18	5044-5056	Requirements	_	_
26-19	5056-5057	:	_	_
26-20	5058-5066	Hardware	_	_
26-21	5068-5071	Any	_	_
26-22	5072-5078	NVIDIA	_	_
26-23	5079-5083	GPUs	_	_
26-24	5084-5088	with	_	_
26-25	5089-5091	at	_	_
26-26	5092-5097	least	_	_
26-27	5098-5101	5GB	_	_
26-28	5102-5108	memory	_	_
26-29	5109-5115	should	_	_
26-30	5116-5118	be	_	_
26-31	5119-5121	OK	_	_
26-32	5123-5124	#	_	_
26-33	5124-5125	#	_	_
26-34	5125-5126	#	_	_
26-35	5127-5139	Installation	_	_
26-36	5141-5142	1	_	_
26-37	5142-5143	.	_	_

#Text=Clone the FCIS repository, and we'll call the directory that you cloned FCIS as ${FCIS\_ROOT}. ~~~ git clone https://github.com/msracver/FCIS.git ~~~ 2.
27-1	5144-5149	Clone	_	_
27-2	5150-5153	the	_	_
27-3	5154-5158	FCIS	_	_
27-4	5159-5169	repository	_	_
27-5	5169-5170	,	_	_
27-6	5171-5174	and	_	_
27-7	5175-5180	we'll	_	_
27-8	5181-5185	call	_	_
27-9	5186-5189	the	_	_
27-10	5190-5199	directory	_	_
27-11	5200-5204	that	_	_
27-12	5205-5208	you	_	_
27-13	5209-5215	cloned	_	_
27-14	5216-5220	FCIS	_	_
27-15	5221-5223	as	_	_
27-16	5224-5225	$	_	_
27-17	5225-5226	{	_	_
27-18	5226-5235	FCIS\_ROOT	_	_
27-19	5235-5236	}	_	_
27-20	5236-5237	.	_	_
27-21	5238-5239	~	_	_
27-22	5239-5240	~	_	_
27-23	5240-5241	~	_	_
27-24	5242-5245	git	_	_
27-25	5246-5251	clone	_	_
27-26	5252-5257	https	_	_
27-27	5257-5258	:	_	_
27-28	5258-5259	/	_	_
27-29	5259-5260	/	_	_
27-30	5260-5270	github.com	_	_
27-31	5270-5271	/	_	_
27-32	5271-5279	msracver	_	_
27-33	5279-5280	/	_	_
27-34	5280-5288	FCIS.git	_	_
27-35	5289-5290	~	_	_
27-36	5290-5291	~	_	_
27-37	5291-5292	~	_	_
27-38	5293-5294	2	_	_
27-39	5294-5295	.	_	_

#Text=For Windows users, run ``cmd .
28-1	5296-5299	For	_	_
28-2	5300-5307	Windows	_	_
28-3	5308-5313	users	_	_
28-4	5313-5314	,	_	_
28-5	5315-5318	run	_	_
28-6	5319-5320	`	_	_
28-7	5320-5321	`	_	_
28-8	5321-5324	cmd	_	_
28-9	5325-5326	.	_	_

#Text=\\init.bat``.
29-1	5326-5327	\\	_	_
29-2	5327-5335	init.bat	_	_
29-3	5335-5336	`	_	_
29-4	5336-5337	`	_	_
29-5	5337-5338	.	_	_

#Text=For Linux user, run `sh .
30-1	5339-5342	For	_	_
30-2	5343-5348	Linux	_	_
30-3	5349-5353	user	_	_
30-4	5353-5354	,	_	_
30-5	5355-5358	run	_	_
30-6	5359-5360	`	_	_
30-7	5360-5362	sh	_	_
30-8	5363-5364	.	_	_

#Text=/init.sh`.
31-1	5364-5365	/	_	_
31-2	5365-5372	init.sh	_	_
31-3	5372-5373	`	_	_
31-4	5373-5374	.	_	_

#Text=The scripts will build cython module automatically and create some folders.  3.
32-1	5375-5378	The	_	_
32-2	5379-5386	scripts	_	_
32-3	5387-5391	will	_	_
32-4	5392-5397	build	_	_
32-5	5398-5404	cython	_	_
32-6	5405-5411	module	_	_
32-7	5412-5425	automatically	_	_
32-8	5426-5429	and	_	_
32-9	5430-5436	create	_	_
32-10	5437-5441	some	_	_
32-11	5442-5449	folders	_	_
32-12	5449-5450	.	_	_
32-13	5452-5453	3	_	_
32-14	5453-5454	.	_	_

#Text=Install MXNet:    \*\*Note: The MXNet's Custom Op cannot execute parallelly using multi-gpus after this \[PR\](https://github.com/apache/incubator-mxnet/pull/6928).
33-1	5455-5462	Install	_	_
33-2	5463-5468	MXNet	_	_
33-3	5468-5469	:	_	_
33-4	5473-5474	\*	_	_
33-5	5474-5475	\*	_	_
33-6	5475-5479	Note	_	_
33-7	5479-5480	:	_	_
33-8	5481-5484	The	_	_
33-9	5485-5492	MXNet's	_	_
33-9	5485-5490	MXNet	_	_
33-10	5493-5499	Custom	_	_
33-11	5500-5502	Op	_	_
33-12	5503-5509	cannot	_	_
33-13	5510-5517	execute	_	_
33-14	5518-5528	parallelly	_	_
33-15	5529-5534	using	_	_
33-16	5535-5545	multi-gpus	_	_
33-17	5546-5551	after	_	_
33-18	5552-5556	this	_	_
33-19	5557-5558	\[	_	_
33-20	5558-5560	PR	_	_
33-21	5560-5561	\]	_	_
33-22	5561-5562	(	_	_
33-23	5562-5567	https	_	_
33-24	5567-5568	:	_	_
33-25	5568-5569	/	_	_
33-26	5569-5570	/	_	_
33-27	5570-5580	github.com	_	_
33-28	5580-5581	/	_	_
33-29	5581-5587	apache	_	_
33-30	5587-5588	/	_	_
33-31	5588-5603	incubator-mxnet	_	_
33-32	5603-5604	/	_	_
33-33	5604-5608	pull	_	_
33-34	5608-5609	/	_	_
33-35	5609-5613	6928	_	_
33-36	5613-5614	)	_	_
33-37	5614-5615	.	_	_

#Text=We strongly suggest the user rollback to version \[MXNet@(commit 998378a)\](https://github.com/dmlc/mxnet/tree/998378a) for training (following Section 3.2 - 3.6).\*\*   \*\*\*Quick start\*\*\*   3.1 Install MXNet and all dependencies by   ```  pip install -r requirements.txt  ```  If there is no other error message, MXNet should be installed successfully.
34-1	5616-5618	We	_	_
34-2	5619-5627	strongly	_	_
34-3	5628-5635	suggest	_	_
34-4	5636-5639	the	_	_
34-5	5640-5644	user	_	_
34-6	5645-5653	rollback	_	_
34-7	5654-5656	to	_	_
34-8	5657-5664	version	_	_
34-9	5665-5666	\[	_	_
34-10	5666-5671	MXNet	_	_
34-11	5671-5672	@	_	_
34-12	5672-5673	(	_	_
34-13	5673-5679	commit	_	_
34-14	5680-5687	998378a	_	_
34-15	5687-5688	)	_	_
34-16	5688-5689	\]	_	_
34-17	5689-5690	(	_	_
34-18	5690-5695	https	_	_
34-19	5695-5696	:	_	_
34-20	5696-5697	/	_	_
34-21	5697-5698	/	_	_
34-22	5698-5708	github.com	_	_
34-23	5708-5709	/	_	_
34-24	5709-5713	dmlc	_	_
34-25	5713-5714	/	_	_
34-26	5714-5719	mxnet	_	_
34-27	5719-5720	/	_	_
34-28	5720-5724	tree	_	_
34-29	5724-5725	/	_	_
34-30	5725-5732	998378a	_	_
34-31	5732-5733	)	_	_
34-32	5734-5737	for	_	_
34-33	5738-5746	training	_	_
34-34	5747-5748	(	_	_
34-35	5748-5757	following	_	_
34-36	5758-5765	Section	_	_
34-37	5766-5769	3.2	_	_
34-38	5770-5771	-	_	_
34-39	5772-5775	3.6	_	_
34-40	5775-5776	)	_	_
34-41	5776-5777	.	_	_
34-42	5777-5778	\*	_	_
34-43	5778-5779	\*	_	_
34-44	5782-5783	\*	_	_
34-45	5783-5784	\*	_	_
34-46	5784-5785	\*	_	_
34-47	5785-5790	Quick	_	_
34-48	5791-5796	start	_	_
34-49	5796-5797	\*	_	_
34-50	5797-5798	\*	_	_
34-51	5798-5799	\*	_	_
34-52	5802-5805	3.1	_	_
34-53	5806-5813	Install	_	_
34-54	5814-5819	MXNet	_	_
34-55	5820-5823	and	_	_
34-56	5824-5827	all	_	_
34-57	5828-5840	dependencies	_	_
34-58	5841-5843	by	_	_
34-59	5846-5847	`	_	_
34-60	5847-5848	`	_	_
34-61	5848-5849	`	_	_
34-62	5851-5854	pip	_	_
34-63	5855-5862	install	_	_
34-64	5863-5864	-	_	_
34-65	5864-5865	r	_	_
34-66	5866-5882	requirements.txt	_	_
34-67	5884-5885	`	_	_
34-68	5885-5886	`	_	_
34-69	5886-5887	`	_	_
34-70	5889-5891	If	_	_
34-71	5892-5897	there	_	_
34-72	5898-5900	is	_	_
34-73	5901-5903	no	_	_
34-74	5904-5909	other	_	_
34-75	5910-5915	error	_	_
34-76	5916-5923	message	_	_
34-77	5923-5924	,	_	_
34-78	5925-5930	MXNet	_	_
34-79	5931-5937	should	_	_
34-80	5938-5940	be	_	_
34-81	5941-5950	installed	_	_
34-82	5951-5963	successfully	_	_
34-83	5963-5964	.	_	_

#Text=\*\*\*Build from source (alternative way)\*\*\*   3.2 Clone MXNet and checkout to \[MXNet@(commit 998378a)\](https://github.com/dmlc/mxnet/tree/998378a) by  ```  git clone --recursive https://github.com/dmlc/mxnet.git  git checkout 998378a  git submodule init  git submodule update  ```  3.3 Copy channel operators in `$(FCIS\_ROOT)/fcis/operator\_cxx` to `$(YOUR\_MXNET\_FOLDER)/src/operator/contrib` by  ```  cp -r $(FCIS\_ROOT)/fcis/operator\_cxx/channel\_operator\* $(MXNET\_ROOT)/src/operator/contrib/     ```  3.4 Compile MXNet  ```  cd ${MXNET\_ROOT}  make -j $(nproc) USE\_OPENCV=1 USE\_BLAS=openblas USE\_CUDA=1 USE\_CUDA\_PATH=/usr/local/cuda USE\_CUDNN=1  ```  3.5 Install the MXNet Python binding by    \*\*\*Note: If you will actively switch between different versions of MXNet, please follow 3.5 instead of 3.4\*\*\*  ```  cd python  sudo python setup.py install  ```  3.6 For advanced users, you may put your Python packge into `.
35-1	5969-5970	\*	_	_
35-2	5970-5971	\*	_	_
35-3	5971-5972	\*	_	_
35-4	5972-5977	Build	_	_
35-5	5978-5982	from	_	_
35-6	5983-5989	source	_	_
35-7	5990-5991	(	_	_
35-8	5991-6002	alternative	_	_
35-9	6003-6006	way	_	_
35-10	6006-6007	)	_	_
35-11	6007-6008	\*	_	_
35-12	6008-6009	\*	_	_
35-13	6009-6010	\*	_	_
35-14	6013-6016	3.2	_	_
35-15	6017-6022	Clone	_	_
35-16	6023-6028	MXNet	_	_
35-17	6029-6032	and	_	_
35-18	6033-6041	checkout	_	_
35-19	6042-6044	to	_	_
35-20	6045-6046	\[	_	_
35-21	6046-6051	MXNet	_	_
35-22	6051-6052	@	_	_
35-23	6052-6053	(	_	_
35-24	6053-6059	commit	_	_
35-25	6060-6067	998378a	_	_
35-26	6067-6068	)	_	_
35-27	6068-6069	\]	_	_
35-28	6069-6070	(	_	_
35-29	6070-6075	https	_	_
35-30	6075-6076	:	_	_
35-31	6076-6077	/	_	_
35-32	6077-6078	/	_	_
35-33	6078-6088	github.com	_	_
35-34	6088-6089	/	_	_
35-35	6089-6093	dmlc	_	_
35-36	6093-6094	/	_	_
35-37	6094-6099	mxnet	_	_
35-38	6099-6100	/	_	_
35-39	6100-6104	tree	_	_
35-40	6104-6105	/	_	_
35-41	6105-6112	998378a	_	_
35-42	6112-6113	)	_	_
35-43	6114-6116	by	_	_
35-44	6118-6119	`	_	_
35-45	6119-6120	`	_	_
35-46	6120-6121	`	_	_
35-47	6123-6126	git	_	_
35-48	6127-6132	clone	_	_
35-49	6133-6134	-	_	_
35-50	6134-6135	-	_	_
35-51	6135-6144	recursive	_	_
35-52	6145-6150	https	_	_
35-53	6150-6151	:	_	_
35-54	6151-6152	/	_	_
35-55	6152-6153	/	_	_
35-56	6153-6163	github.com	_	_
35-57	6163-6164	/	_	_
35-58	6164-6168	dmlc	_	_
35-59	6168-6169	/	_	_
35-60	6169-6178	mxnet.git	_	_
35-61	6180-6183	git	_	_
35-62	6184-6192	checkout	_	_
35-63	6193-6200	998378a	_	_
35-64	6202-6205	git	_	_
35-65	6206-6215	submodule	_	_
35-66	6216-6220	init	_	_
35-67	6222-6225	git	_	_
35-68	6226-6235	submodule	_	_
35-69	6236-6242	update	_	_
35-70	6244-6245	`	_	_
35-71	6245-6246	`	_	_
35-72	6246-6247	`	_	_
35-73	6249-6252	3.3	_	_
35-74	6253-6257	Copy	_	_
35-75	6258-6265	channel	_	_
35-76	6266-6275	operators	_	_
35-77	6276-6278	in	_	_
35-78	6279-6280	`	_	_
35-79	6280-6281	$	_	_
35-80	6281-6282	(	_	_
35-81	6282-6291	FCIS\_ROOT	_	_
35-82	6291-6292	)	_	_
35-83	6292-6293	/	_	_
35-84	6293-6297	fcis	_	_
35-85	6297-6298	/	_	_
35-86	6298-6310	operator\_cxx	_	_
35-87	6310-6311	`	_	_
35-88	6312-6314	to	_	_
35-89	6315-6316	`	_	_
35-90	6316-6317	$	_	_
35-91	6317-6318	(	_	_
35-92	6318-6335	YOUR\_MXNET\_FOLDER	_	_
35-93	6335-6336	)	_	_
35-94	6336-6337	/	_	_
35-95	6337-6340	src	_	_
35-96	6340-6341	/	_	_
35-97	6341-6349	operator	_	_
35-98	6349-6350	/	_	_
35-99	6350-6357	contrib	_	_
35-100	6357-6358	`	_	_
35-101	6359-6361	by	_	_
35-102	6363-6364	`	_	_
35-103	6364-6365	`	_	_
35-104	6365-6366	`	_	_
35-105	6368-6370	cp	_	_
35-106	6371-6372	-	_	_
35-107	6372-6373	r	_	_
35-108	6374-6375	$	_	_
35-109	6375-6376	(	_	_
35-110	6376-6385	FCIS\_ROOT	_	_
35-111	6385-6386	)	_	_
35-112	6386-6387	/	_	_
35-113	6387-6391	fcis	_	_
35-114	6391-6392	/	_	_
35-115	6392-6404	operator\_cxx	_	_
35-116	6404-6405	/	_	_
35-117	6405-6421	channel\_operator	_	_
35-118	6421-6422	\*	_	_
35-119	6423-6424	$	_	_
35-120	6424-6425	(	_	_
35-121	6425-6435	MXNET\_ROOT	_	_
35-122	6435-6436	)	_	_
35-123	6436-6437	/	_	_
35-124	6437-6440	src	_	_
35-125	6440-6441	/	_	_
35-126	6441-6449	operator	_	_
35-127	6449-6450	/	_	_
35-128	6450-6457	contrib	_	_
35-129	6457-6458	/	_	_
35-130	6463-6464	`	_	_
35-131	6464-6465	`	_	_
35-132	6465-6466	`	_	_
35-133	6468-6471	3.4	_	_
35-134	6472-6479	Compile	_	_
35-135	6480-6485	MXNet	_	_
35-136	6487-6488	`	_	_
35-137	6488-6489	`	_	_
35-138	6489-6490	`	_	_
35-139	6492-6494	cd	_	_
35-140	6495-6496	$	_	_
35-141	6496-6497	{	_	_
35-142	6497-6507	MXNET\_ROOT	_	_
35-143	6507-6508	}	_	_
35-144	6510-6514	make	_	_
35-145	6515-6516	-	_	_
35-146	6516-6517	j	_	_
35-147	6518-6519	$	_	_
35-148	6519-6520	(	_	_
35-149	6520-6525	nproc	_	_
35-150	6525-6526	)	_	_
35-151	6527-6537	USE\_OPENCV	_	_
35-152	6537-6538	=	_	_
35-153	6538-6539	1	_	_
35-154	6540-6548	USE\_BLAS	_	_
35-155	6548-6549	=	_	_
35-156	6549-6557	openblas	_	_
35-157	6558-6566	USE\_CUDA	_	_
35-158	6566-6567	=	_	_
35-159	6567-6568	1	_	_
35-160	6569-6582	USE\_CUDA\_PATH	_	_
35-161	6582-6583	=	_	_
35-162	6583-6584	/	_	_
35-163	6584-6587	usr	_	_
35-164	6587-6588	/	_	_
35-165	6588-6593	local	_	_
35-166	6593-6594	/	_	_
35-167	6594-6598	cuda	_	_
35-168	6599-6608	USE\_CUDNN	_	_
35-169	6608-6609	=	_	_
35-170	6609-6610	1	_	_
35-171	6612-6613	`	_	_
35-172	6613-6614	`	_	_
35-173	6614-6615	`	_	_
35-174	6617-6620	3.5	_	_
35-175	6621-6628	Install	_	_
35-176	6629-6632	the	_	_
35-177	6633-6638	MXNet	_	_
35-178	6639-6645	Python	_	_
35-179	6646-6653	binding	_	_
35-180	6654-6656	by	_	_
35-181	6660-6661	\*	_	_
35-182	6661-6662	\*	_	_
35-183	6662-6663	\*	_	_
35-184	6663-6667	Note	_	_
35-185	6667-6668	:	_	_
35-186	6669-6671	If	_	_
35-187	6672-6675	you	_	_
35-188	6676-6680	will	_	_
35-189	6681-6689	actively	_	_
35-190	6690-6696	switch	_	_
35-191	6697-6704	between	_	_
35-192	6705-6714	different	_	_
35-193	6715-6723	versions	_	_
35-194	6724-6726	of	_	_
35-195	6727-6732	MXNet	_	_
35-196	6732-6733	,	_	_
35-197	6734-6740	please	_	_
35-198	6741-6747	follow	_	_
35-199	6748-6751	3.5	_	_
35-200	6752-6759	instead	_	_
35-201	6760-6762	of	_	_
35-202	6763-6766	3.4	_	_
35-203	6766-6767	\*	_	_
35-204	6767-6768	\*	_	_
35-205	6768-6769	\*	_	_
35-206	6771-6772	`	_	_
35-207	6772-6773	`	_	_
35-208	6773-6774	`	_	_
35-209	6776-6778	cd	_	_
35-210	6779-6785	python	_	_
35-211	6787-6791	sudo	_	_
35-212	6792-6798	python	_	_
35-213	6799-6807	setup.py	_	_
35-214	6808-6815	install	_	_
35-215	6817-6818	`	_	_
35-216	6818-6819	`	_	_
35-217	6819-6820	`	_	_
35-218	6822-6825	3.6	_	_
35-219	6826-6829	For	_	_
35-220	6830-6838	advanced	_	_
35-221	6839-6844	users	_	_
35-222	6844-6845	,	_	_
35-223	6846-6849	you	_	_
35-224	6850-6853	may	_	_
35-225	6854-6857	put	_	_
35-226	6858-6862	your	_	_
35-227	6863-6869	Python	_	_
35-228	6870-6876	packge	_	_
35-229	6877-6881	into	_	_
35-230	6882-6883	`	_	_
35-231	6883-6884	.	_	_

#Text=/external/mxnet/$(YOUR\_MXNET\_PACKAGE)`, and modify `MXNET\_VERSION` in `.
36-1	6884-6885	/	_	_
36-2	6885-6893	external	_	_
36-3	6893-6894	/	_	_
36-4	6894-6899	mxnet	_	_
36-5	6899-6900	/	_	_
36-6	6900-6901	$	_	_
36-7	6901-6902	(	_	_
36-8	6902-6920	YOUR\_MXNET\_PACKAGE	_	_
36-9	6920-6921	)	_	_
36-10	6921-6922	`	_	_
36-11	6922-6923	,	_	_
36-12	6924-6927	and	_	_
36-13	6928-6934	modify	_	_
36-14	6935-6936	`	_	_
36-15	6936-6949	MXNET\_VERSION	_	_
36-16	6949-6950	`	_	_
36-17	6951-6953	in	_	_
36-18	6954-6955	`	_	_
36-19	6955-6956	.	_	_

#Text=/experiments/fcis/cfgs/\*.yaml` to `$(YOUR\_MXNET\_PACKAGE)`.
37-1	6956-6957	/	_	_
37-2	6957-6968	experiments	_	_
37-3	6968-6969	/	_	_
37-4	6969-6973	fcis	_	_
37-5	6973-6974	/	_	_
37-6	6974-6978	cfgs	_	_
37-7	6978-6979	/	_	_
37-8	6979-6980	\*	_	_
37-9	6980-6981	.	_	_
37-10	6981-6985	yaml	_	_
37-11	6985-6986	`	_	_
37-12	6987-6989	to	_	_
37-13	6990-6991	`	_	_
37-14	6991-6992	$	_	_
37-15	6992-6993	(	_	_
37-16	6993-7011	YOUR\_MXNET\_PACKAGE	_	_
37-17	7011-7012	)	_	_
37-18	7012-7013	`	_	_
37-19	7013-7014	.	_	_

#Text=Thus you can switch among different versions of MXNet quickly.  ### Demo  1.
38-1	7015-7019	Thus	_	_
38-2	7020-7023	you	_	_
38-3	7024-7027	can	_	_
38-4	7028-7034	switch	_	_
38-5	7035-7040	among	_	_
38-6	7041-7050	different	_	_
38-7	7051-7059	versions	_	_
38-8	7060-7062	of	_	_
38-9	7063-7068	MXNet	_	_
38-10	7069-7076	quickly	_	_
38-11	7076-7077	.	_	_
38-12	7079-7080	#	_	_
38-13	7080-7081	#	_	_
38-14	7081-7082	#	_	_
38-15	7083-7087	Demo	_	_
38-16	7089-7090	1	_	_
38-17	7090-7091	.	_	_

#Text=To run the demo with our trained model (on COCO trainval35k), please download the model manually from \[OneDrive\](https://1drv.ms/u/s!
39-1	7092-7094	To	_	_
39-2	7095-7098	run	_	_
39-3	7099-7102	the	_	_
39-4	7103-7107	demo	_	_
39-5	7108-7112	with	_	_
39-6	7113-7116	our	_	_
39-7	7117-7124	trained	_	_
39-8	7125-7130	model	_	_
39-9	7131-7132	(	_	_
39-10	7132-7134	on	_	_
39-11	7135-7139	COCO	_	_
39-12	7140-7151	trainval35k	_	_
39-13	7151-7152	)	_	_
39-14	7152-7153	,	_	_
39-15	7154-7160	please	_	_
39-16	7161-7169	download	_	_
39-17	7170-7173	the	_	_
39-18	7174-7179	model	_	_
39-19	7180-7188	manually	_	_
39-20	7189-7193	from	_	_
39-21	7194-7195	\[	_	_
39-22	7195-7203	OneDrive	_	_
39-23	7203-7204	\]	_	_
39-24	7204-7205	(	_	_
39-25	7205-7210	https	_	_
39-26	7210-7211	:	_	_
39-27	7211-7212	/	_	_
39-28	7212-7213	/	_	_
39-29	7213-7220	1drv.ms	_	_
39-30	7220-7221	/	_	_
39-31	7221-7222	u	_	_
39-32	7222-7223	/	_	_
39-33	7223-7224	s	_	_
39-34	7224-7225	!	_	_

#Text=Am-5JzdW2XHzhqMJZmVOEDgfde8\_tg) (Chinese users can also get it from \[BaiduYun\](https://pan.baidu.com/s/1geOHioV) with code `tmd4`), and put it under folder `model/`.
40-1	7225-7227	Am	_	_
40-2	7227-7228	-	_	_
40-3	7228-7252	5JzdW2XHzhqMJZmVOEDgfde8	_	_
40-4	7252-7253	\_	_	_
40-5	7253-7255	tg	_	_
40-6	7255-7256	)	_	_
40-7	7257-7258	(	_	_
40-8	7258-7265	Chinese	_	_
40-9	7266-7271	users	_	_
40-10	7272-7275	can	_	_
40-11	7276-7280	also	_	_
40-12	7281-7284	get	_	_
40-13	7285-7287	it	_	_
40-14	7288-7292	from	_	_
40-15	7293-7294	\[	_	_
40-16	7294-7302	BaiduYun	_	_
40-17	7302-7303	\]	_	_
40-18	7303-7304	(	_	_
40-19	7304-7309	https	_	_
40-20	7309-7310	:	_	_
40-21	7310-7311	/	_	_
40-22	7311-7312	/	_	_
40-23	7312-7325	pan.baidu.com	_	_
40-24	7325-7326	/	_	_
40-25	7326-7327	s	_	_
40-26	7327-7328	/	_	_
40-27	7328-7336	1geOHioV	_	_
40-28	7336-7337	)	_	_
40-29	7338-7342	with	_	_
40-30	7343-7347	code	_	_
40-31	7348-7349	`	_	_
40-32	7349-7353	tmd4	_	_
40-33	7353-7354	`	_	_
40-34	7354-7355	)	_	_
40-35	7355-7356	,	_	_
40-36	7357-7360	and	_	_
40-37	7361-7364	put	_	_
40-38	7365-7367	it	_	_
40-39	7368-7373	under	_	_
40-40	7374-7380	folder	_	_
40-41	7381-7382	`	_	_
40-42	7382-7387	model	_	_
40-43	7387-7388	/	_	_
40-44	7388-7389	`	_	_
40-45	7389-7390	.	_	_

#Text=Make sure it looks like this:  ```  .
41-1	7393-7397	Make	_	_
41-2	7398-7402	sure	_	_
41-3	7403-7405	it	_	_
41-4	7406-7411	looks	_	_
41-5	7412-7416	like	_	_
41-6	7417-7421	this	_	_
41-7	7421-7422	:	_	_
41-8	7424-7425	`	_	_
41-9	7425-7426	`	_	_
41-10	7426-7427	`	_	_
41-11	7429-7430	.	_	_

#Text=/model/fcis\_coco-0000.params  ``` 2.
42-1	7430-7431	/	_	_
42-2	7431-7436	model	_	_
42-3	7436-7437	/	_	_
42-4	7437-7446	fcis\_coco	_	_
42-5	7446-7447	-	_	_
42-6	7447-7451	0000	_	_
42-7	7451-7452	.	_	_
42-8	7452-7458	params	_	_
42-9	7460-7461	`	_	_
42-10	7461-7462	`	_	_
42-11	7462-7463	`	_	_
42-12	7464-7465	2	_	_
42-13	7465-7466	.	_	_

#Text=Run  ```  python .
43-1	7467-7470	Run	_	_
43-2	7472-7473	`	_	_
43-3	7473-7474	`	_	_
43-4	7474-7475	`	_	_
43-5	7477-7483	python	_	_
43-6	7484-7485	.	_	_

#Text=/fcis/demo.py  ```  ### Preparation for Training & Testing  1.
44-1	7485-7486	/	_	_
44-2	7486-7490	fcis	_	_
44-3	7490-7491	/	_	_
44-4	7491-7498	demo.py	_	_
44-5	7500-7501	`	_	_
44-6	7501-7502	`	_	_
44-7	7502-7503	`	_	_
44-8	7505-7506	#	_	_
44-9	7506-7507	#	_	_
44-10	7507-7508	#	_	_
44-11	7509-7520	Preparation	_	_
44-12	7521-7524	for	_	_
44-13	7525-7533	Training	_	_
44-14	7534-7535	&	_	_
44-15	7536-7543	Testing	_	_
44-16	7545-7546	1	_	_
44-17	7546-7547	.	_	_

#Text=Please download VOC 2012 dataset with additional annotations from \[SBD\](http://home.bharathh.info/pubs/codes/SBD/download.html).
45-1	7548-7554	Please	_	_
45-2	7555-7563	download	_	_
45-3	7564-7567	VOC	_	_
45-4	7568-7572	2012	_	_
45-5	7573-7580	dataset	_	_
45-6	7581-7585	with	_	_
45-7	7586-7596	additional	_	_
45-8	7597-7608	annotations	_	_
45-9	7609-7613	from	_	_
45-10	7614-7615	\[	_	_
45-11	7615-7618	SBD	_	_
45-12	7618-7619	\]	_	_
45-13	7619-7620	(	_	_
45-14	7620-7624	http	_	_
45-15	7624-7625	:	_	_
45-16	7625-7626	/	_	_
45-17	7626-7627	/	_	_
45-18	7627-7645	home.bharathh.info	_	_
45-19	7645-7646	/	_	_
45-20	7646-7650	pubs	_	_
45-21	7650-7651	/	_	_
45-22	7651-7656	codes	_	_
45-23	7656-7657	/	_	_
45-24	7657-7660	SBD	_	_
45-25	7660-7661	/	_	_
45-26	7661-7674	download.html	_	_
45-27	7674-7675	)	_	_
45-28	7675-7676	.	_	_

#Text=Move ```inst, cls, img``` folders to VOCdevit and make sure it looks like this:     Please use the train&val split in this repo, which follows the protocal of \[SDS\](https://www2.eecs.berkeley.edu/Research/Projects/CS/vision/shape/sds/).   ```  .data/VOCdevkit/VOCSDS/img/  .data/VOCdevkit/VOCSDS/inst/  .data/VOCdevkit/VOCSDS/cls/  ```   2.
46-1	7677-7681	Move	_	_
46-2	7682-7683	`	_	_
46-3	7683-7684	`	_	_
46-4	7684-7685	`	_	_
46-5	7685-7689	inst	_	_
46-6	7689-7690	,	_	_
46-7	7691-7694	cls	_	_
46-8	7694-7695	,	_	_
46-9	7696-7699	img	_	_
46-10	7699-7700	`	_	_
46-11	7700-7701	`	_	_
46-12	7701-7702	`	_	_
46-13	7703-7710	folders	_	_
46-14	7711-7713	to	_	_
46-15	7714-7722	VOCdevit	_	_
46-16	7723-7726	and	_	_
46-17	7727-7731	make	_	_
46-18	7732-7736	sure	_	_
46-19	7737-7739	it	_	_
46-20	7740-7745	looks	_	_
46-21	7746-7750	like	_	_
46-22	7751-7755	this	_	_
46-23	7755-7756	:	_	_
46-24	7761-7767	Please	_	_
46-25	7768-7771	use	_	_
46-26	7772-7775	the	_	_
46-27	7776-7781	train	_	_
46-28	7781-7782	&	_	_
46-29	7782-7785	val	_	_
46-30	7786-7791	split	_	_
46-31	7792-7794	in	_	_
46-32	7795-7799	this	_	_
46-33	7800-7804	repo	_	_
46-34	7804-7805	,	_	_
46-35	7806-7811	which	_	_
46-36	7812-7819	follows	_	_
46-37	7820-7823	the	_	_
46-38	7824-7832	protocal	_	_
46-39	7833-7835	of	_	_
46-40	7836-7837	\[	_	_
46-41	7837-7840	SDS	_	_
46-42	7840-7841	\]	_	_
46-43	7841-7842	(	_	_
46-44	7842-7847	https	_	_
46-45	7847-7848	:	_	_
46-46	7848-7849	/	_	_
46-47	7849-7850	/	_	_
46-48	7850-7854	www2	_	_
46-49	7854-7855	.	_	_
46-50	7855-7872	eecs.berkeley.edu	_	_
46-51	7872-7873	/	_	_
46-52	7873-7881	Research	_	_
46-53	7881-7882	/	_	_
46-54	7882-7890	Projects	_	_
46-55	7890-7891	/	_	_
46-56	7891-7893	CS	_	_
46-57	7893-7894	/	_	_
46-58	7894-7900	vision	_	_
46-59	7900-7901	/	_	_
46-60	7901-7906	shape	_	_
46-61	7906-7907	/	_	_
46-62	7907-7910	sds	_	_
46-63	7910-7911	/	_	_
46-64	7911-7912	)	_	_
46-65	7912-7913	.	_	_
46-66	7916-7917	`	_	_
46-67	7917-7918	`	_	_
46-68	7918-7919	`	_	_
46-69	7921-7922	.	_	_
46-70	7922-7926	data	_	_
46-71	7926-7927	/	_	_
46-72	7927-7936	VOCdevkit	_	_
46-73	7936-7937	/	_	_
46-74	7937-7943	VOCSDS	_	_
46-75	7943-7944	/	_	_
46-76	7944-7947	img	_	_
46-77	7947-7948	/	_	_
46-78	7950-7951	.	_	_
46-79	7951-7955	data	_	_
46-80	7955-7956	/	_	_
46-81	7956-7965	VOCdevkit	_	_
46-82	7965-7966	/	_	_
46-83	7966-7972	VOCSDS	_	_
46-84	7972-7973	/	_	_
46-85	7973-7977	inst	_	_
46-86	7977-7978	/	_	_
46-87	7980-7981	.	_	_
46-88	7981-7985	data	_	_
46-89	7985-7986	/	_	_
46-90	7986-7995	VOCdevkit	_	_
46-91	7995-7996	/	_	_
46-92	7996-8002	VOCSDS	_	_
46-93	8002-8003	/	_	_
46-94	8003-8006	cls	_	_
46-95	8006-8007	/	_	_
46-96	8009-8010	`	_	_
46-97	8010-8011	`	_	_
46-98	8011-8012	`	_	_
46-99	8015-8016	2	_	_
46-100	8016-8017	.	_	_

#Text=Please download \[COCO dataset\](http://mscoco.org/dataset/#download) and annotations for the 5k image \[minival\](https://dl.dropboxusercontent.com/s/o43o90bna78omob/instances\_minival2014.json.zip?
47-1	8018-8024	Please	_	_
47-2	8025-8033	download	_	_
47-3	8034-8035	\[	_	_
47-4	8035-8039	COCO	_	_
47-5	8040-8047	dataset	_	_
47-6	8047-8048	\]	_	_
47-7	8048-8049	(	_	_
47-8	8049-8053	http	_	_
47-9	8053-8054	:	_	_
47-10	8054-8055	/	_	_
47-11	8055-8056	/	_	_
47-12	8056-8066	mscoco.org	_	_
47-13	8066-8067	/	_	_
47-14	8067-8074	dataset	_	_
47-15	8074-8075	/	_	_
47-16	8075-8076	#	_	_
47-17	8076-8084	download	_	_
47-18	8084-8085	)	_	_
47-19	8086-8089	and	_	_
47-20	8090-8101	annotations	_	_
47-21	8102-8105	for	_	_
47-22	8106-8109	the	_	_
47-23	8110-8112	5k	_	_
47-24	8113-8118	image	_	_
47-25	8119-8120	\[	_	_
47-26	8120-8127	minival	_	_
47-27	8127-8128	\]	_	_
47-28	8128-8129	(	_	_
47-29	8129-8134	https	_	_
47-30	8134-8135	:	_	_
47-31	8135-8136	/	_	_
47-32	8136-8137	/	_	_
47-33	8137-8162	dl.dropboxusercontent.com	_	_
47-34	8162-8163	/	_	_
47-35	8163-8164	s	_	_
47-36	8164-8165	/	_	_
47-37	8165-8180	o43o90bna78omob	_	_
47-38	8180-8181	/	_	_
47-39	8181-8202	instances\_minival2014	_	_
47-39	8191-8198	minival	_	_
47-40	8202-8203	.	_	_
47-41	8203-8211	json.zip	_	_
47-42	8211-8212	?	_	_

#Text=dl=0) subset and \[val2014 minus minival (val35k)\](https://dl.dropboxusercontent.com/s/s3tw5zcg7395368/instances\_valminusminival2014.json.zip?
48-1	8212-8214	dl	_	_
48-2	8214-8215	=	_	_
48-3	8215-8216	0	_	_
48-4	8216-8217	)	_	_
48-5	8218-8224	subset	_	_
48-6	8225-8228	and	_	_
48-7	8229-8230	\[	_	_
48-8	8230-8237	val2014	_	_
48-9	8238-8243	minus	_	_
48-10	8244-8251	minival	_	_
48-11	8252-8253	(	_	_
48-12	8253-8259	val35k	_	_
48-13	8259-8260	)	_	_
48-14	8260-8261	\]	_	_
48-15	8261-8262	(	_	_
48-16	8262-8267	https	_	_
48-17	8267-8268	:	_	_
48-18	8268-8269	/	_	_
48-19	8269-8270	/	_	_
48-20	8270-8295	dl.dropboxusercontent.com	_	_
48-21	8295-8296	/	_	_
48-22	8296-8297	s	_	_
48-23	8297-8298	/	_	_
48-24	8298-8313	s3tw5zcg7395368	_	_
48-25	8313-8314	/	_	_
48-26	8314-8343	instances\_valminusminival2014	_	_
48-27	8343-8344	.	_	_
48-28	8344-8352	json.zip	_	_
48-29	8352-8353	?	_	_

#Text=dl=0).
49-1	8353-8355	dl	_	_
49-2	8355-8356	=	_	_
49-3	8356-8357	0	_	_
49-4	8357-8358	)	_	_
49-5	8358-8359	.	_	_

#Text=Make sure it looks like this:  ```  .data/coco/  .data/coco/annotations/instances\_valminusminival2014.json  .data/coco/annotations/instances\_minival2014.json  ```  3.
50-1	8360-8364	Make	_	_
50-2	8365-8369	sure	_	_
50-3	8370-8372	it	_	_
50-4	8373-8378	looks	_	_
50-5	8379-8383	like	_	_
50-6	8384-8388	this	_	_
50-7	8388-8389	:	_	_
50-8	8391-8392	`	_	_
50-9	8392-8393	`	_	_
50-10	8393-8394	`	_	_
50-11	8396-8397	.	_	_
50-12	8397-8401	data	_	_
50-13	8401-8402	/	_	_
50-14	8402-8406	coco	_	_
50-15	8406-8407	/	_	_
50-16	8409-8410	.	_	_
50-17	8410-8414	data	_	_
50-18	8414-8415	/	_	_
50-19	8415-8419	coco	_	_
50-20	8419-8420	/	_	_
50-21	8420-8431	annotations	_	_
50-22	8431-8432	/	_	_
50-23	8432-8461	instances\_valminusminival2014	_	_
50-23	8442-8461	valminusminival2014	_	_
50-24	8461-8462	.	_	_
50-25	8462-8466	json	_	_
50-26	8468-8469	.	_	_
50-27	8469-8473	data	_	_
50-28	8473-8474	/	_	_
50-29	8474-8478	coco	_	_
50-30	8478-8479	/	_	_
50-31	8479-8490	annotations	_	_
50-32	8490-8491	/	_	_
50-33	8491-8512	instances\_minival2014	_	_
50-33	8501-8512	minival2014	_	_
50-34	8512-8513	.	_	_
50-35	8513-8517	json	_	_
50-36	8519-8520	`	_	_
50-37	8520-8521	`	_	_
50-38	8521-8522	`	_	_
50-39	8524-8525	3	_	_
50-40	8525-8526	.	_	_

#Text=Please download ImageNet-pretrained ResNet-v1-101 model manually from \[OneDrive\](https://1drv.ms/u/s!
51-1	8527-8533	Please	_	_
51-2	8534-8542	download	_	_
51-3	8543-8562	ImageNet-pretrained	_	_
51-4	8563-8572	ResNet-v1	_	_
51-5	8572-8573	-	_	_
51-6	8573-8576	101	_	_
51-7	8577-8582	model	_	_
51-8	8583-8591	manually	_	_
51-9	8592-8596	from	_	_
51-10	8597-8598	\[	_	_
51-11	8598-8606	OneDrive	_	_
51-12	8606-8607	\]	_	_
51-13	8607-8608	(	_	_
51-14	8608-8613	https	_	_
51-15	8613-8614	:	_	_
51-16	8614-8615	/	_	_
51-17	8615-8616	/	_	_
51-18	8616-8623	1drv.ms	_	_
51-19	8623-8624	/	_	_
51-20	8624-8625	u	_	_
51-21	8625-8626	/	_	_
51-22	8626-8627	s	_	_
51-23	8627-8628	!	_	_

#Text=Am-5JzdW2XHzhqMEtxf1Ciym8uZ8sg), and put it under folder `.
52-1	8628-8630	Am	_	_
52-2	8630-8631	-	_	_
52-3	8631-8658	5JzdW2XHzhqMEtxf1Ciym8uZ8sg	_	_
52-4	8658-8659	)	_	_
52-5	8659-8660	,	_	_
52-6	8661-8664	and	_	_
52-7	8665-8668	put	_	_
52-8	8669-8671	it	_	_
52-9	8672-8677	under	_	_
52-10	8678-8684	folder	_	_
52-11	8685-8686	`	_	_
52-12	8686-8687	.	_	_

#Text=/model`.
53-1	8687-8688	/	_	_
53-2	8688-8693	model	_	_
53-3	8693-8694	`	_	_
53-4	8694-8695	.	_	_

#Text=Make sure it looks like this:  ```  .
54-1	8696-8700	Make	_	_
54-2	8701-8705	sure	_	_
54-3	8706-8708	it	_	_
54-4	8709-8714	looks	_	_
54-5	8715-8719	like	_	_
54-6	8720-8724	this	_	_
54-7	8724-8725	:	_	_
54-8	8727-8728	`	_	_
54-9	8728-8729	`	_	_
54-10	8729-8730	`	_	_
54-11	8732-8733	.	_	_

#Text=/model/pretrained\_model/resnet\_v1\_101-0000.params  ```  ### Usage  1.
55-1	8733-8734	/	_	_
55-2	8734-8739	model	_	_
55-3	8739-8740	/	_	_
55-4	8740-8756	pretrained\_model	_	_
55-5	8756-8757	/	_	_
55-6	8757-8766	resnet\_v1	_	_
55-7	8766-8767	\_	_	_
55-8	8767-8770	101	_	_
55-9	8770-8771	-	_	_
55-10	8771-8775	0000	_	_
55-11	8775-8776	.	_	_
55-12	8776-8782	params	_	_
55-13	8784-8785	`	_	_
55-14	8785-8786	`	_	_
55-15	8786-8787	`	_	_
55-16	8789-8790	#	_	_
55-17	8790-8791	#	_	_
55-18	8791-8792	#	_	_
55-19	8793-8798	Usage	_	_
55-20	8800-8801	1	_	_
55-21	8801-8802	.	_	_

#Text=All of our experiment settings (GPU #, dataset, etc.) are kept in yaml config files at folder `.
56-1	8803-8806	All	_	_
56-2	8807-8809	of	_	_
56-3	8810-8813	our	_	_
56-4	8814-8824	experiment	_	_
56-5	8825-8833	settings	_	_
56-6	8834-8835	(	_	_
56-7	8835-8838	GPU	_	_
56-8	8839-8840	#	_	_
56-9	8840-8841	,	_	_
56-10	8842-8849	dataset	_	_
56-11	8849-8850	,	_	_
56-12	8851-8854	etc	_	_
56-13	8854-8855	.	_	_
56-14	8855-8856	)	_	_
56-15	8857-8860	are	_	_
56-16	8861-8865	kept	_	_
56-17	8866-8868	in	_	_
56-18	8869-8873	yaml	_	_
56-19	8874-8880	config	_	_
56-20	8881-8886	files	_	_
56-21	8887-8889	at	_	_
56-22	8890-8896	folder	_	_
56-23	8897-8898	`	_	_
56-24	8898-8899	.	_	_

#Text=/experiments/fcis/cfgs`. 2.
57-1	8899-8900	/	_	_
57-2	8900-8911	experiments	_	_
57-3	8911-8912	/	_	_
57-4	8912-8916	fcis	_	_
57-5	8916-8917	/	_	_
57-6	8917-8921	cfgs	_	_
57-7	8921-8922	`	_	_
57-8	8922-8923	.	_	_
57-9	8924-8925	2	_	_
57-10	8925-8926	.	_	_

#Text=Two config files have been provided so far: FCIS@COCO with OHEM and FCIS@VOC without OHEM.
58-1	8927-8930	Two	_	_
58-2	8931-8937	config	_	_
58-3	8938-8943	files	_	_
58-4	8944-8948	have	_	_
58-5	8949-8953	been	_	_
58-6	8954-8962	provided	_	_
58-7	8963-8965	so	_	_
58-8	8966-8969	far	_	_
58-9	8969-8970	:	_	_
58-10	8971-8975	FCIS	_	_
58-11	8975-8976	@	_	_
58-12	8976-8980	COCO	_	_
58-13	8981-8985	with	_	_
58-14	8986-8990	OHEM	_	_
58-15	8991-8994	and	_	_
58-16	8995-8999	FCIS	_	_
58-17	8999-9000	@	_	_
58-18	9000-9003	VOC	_	_
58-19	9004-9011	without	_	_
58-20	9012-9016	OHEM	_	_
58-21	9016-9017	.	_	_

#Text=We use 8 and 4 GPUs to train models on COCO and on VOC, respectively. 3.
59-1	9018-9020	We	_	_
59-2	9021-9024	use	_	_
59-3	9025-9026	8	_	_
59-4	9027-9030	and	_	_
59-5	9031-9032	4	_	_
59-6	9033-9037	GPUs	_	_
59-7	9038-9040	to	_	_
59-8	9041-9046	train	_	_
59-9	9047-9053	models	_	_
59-10	9054-9056	on	_	_
59-11	9057-9061	COCO	_	_
59-12	9062-9065	and	_	_
59-13	9066-9068	on	_	_
59-14	9069-9072	VOC	_	_
59-15	9072-9073	,	_	_
59-16	9074-9086	respectively	_	_
59-17	9086-9087	.	_	_
59-18	9088-9089	3	_	_
59-19	9089-9090	.	_	_

#Text=To perform experiments, run the python scripts with the corresponding config file as input.
60-1	9091-9093	To	_	_
60-2	9094-9101	perform	_	_
60-3	9102-9113	experiments	_	_
60-4	9113-9114	,	_	_
60-5	9115-9118	run	_	_
60-6	9119-9122	the	_	_
60-7	9123-9129	python	_	_
60-8	9130-9137	scripts	_	_
60-9	9138-9142	with	_	_
60-10	9143-9146	the	_	_
60-11	9147-9160	corresponding	_	_
60-12	9161-9167	config	_	_
60-13	9168-9172	file	_	_
60-14	9173-9175	as	_	_
60-15	9176-9181	input	_	_
60-16	9181-9182	.	_	_

#Text=For example, to train and test FCIS on COCO with ResNet-v1-101, use the following command     ```     python experiments/fcis/fcis\_end2end\_train\_test.py --cfg experiments/fcis/cfgs/resnet\_v1\_101\_coco\_fcis\_end2end\_ohem.yaml     ```     A cache folder would be created automatically to save the model and the log under `output/fcis/coco/` or `output/fcis/voc/`. 4.
61-1	9183-9186	For	_	_
61-2	9187-9194	example	_	_
61-3	9194-9195	,	_	_
61-4	9196-9198	to	_	_
61-5	9199-9204	train	_	_
61-6	9205-9208	and	_	_
61-7	9209-9213	test	_	_
61-8	9214-9218	FCIS	_	_
61-9	9219-9221	on	_	_
61-10	9222-9226	COCO	_	_
61-11	9227-9231	with	_	_
61-12	9232-9241	ResNet-v1	_	_
61-13	9241-9242	-	_	_
61-14	9242-9245	101	_	_
61-15	9245-9246	,	_	_
61-16	9247-9250	use	_	_
61-17	9251-9254	the	_	_
61-18	9255-9264	following	_	_
61-19	9265-9272	command	_	_
61-20	9277-9278	`	_	_
61-21	9278-9279	`	_	_
61-22	9279-9280	`	_	_
61-23	9285-9291	python	_	_
61-24	9292-9303	experiments	_	_
61-25	9303-9304	/	_	_
61-26	9304-9308	fcis	_	_
61-27	9308-9309	/	_	_
61-28	9309-9335	fcis\_end2end\_train\_test.py	_	_
61-29	9336-9337	-	_	_
61-30	9337-9338	-	_	_
61-31	9338-9341	cfg	_	_
61-32	9342-9353	experiments	_	_
61-33	9353-9354	/	_	_
61-34	9354-9358	fcis	_	_
61-35	9358-9359	/	_	_
61-36	9359-9363	cfgs	_	_
61-37	9363-9364	/	_	_
61-38	9364-9373	resnet\_v1	_	_
61-39	9373-9374	\_	_	_
61-40	9374-9377	101	_	_
61-41	9377-9378	\_	_	_
61-42	9378-9405	coco\_fcis\_end2end\_ohem.yaml	_	_
61-43	9410-9411	`	_	_
61-44	9411-9412	`	_	_
61-45	9412-9413	`	_	_
61-46	9418-9419	A	_	_
61-47	9420-9425	cache	_	_
61-48	9426-9432	folder	_	_
61-49	9433-9438	would	_	_
61-50	9439-9441	be	_	_
61-51	9442-9449	created	_	_
61-52	9450-9463	automatically	_	_
61-53	9464-9466	to	_	_
61-54	9467-9471	save	_	_
61-55	9472-9475	the	_	_
61-56	9476-9481	model	_	_
61-57	9482-9485	and	_	_
61-58	9486-9489	the	_	_
61-59	9490-9493	log	_	_
61-60	9494-9499	under	_	_
61-61	9500-9501	`	_	_
61-62	9501-9507	output	_	_
61-63	9507-9508	/	_	_
61-64	9508-9512	fcis	_	_
61-65	9512-9513	/	_	_
61-66	9513-9517	coco	_	_
61-67	9517-9518	/	_	_
61-68	9518-9519	`	_	_
61-69	9520-9522	or	_	_
61-70	9523-9524	`	_	_
61-71	9524-9530	output	_	_
61-72	9530-9531	/	_	_
61-73	9531-9535	fcis	_	_
61-74	9535-9536	/	_	_
61-75	9536-9539	voc	_	_
61-76	9539-9540	/	_	_
61-77	9540-9541	`	_	_
61-78	9541-9542	.	_	_
61-79	9543-9544	4	_	_
61-80	9544-9545	.	_	_

#Text=Please find more details in config files and in our code.  ### Misc.
62-1	9546-9552	Please	_	_
62-2	9553-9557	find	_	_
62-3	9558-9562	more	_	_
62-4	9563-9570	details	_	_
62-5	9571-9573	in	_	_
62-6	9574-9580	config	_	_
62-7	9581-9586	files	_	_
62-8	9587-9590	and	_	_
62-9	9591-9593	in	_	_
62-10	9594-9597	our	_	_
62-11	9598-9602	code	_	_
62-12	9602-9603	.	_	_
62-13	9605-9606	#	_	_
62-14	9606-9607	#	_	_
62-15	9607-9608	#	_	_
62-16	9609-9613	Misc	_	_
62-17	9613-9614	.	_	_

#Text=Code has been tested under:  - Ubuntu 14.04 with a Maxwell Titan X GPU and Intel Xeon CPU E5-2620 v2 @ 2.10GHz - Windows Server 2012 R2 with 8 K40 GPUs and Intel Xeon CPU E5-2650 v2 @ 2.60GHz - Windows Server 2012 R2 with 4 Pascal Titan X GPUs and Intel Xeon CPU E5-2650 v4 @ 2.30GHz
63-1	9616-9620	Code	_	_
63-2	9621-9624	has	_	_
63-3	9625-9629	been	_	_
63-4	9630-9636	tested	_	_
63-5	9637-9642	under	_	_
63-6	9642-9643	:	_	_
63-7	9645-9646	-	_	_
63-8	9647-9653	Ubuntu	_	_
63-9	9654-9659	14.04	_	_
63-10	9660-9664	with	_	_
63-11	9665-9666	a	_	_
63-12	9667-9674	Maxwell	_	_
63-13	9675-9680	Titan	_	_
63-14	9681-9682	X	_	_
63-15	9683-9686	GPU	_	_
63-16	9687-9690	and	_	_
63-17	9691-9696	Intel	_	_
63-18	9697-9701	Xeon	_	_
63-19	9702-9705	CPU	_	_
63-20	9706-9708	E5	_	_
63-21	9708-9709	-	_	_
63-22	9709-9713	2620	_	_
63-23	9714-9716	v2	_	_
63-24	9717-9718	@	_	_
63-25	9719-9726	2.10GHz	_	_
63-26	9727-9728	-	_	_
63-27	9729-9736	Windows	_	_
63-28	9737-9743	Server	_	_
63-29	9744-9748	2012	_	_
63-30	9749-9751	R2	_	_
63-31	9752-9756	with	_	_
63-32	9757-9758	8	_	_
63-33	9759-9762	K40	_	_
63-34	9763-9767	GPUs	_	_
63-35	9768-9771	and	_	_
63-36	9772-9777	Intel	_	_
63-37	9778-9782	Xeon	_	_
63-38	9783-9786	CPU	_	_
63-39	9787-9789	E5	_	_
63-40	9789-9790	-	_	_
63-41	9790-9794	2650	_	_
63-42	9795-9797	v2	_	_
63-43	9798-9799	@	_	_
63-44	9800-9807	2.60GHz	_	_
63-45	9808-9809	-	_	_
63-46	9810-9817	Windows	_	_
63-47	9818-9824	Server	_	_
63-48	9825-9829	2012	_	_
63-49	9830-9832	R2	_	_
63-50	9833-9837	with	_	_
63-51	9838-9839	4	_	_
63-52	9840-9846	Pascal	_	_
63-53	9847-9852	Titan	_	_
63-54	9853-9854	X	_	_
63-55	9855-9859	GPUs	_	_
63-56	9860-9863	and	_	_
63-57	9864-9869	Intel	_	_
63-58	9870-9874	Xeon	_	_
63-59	9875-9878	CPU	_	_
63-60	9879-9881	E5	_	_
63-61	9881-9882	-	_	_
63-62	9882-9886	2650	_	_
63-63	9887-9889	v4	_	_
63-64	9890-9891	@	_	_
63-65	9892-9899	2.30GHz	_	_